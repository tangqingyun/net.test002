<?xml version="1.0"?>
<doc>
    <assembly>
        <name>uni2uni.com.IBLL</name>
    </assembly>
    <members>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.InsertCard(uni2uni.com.Model.BaiBian.Entity.Entity_Card)">
            <summary>
            添加一个礼品卡
            </summary>
            <param name="ettCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.UpdateCard(uni2uni.com.Model.BaiBian.Entity.Entity_Card)">
            <summary>
            修改一个礼品卡
            </summary>
            <param name="ettCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.UpdateCardByExchangeCardTradeID(System.Guid,System.Byte)">
            <summary>
            取消某换卡记录，修改卡对象状态
            </summary>
            <param name="cardID">礼品卡ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SaleCard(System.Collections.Generic.IList{uni2uni.com.Model.BaiBian.Entity.Entity_Card},uni2uni.com.Model.BaiBian.Entity.Entity_CardTrade)">
            <summary>
            售卡时批量修改卡状态
            </summary>
            <param name="ettCardList"></param>
            <param name="ettCardTrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.DeleteCard(System.Guid)">
            <summary>
            根据ID删除一个礼品卡
            </summary>
            <param name="cardID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.GetCardByCardCodeAndPwd(System.String,System.String)">
            <summary>
            根据卡号和密码获得卡片实体
            </summary>
            <param name="cardCode"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SelectCardByCardID(System.Guid)">
            <summary>
            根据礼品卡ID获得礼品卡信息
            </summary>
            <param name="cardID">礼品卡ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SelectCardByCardCode(System.String)">
            <summary>
            根据礼品卡号获得礼品卡信息
            </summary>
            <param name="cardCode">卡号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SelectCardByCardSortAndCount(System.Guid,System.Int32)">
            <summary>
            根据卡种数量和状态搜索未售出的卡信息
            </summary>
            <param name="cardSortID">卡种ID</param>
            <param name="count">数量</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SelectCardByCardSortAndCardTrade(System.Guid,System.Guid)">
            <summary>
            根据卡类型和售卡记录ID查询
            </summary>
            <param name="cardSortID">卡种ID</param>
            <param name="cardTradeID">售卡记录ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SelectCardByExchangeCardTradeID(System.Guid)">
            <summary>
            根据礼品卡换卡记录ID获得原卡信息
            </summary>
            <param name="exchangeCardTradeID">换卡记录ID</param>
            <returns>卡详情</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SaleCardSendMessage(System.String,uni2uni.com.Model.BaiBian.Entity.Entity_Card,System.Collections.Generic.IList{uni2uni.com.Model.BaiBian.Entity.Entity_Card})">
            <summary>
            为某换卡记录发送短信
            </summary>
            <param name="mobile"></param>
            <param name="ettCard"></param>
            <param name="ettCardList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICard.SelectCardByCardTradeID(System.Guid)">
            <summary>
            根据售卡记录ID查询
            </summary>
            <param name="cardTradeID">售卡记录ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectAllCardSort">
            <summary>
            获得所有卡种列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectCardSortByStatus(System.Byte)">
            <summary>
            根据状态获得所有卡种列表
            </summary>
            <param name="isDel">状态（0：删除 1：正常）</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectCardSortByCardSortID(System.Guid)">
            <summary>
            根据卡种ID获得卡种实体信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectCardSortByIDList(System.String)">
            <summary>
            根据卡种ID列表获得卡种实体信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectCardSortByMaxPrice(System.Int32)">
            <summary>
            检索价格不超过某值的卡片信息
            </summary>
            <param name="maxPrice"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.InsertCardSort(uni2uni.com.Model.BaiBian.Entity.Entity_CardSort)">
            <summary>
            添加一条卡种记录
            </summary>
            <param name="entityCardSort">卡种实体</param>
            <returns>是、否</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.UpdateCardSort(uni2uni.com.Model.BaiBian.Entity.Entity_CardSort)">
            <summary>
            修改一条卡种记录
            </summary>
            <param name="entityCardSort">卡种实体</param>
            <returns>是、否</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectAllCardSortShowStatus">
            <summary>
            获得所有卡种列表(包含状态信息)
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardSort.SelectCardSortByCardSortName(System.String)">
            <summary>
            根据卡种名称获得卡种实体信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTrade.InsertCardTrade(uni2uni.com.Model.BaiBian.Entity.Entity_CardTrade)">
            <summary>
            添加一个购卡记录
            </summary>
            <param name="ettCardTrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTrade.BuyCard(uni2uni.com.Model.BaiBian.Entity.Entity_CardTrade,System.Collections.Generic.IList{uni2uni.com.Model.BaiBian.Entity.Entity_CardTradeDetail},uni2uni.com.Model.BaiBian.Entity.Entity_Card)">
            <summary>
            购卡
            </summary>
            <param name="ettCardTrade">购卡记录</param>
            <param name="ettCardTradeDetailList">购卡详情</param>
            <param name="ettCard">兑换原卡信息（如果是购卡则此值为null）</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTrade.UpdateCardTrade(uni2uni.com.Model.BaiBian.Entity.Entity_CardTrade)">
            <summary>
            修改一个购卡记录
            </summary>
            <param name="ettCardTrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTrade.DeleteCardTrade(System.Guid)">
            <summary>
            根据ID删除一个购卡记录
            </summary>
            <param name="cardTradeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTrade.SelectCardTradeByCardTradeID(System.Guid)">
            <summary>
            根据购卡记录ID获得购卡记录信息
            </summary>
            <param name="cardTradeID">购卡记录ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTrade.SelectCardTradeByEntity(uni2uni.com.Model.BaiBian.Entity.Entity_CardTrade)">
            <summary>
            按条件查询
            </summary>
            <param name="ettCardTrade">条件实体</param>
            <returns>IList</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTradeDetail.InsertCardTradeDetail(uni2uni.com.Model.BaiBian.Entity.Entity_CardTradeDetail)">
            <summary>
            添加一个购卡记录详情
            </summary>
            <param name="ettCardTradeDetail"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTradeDetail.UpdateCardTradeDetail(uni2uni.com.Model.BaiBian.Entity.Entity_CardTradeDetail)">
            <summary>
            修改一个购卡记录详情
            </summary>
            <param name="ettCardTradeDetail"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTradeDetail.DeleteCardTradeDetail(System.Guid)">
            <summary>
            根据ID删除一个购卡记录详情
            </summary>
            <param name="cardTradeDetailID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTradeDetail.SelectCardTradeDetailByCardTradeDetailID(System.Guid)">
            <summary>
            根据购卡记录详情ID获得购卡记录详情信息
            </summary>
            <param name="cardTradeDetailID">购卡记录详情ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ICardTradeDetail.SelectCardTradeDetailByCardTradeID(System.Guid)">
            <summary>
            根据所属购卡记录ID获得购卡记录
            </summary>
            <param name="cardTradeID">所属购卡记录ID</param>
            <returns>IList</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProduct.SelectProductBySuitID(System.Guid)">
            <summary>
            根据套餐ID获得产品信息
            </summary>
            <param name="suitID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProduct.SelectProductByProductID(System.Guid)">
            <summary>
            根据产品ID查询产品信息
            </summary>
            <param name="productID">产品ID</param>
            <returns>Entity_Product</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProduct.InsertProduct(uni2uni.com.Model.BaiBian.Entity.Entity_Product)">
            <summary>
            添加一条产品记录
            </summary>
            <param name="entityCardSort">产品实体</param>
            <returns>是、否</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProduct.UpdateProduct(uni2uni.com.Model.BaiBian.Entity.Entity_Product)">
            <summary>
            修改一条产品记录
            </summary>
            <param name="entityCardSort">产品实体</param>
            <returns>是、否</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductSuitRelation.GetProductSuitRelationByProductIDAndSuitID(System.Guid,System.Guid)">
            <summary>
            根据套餐ID以及产品ID获取该产品在套餐中的数量
            </summary>
            <param name="ProductID">产品ID</param>
            <param name="SuitID">套餐ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductSuitRelation.GetProductSuitRelationBySuitID(System.Guid)">
            <summary>
            根据套餐ID号查询套餐产品关系信息
            </summary>
            <param name="SuitID">套餐ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductSuitRelation.GetProductSuitRelationByProductID(System.Guid)">
            <summary>
            根据产品ID获取该产品在套餐中的数量
            </summary>
            <param name="productID">产品ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductSuitRelation.DeleteProductSuitRelationByProductID(System.Guid)">
            <summary>
            根据产品ID删除套餐产品关系信息
            </summary>
            <param name="productID">产品ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductSuitRelation.InsertProductSuitRelation(uni2uni.com.Model.BaiBian.Entity.Entity_ProductSuitRelation)">
            <summary>
            添加一条
            </summary>
            <param name="ett_ProductSuitRelation">关系实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTrade.InsertProductTrade(uni2uni.com.Model.BaiBian.Entity.Entity_ProductTrade,System.Collections.Generic.IList{uni2uni.com.Model.BaiBian.Entity.Entity_ProductTradeDetail})">
            <summary>
            添加提货记录
            </summary>
            <param name="Entity_ProductTrade">提货记录信息</param>
            <param name="Ilist">提货记录产品列表</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTrade.GetProductTradeByCardID(System.Guid)">
            <summary>
            根据礼品卡的标识号获取提货记录
            </summary>
            <param name="CardID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTrade.GetProductTradeByProductTradeID(System.Guid)">
            <summary>
            根据提货记录ID查询
            </summary>
            <param name="productTradeID">提货记录ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTrade.UpdateProductTrade(uni2uni.com.Model.BaiBian.Entity.Entity_ProductTrade)">
            <summary>
            修改提货记录
            </summary>
            <param name="ettProductTrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTrade.GetEntityProductTradeByCardID(System.Guid)">
            <summary>
            查询提货记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTrade.GetEntityProductTradeByCondition(uni2uni.com.Model.BaiBian.Entity.BEntity_ProductTradeSearch)">
            <summary>
            根据条件查询查询记录
            </summary>
            <param name="entity_Search">查询条件实体</param>
            <returns>结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTradeDetail.GetProductTradeDetailByProductTradeID(System.Guid)">
            <summary>
            根据提货记录ID查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTradeDetail.GetProductTradeDetailByProductTradeIDAndStatus(System.Guid,System.Byte)">
            <summary>
            根据提货记录ID 提货状态 查询
            </summary>
            <param name="productTradeID">提货记录ID</param>
            <param name="status">提货状态</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTradeDetail.UpdateProductTradeDetail(uni2uni.com.Model.BaiBian.Entity.Entity_ProductTradeDetail)">
            <summary>
            修改提货记录详细信息
            </summary>
            <param name="ettProductTradeDetail">实体</param>
            <returns>bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.IProductTradeDetail.GetProductTradeDetailByProductTradeDetailID(System.Guid)">
            <summary>
            根据详细信息ID查询
            </summary>
            <param name="productTradeDetailID">详细信息ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ISuit.GetSuitByCardCode(System.String)">
            <summary>
            根据礼品卡号获取该礼品的得套餐信息
            </summary>
            <param name="strCardCode">礼品卡号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ISuit.SelectSuitByCardSortID(System.Guid)">
            <summary>
            根据卡种ID获得套餐列表
            </summary>
            <param name="cardSortID">卡种ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ISuit.SelectSuitAll">
            <summary>
            获得所有套餐
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ISuit.GetSuitBySuitID(System.Guid)">
            <summary>
            根据套餐ID号获取套餐信息
            </summary>
            <param name="SuitID">套餐ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ISuit.InsertSuit(uni2uni.com.Model.BaiBian.Entity.Entity_Suit)">
            <summary>
            添加一条套餐记录
            </summary>
            <param name="entityCardSort">套餐实体</param>
            <returns>是、否</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.BaiBian.ISuit.UpdateSuit(uni2uni.com.Model.BaiBian.Entity.Entity_Suit)">
            <summary>
            修改一条套餐记录
            </summary>
            <param name="entityCardSort">套餐实体</param>
            <returns>是、否</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBeforehandRecord">
            <summary>
            预付费逻辑层实现
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBeforehandRecord.GetBeforehandRecordByServiceID(System.Guid)">
            <summary>
            通过需求ID查询预付费
            </summary>
            <param name="serviceID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBM">
            <summary>
            IBM接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBM.GetBMList">
            <summary>
            得到全部BM列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBM.AddBM(uni2uni.com.Model.CalculateCharge.Entity.Entity_BM)">
            <summary>
            增加BM信息，包括账户信息
            </summary>
            <param name="bm"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBM.UpdateBM(uni2uni.com.Model.CalculateCharge.Entity.Entity_BM)">
            <summary>
            修改BM信息，包括停用
            </summary>
            <param name="bm"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBM.GetBMByBMID(System.Guid)">
            <summary>
            通过ID获得一条BM记录
            </summary>
            <param name="bmID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBM.GetBMByCondition(uni2uni.com.Model.CalculateCharge.BEntity_BMQueryCondition)">
            <summary>
            根据查询条件查询BM信息
            </summary>
            <param name="conditon">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBM.GetBMByName(System.String)">
            <summary>
            通过BM名称获得一条BM记录
            </summary>
            <param name="strBMName"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMBuyRecord">
            <summary>
            IBMBuyRecord接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMBuyRecord.AddBMBuyRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMBuyRecord)">
            <summary>
            增加BM消费记录
            </summary>
            <param name="bm"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMBuyRecord.GetBMBuyRecordByCondition(uni2uni.com.Model.CalculateCharge.BEntity_BuyRecordQueryCondition)">
            <summary>
            根据条件查询BM购买记录信息
            </summary>
            <param name="conditon">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMBuyRecord.GetBMBuyRecordByBMID(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            按BMID查询BM充值记录
            </summary>
            <param name="bmid">BMID</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>所有BM充值记录</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles">
            <summary>
            BM扣费规则数据层接口实现
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.AddConsumeRoles(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMConsumeRoles)">
            <summary>
            增加BM扣费规则信息
            </summary>
            <param name="consumeRoles">扣费规则</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.AddConsumeRolesList(System.Collections.Generic.IList{uni2uni.com.Model.CalculateCharge.Entity.Entity_BMConsumeRoles})">
            <summary>
            添加服务集合
            </summary>
            <param name="entityList">服务规则实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.UpdateConsumeRoles(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMConsumeRoles)">
            <summary>
            修改BM扣费规则信息
            </summary>
            <param name="consumeRoles">扣费规则</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.DeleteConsumeRoles(System.Guid)">
            <summary>
            删除一条BM扣费规则记录
            </summary>
            <param name="ruleId"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.GetBMConsumeRolesByBMID(System.Guid)">
            <summary>
            通过BMID获得BM扣费规则记录
            </summary>
            <param name="bmID">BMID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.GetBMConsumeRolesByBMIDAndLevelID(System.Guid,System.Guid)">
            <summary>
            通过BMID和LevelId获得BM扣费规则记录
            </summary>
            <param name="bmID">BMID</param>
            <param name="levelId">LevelId</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.GetBMConsumeRolesByRuleId(System.Guid)">
            <summary>
            通过RuleId获得一条BM扣费规则记录
            </summary>
            <param name="ruleId">规则ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.GetMemberAllServicesByMemberID(System.Guid)">
            <summary>
            根据会员查询该会员拥有的所有服务
            </summary>
            <param name="MemberID">会员ID号</param>
            <returns>服务列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.GetMemberAllServicesByMemberID(System.Guid,System.Int32)">
            <summary>
            根据会员查询该会员拥有的所有服务
            </summary>
            <param name="MemberID">会员ID号</param>
            <param name="RuleState">规则状态</param>
            <returns>服务列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.GetBMAllServicesByBMID(System.Guid)">
            <summary>
            根据BMID查询该BM拥有的所有服务
            </summary>
            <param name="BMID">BMID</param>
            <returns>服务列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.UpdateBMConsumeRolesStateAndMoney(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMConsumeRoles)">
            <summary>
            修改包月服务的状态
            </summary>
            <param name="ruleId">规则ID</param>
            <param name="StateID">状态ID</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.ExtendServicesMonth(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMConsumeRoles)">
            <summary>
            秘书服务续费一个月
            </summary>
            <param name="consumeRoles">包月规则实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMConsumeRoles.UpdateBMConsumeRolesMember(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMConsumeRoles)">
            <summary>
            添加或者修改扣费规则的时候，更新会员账户中该规则已经消费的金额
            </summary>
            <param name="consumeRoles">扣费规则实体</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMLinkMan">
            <summary>
            IBMLinkMan接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMLinkMan.AddBMLinkMan(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMLinkMan)">
            <summary>
            增加BM联系人/负责人信息
            </summary>
            <param name="bmLinkman">联系人/负责人</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMLinkMan.UpdateBMLinkMan(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMLinkMan)">
            <summary>
            修改BM联系人/负责人信息
            </summary>
            <param name="bmLinkman">联系人/负责人</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMLinkMan.UpdateBMPrincipal(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMLinkMan)">
            <summary>
            修改BM联系人信息
            </summary>
            <param name="bmLinkman">联系人/负责人</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMLinkMan.GetBMByBMID(System.Guid,System.Int32)">
            <summary>
            通过ID获得一条BM联系人/负责人记录
            </summary>
            <param name="bmID">BMID</param>
            <param name="isPrincipal">是否负责人（1-是，2-否）</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMRemindOfTimes">
            <summary>
            IBMRemindOfTimes接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMRemindOfTimes.AddRemindOfTimes(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMRemindOfTimes)">
            <summary>
            增加BM账户余额预警设置信息
            </summary>
            <param name="remindOfTimes">账单设置信息</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMRemindOfTimes.UpdateRemindOfTimes(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMRemindOfTimes)">
            <summary>
            修改BM账户余额预警设置信息
            </summary>
            <param name="remindOfTimes">账单设置信息</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMRemindOfTimes.GetRemindOfTimesByBMID(System.Guid)">
            <summary>
            根据BMID查询BM账户余额预警设置信息
            </summary>
            <param name="bmID">BMID</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMSetBill">
            <summary>
            IBMSetBill接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMSetBill.AddSetBill(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMSetBill)">
            <summary>
            增加BM对账单设置信息
            </summary>
            <param name="setBill">账单设置信息</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMSetBill.UpdateSetBill(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMSetBill)">
            <summary>
            修改BM对账单设置信息
            </summary>
            <param name="setBill">账单设置信息</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMSetBill.GetSetBillByBMID(System.Guid)">
            <summary>
            根据BMID查询BM对账单设置信息
            </summary>
            <param name="bmID">BMID</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMStatementsDetails">
            <summary>
            对账单明细的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsDetails.GetBMStatementsDetailsList(System.Guid)">
            <summary>
            按对账主要信息ID查询BM对账单明细接口
            </summary>
            <param name="statementsInfoID">BM对账单明细ID</param>
            <returns>BM对账单明细实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsDetails.AddBMStatementsDetails(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMStatementsDetails)">
            <summary>
            添加BM对账单明细接口
            </summary>
            <param name="ettBMStatementsDetails">BM对账单明细实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsDetails.UpdateBMStatementsDetails(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMStatementsDetails)">
            <summary>
            修改BM对账单明细接口
            </summary>
            <param name="ettBMStatementsDetails">BM对账单明细实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IBMStatementsInfo">
            <summary>
            对账主要信息的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsInfo.GetBMStatementsInfoList(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMStatementsInfo)">
            <summary>
            按条件查询BM对账主要信息接口
            </summary>
            <param name="ettBMStatementsInfo">BM对账主要信息实体</param>
            <returns>BM对账主要信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsInfo.GetBMStatementsInfoByBMID(System.Guid)">
            <summary>
            查询此BM最后对账单信息接口
            </summary>
            <param name="BMID">BMID</param>
            <returns>BM对账主要信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsInfo.GetBMStatementsInfoByBMStatementsInfoID(System.Guid)">
            <summary>
            查询此BM最后对账单信息接口，通过ID
            </summary>
            <param name="statementsInfoID">对账单ID</param>
            <returns>BM对账主要信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsInfo.AddBMStatementsInfo(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMStatementsInfo)">
            <summary>
            添加BM对账主要信息接口
            </summary>
            <param name="ettBMStatementsInfo">BM对账主要信息实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IBMStatementsInfo.UpdateBMStatementsInfo(uni2uni.com.Model.CalculateCharge.Entity.Entity_BMStatementsInfo)">
            <summary>
            修改BM对账主要信息接口
            </summary>
            <param name="ettBMStatementsInfo">BM对账主要信息实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount">
            <summary>
            个人账户基本信息的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.GetPersonalAccountList(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalAccount)">
            <summary>
            按条件查询个人账户基本信息接口
            </summary>
            <param name="ettPersonalAccount">个人账户基本信息实体</param>
            <returns>个人账户基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.GetPersonalAccountByID(System.Guid)">
            <summary>
            按个人账户ID查询
            </summary>
            <param name="personalAccountID">个人账户基本信息ID</param>
            <returns>个人账户基本信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.GetPersonalAccountByCardCode(System.String)">
            <summary>
            按秘书卡号查询
            </summary>
            <param name="cardCode">秘书卡号</param>
            <returns>个人账户基本信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.AddPersonalAccount(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalAccount)">
            <summary>
            添加个人账户基本信息接口
            </summary>
            <param name="ettPersonalAccount">个人账户基本信息实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.UpdatePersonalAccount(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalAccount)">
            <summary>
            修改个人账户基本信息接口
            </summary>
            <param name="ettPersonalAccount">个人账户基本信息实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.GetAllAccountInfo(System.Guid)">
            <summary>
            需求支付账户余额列表
            </summary>
            <param name="memberID">用户ID</param>
            <returns>个人账户基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.CalculateCharge(System.Guid,System.Guid,System.Guid,System.String,System.Decimal,System.Decimal,System.Int32,System.Guid)">
            <summary>
            计费
            </summary>
            <param name="memberID">用户ID</param>
            <param name="operatorID">操作员ID</param>
            <param name="serviceID">需求ID</param>
            <param name="cardIDList">指定的秘书卡号，可为多个</param>
            <param name="expendMin">消费区间最小值</param>
            <param name="expendNum">消费数</param>
            <param name="expendType">支付类型 1 记时 2 次数 3 包月时 4 包月次 5 扣月租费</param>
            <param name="ruleId">规则ID</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalAccount.SaveBeforehandRecord(System.Collections.Generic.IList{System.Object})">
            <summary>
            保存预付费信息及账户变化信息
            </summary>
            <param name="objList">预付费信息及账户变化信息列表</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IPersonalBeforehandRecord">
            <summary>
            个人账户预付费的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalBeforehandRecord.GetPersonalBeforehandRecordByServiceID(System.Guid)">
            <summary>
            按需求ID查询个人账户预付费
            </summary>
            <param name="serviceID">需求ID</param>
            <returns>个人账户预付费列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalBeforehandRecord.InsertPersonalBeforehandRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalBeforehandRecord)">
            <summary>
            添加一条
            </summary>
            <param name="ettPersonalBeforehandRecord">个人账户预付费</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalBeforehandRecord.DeletePersonalBeforehandRecord(System.Guid)">
            <summary>
            按需求ID删除
            </summary>
            <param name="serviceID">需求ID</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord">
            <summary>
            个人账户消费记录的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.GetPersonalExpendRecordList(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalExpendRecord)">
            <summary>
            按条件查询个人账户消费记录接口
            </summary>
            <param name="ettPersonalExpendRecord">个人账户消费记录实体</param>
            <returns>个人账户消费记录实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.GetPersonalExpendRecordListByBMID(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            按BMID查询消费记录
            </summary>
            <param name="bmid">BMID</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>消费记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.AddPersonalExpendRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalExpendRecord)">
            <summary>
            添加个人账户消费记录接口
            </summary>
            <param name="ettPersonalExpendRecord">个人账户消费记录实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.UpdatePersonalExpendRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalExpendRecord)">
            <summary>
            修改个人账户消费记录接口
            </summary>
            <param name="ettPersonalExpendRecord">个人账户消费记录实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.DeletePersonalExpendRecord(System.Guid)">
            <summary>
            删除个人账户消费记录接口
            </summary>
            <param name="serviceID">需求ID</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.SaveExpendRecord(System.Guid,System.Int32,System.Guid,System.Decimal)">
            <summary>
            保存消费记录
            </summary>
            <param name="serviceID">需求ID</param>
            <param name="serviceStatus">需求状态</param>
            <param name="operatorID">操作员ID</param>
            <param name="expendNum">实际消费数量</param>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.AddPersonalExpendRecordByObjectList(System.Collections.Generic.IList{System.Object})">
            <summary>
            添加消费记录
            </summary>
            <param name="objList">对象列表</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalExpendRecord.GetSumPersonalExpendByServicesId(System.Guid)">
            <summary>
            统计时间在时间段内提交一次以上需求客户数
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns>客户数</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.IPersonalTopUpRecord">
            <summary>
            个人账户充值记录的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalTopUpRecord.GetPersonalTopUpRecordList(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalTopUpRecord)">
            <summary>
            按条件查询个人账户充值记录接口
            </summary>
            <param name="ettPersonalTopUpRecord">个人账户充值记录实体</param>
            <returns>个人账户充值记录实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalTopUpRecord.AddPersonalTopUpRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalTopUpRecord)">
            <summary>
            添加个人账户充值记录接口
            </summary>
            <param name="ettPersonalTopUpRecord">个人账户充值记录实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IPersonalTopUpRecord.UpdatePersonalTopUpRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalTopUpRecord)">
            <summary>
            修改个人账户充值记录接口
            </summary>
            <param name="ettPersonalTopUpRecord">个人账户充值记录实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.AddRechargeableCard(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCard)">
            <summary>
            添加一条充值信息
            </summary>
            <param name="entity">充值卡信息实体</param>
            <returns>添加是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.GetRechargeableCardByCardCode(System.String)">
            <summary>
            根据充值卡号查询充值卡信息
            </summary>
            <param name="strCardCode">充值卡卡号</param>
            <returns>充值卡信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.GetRechargeableCardByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCard)">
            <summary>
            根据条件查询充值卡信息
            </summary>
            <param name="entity">查询条件实体集合</param>
            <returns>充值卡信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.GetRechargeableCardCountByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCard)">
            <summary>
            根据条件查询充值卡信息条数
            </summary>
            <param name="entity">查询条件实体集合</param>
            <returns>充值卡信息条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.UpdateRechargeableCard(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCard)">
            <summary>
            修改一条充值卡信息，主要是用于修改充值卡的状态
            </summary>
            <param name="entity">充值卡信息实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.UseRechargeableCard(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCard,System.String,System.String)">
            <summary>
            使用充值卡，并产生充值卡记录
            </summary>
            <param name="entity">充值卡信息实体</param>
            <param name="strUserType">使用者0个人，1BM</param>
            <param name="UserID">使用者的ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.GetRechargeableCardAccountByType(System.Int32)">
            <summary>
            根据卡类型查询出该卡类型所有的面额
            </summary>
            <param name="nType">卡类型0次数卡，1时间卡，2年卡，3月卡，4天卡</param>
            <returns>查询的结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.GetRechargeableCardAccountByType(System.Int32,System.Decimal)">
            <summary>
            根据卡类型和卡面额查询该卡的数量
            </summary>
            <param name="nType">卡类型0次数卡，1时间卡，2年卡，3月卡，4天卡</param>
            <param name="nAccount">卡面额</param>
            <returns>查询的结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCard.CheckRechargeableCard(System.String,System.String)">
            <summary>
            验证充值卡和密码
            </summary>
            <param name="strCardCode">充值卡卡号</param>
            <param name="strPassword">充值卡密码</param>
            <returns>充值卡信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardApplyRecord.AddRechargeableCardApplyRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardApplyRecord)">
            <summary>
            添加一条充值开卡记录信息
            </summary>
            <param name="entity">充值卡开卡信息实体</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardApplyRecord.GetRechargeableCardApplyRecordByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardApplyRecord)">
            <summary>
            根据条件获取充值卡开卡记录信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardApplyRecord.GetRechargeableCardApplyRecordCountByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardApplyRecord)">
            <summary>
            根据条件获取充值卡开卡记录信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>查询结果条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardSaleRecord.AddRechargeableCardSaleRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardSaleRecord)">
            <summary>
            添加一条充值售卡记录信息
            </summary>
            <param name="entity">充值卡售卡信息实体</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardSaleRecord.SaleRechargeableCard(System.Collections.Generic.IList{uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCard},System.Collections.Generic.IList{uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardSaleRecord})">
            <summary>
            进行售卡操作，改变卡的状态以及产生售卡记录
            </summary>
            <param name="cardList">充值卡实体集合</param>
            <param name="SalesList">充值卡记录实体集合</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardSaleRecord.GetRechargeableCardSaleRecordByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardSaleRecord)">
            <summary>
            根据条件获取充值卡售卡记录信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardSaleRecord.GetRechargeableCardSaleRecordCountByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_RechargeableCardSaleRecord)">
            <summary>
            根据条件获取充值卡售卡记录信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>查询结果条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IRechargeableCardSaleRecord.GetRechargeableCardSaleRecordByMainID(System.Guid)">
            <summary>
            根据每次售卡关联ID号查询每次售卡的卡详细信息
            </summary>
            <param name="MainID">关联ID号</param>
            <returns>售卡jilu信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.AddSecretaryCard(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCard)">
            <summary>
            添加一条秘书卡信息
            </summary>
            <param name="entity">秘书卡信息实体</param>
            <returns>添加是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.GetSecretaryCardByMemberID(System.Guid)">
            <summary>
            根据会员ID查询秘书卡信息
            </summary>
            <param name="memberID">会员ID</param>
            <returns>信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.GetSecretaryCardByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCard)">
            <summary>
            根据条件查询秘书卡信息
            </summary>
            <param name="entity">查询条件</param>
            <returns>已经分页的信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.GetSecretaryCardCountByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCard)">
            <summary>
            根据条件查询秘书卡信息
            </summary>
            <param name="entity">查询条件</param>
            <returns>查询信息的总条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.ActiveSecretaryCard(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCard,System.Guid)">
            <summary>
            激活秘书卡
            </summary>
            <param name="entity">秘书卡信息实体</param>
            <param name="emberID">会员ID号</param>
            <returns>激活是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.GetSecretaryCardByCardCode(System.String)">
            <summary>
            根据秘书卡号查询秘书卡信息实体
            </summary>
            <param name="strCardCode">秘书卡号</param>
            <returns>秘书卡信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.UpdateSecretaryCard(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCard)">
            <summary>
            修改一条秘书卡信息
            </summary>
            <param name="entity">秘书卡信息实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.SendSecretaryCard(System.Collections.Generic.IList{uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCard},System.Collections.Generic.IList{uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCardApplyRecord},System.Collections.Generic.IList{uni2uni.com.Model.CalculateCharge.Entity.Entity_PersonalAccount})">
            <summary>
            秘书卡发卡操作功能，并产生发卡记录，增加卡账户
            </summary>
            <param name="secretaryCardList">秘书卡实体集合</param>
            <param name="SecretaryCardApplyRecordList">秘书卡开卡实体集合</param>
            <param name="PersonalAccount">秘书卡账户实体集合</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCard.GetSecretaryCardByOrderId(System.String)">
            <summary>
            根据服务订单号获取会员信息
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCardApplyRecord.AddSecretaryCardApplyRecord(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCardApplyRecord)">
            <summary>
            添加一条充值发卡记录信息
            </summary>
            <param name="entity">秘书卡发卡信息实体</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCardApplyRecord.GetSecretaryCardApplyRecordByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCardApplyRecord)">
            <summary>
            根据条件获取秘书卡发卡记录信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCardApplyRecord.GetSecretaryCardApplyRecordCountByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_SecretaryCardApplyRecord)">
            <summary>
            根据条件获取秘书卡发卡记录信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>查询结果条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ISecretaryCardApplyRecord.GetSecretaryCardApplyRecordByMainID(System.Guid)">
            <summary>
            根据每次发卡关联ID号查询每次发卡的卡详细信息
            </summary>
            <param name="MainID">关联ID号</param>
            <returns>发卡jilu信息实体</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CalculateCharge.ITip">
            <summary>
            消费提示逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ITip.UpdateTip(uni2uni.com.Model.CalculateCharge.Entity_Tip)">
            <summary>
            修改提示语
            </summary>
            <param name="ettTip">提示语实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.ITip.GetTipByTipID(System.Guid)">
            <summary>
            查询提示语
            </summary>
            <param name="tipID">tipID</param>
            <returns>提示语实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IUniServices.AddUniServices(uni2uni.com.Model.CalculateCharge.Entity.Entity_UniServices)">
            <summary>
            添加一条联嘉服务信息
            </summary>
            <param name="entity">联嘉服务信息实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IUniServices.UpdateUniServices(uni2uni.com.Model.CalculateCharge.Entity.Entity_UniServices)">
            <summary>
            修改一条联嘉服务信息
            </summary>
            <param name="entity">联嘉服务信息实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IUniServices.GetAllUniServices">
            <summary>
            获取所有的联嘉服务信息
            </summary>
            <returns>返回信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IUniServices.GetUniServicesByUniServicesID(System.Guid)">
            <summary>
            根据ID号获取服务信息
            </summary>
            <param name="UniServicesID">服务ID号</param>
            <returns>信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IUniServices.GetUniServicesByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_UniServices)">
            <summary>
            根据条件查询服务信息信息
            </summary>
            <param name="entity">查询条件</param>
            <returns>已经分页的信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CalculateCharge.IUniServices.GetUniServicesCountByCondition(uni2uni.com.Model.CalculateCharge.Entity.Entity_UniServices)">
            <summary>
            根据条件查询服务信息条数
            </summary>
            <param name="entity">查询条件</param>
            <returns>查询信息的总条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILog.GetLogByLogID(System.Guid)">
            <summary>
            根据日志ID获取日志实体类
            </summary>
            <param name="CategoryID">类别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILog.InsertLog(uni2uni.com.Model.CMS.Entity.Entity_Log)">
            <summary>
            添加一条Log记录
            </summary>
            <param name="ettCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILog.DeleteLogByLogID(System.Guid)">
            <summary>
            根据日志ID删除一条记录
            </summary>
            <param name="LogID">日志ID</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CMS.ILevel">
            <summary>
            ILevel接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILevel.GetLevelByLevelID(System.Guid)">
            <summary>
            根据级别ID获取级别实体类
            </summary>
            <param name="LevelID">级别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILevel.InsertLevel(uni2uni.com.Model.CMS.Entity.Entity_Level)">
            <summary>
            添加一条Level记录
            </summary>
            <param name="ettLevel"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILevel.UpdateLevel(uni2uni.com.Model.CMS.Entity.Entity_Level)">
            <summary>
            更新一条Level记录
            </summary>
            <param name="ettLevel"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILevel.DeleteLevelByLevelID(System.Guid)">
            <summary>
            根据级别ID删除一条记录
            </summary>
            <param name="LevelID">级别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILevel.GetAllLevel">
            <summary>
            获得所有级别
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ILevel.GetLevelByLevelName(System.String)">
            <summary>
            根据级别名称获取信息
            </summary>
            <param name="LevelName">级别名称</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.CMS.ICategory">
            <summary>
            ICategory接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.GetCategoryByCategoryID(System.Guid)">
            <summary>
            根据类别ID获取类别实体类
            </summary>
            <param name="CategoryID">类别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.InsertCategory(uni2uni.com.Model.CMS.Entity.Entity_Category)">
            <summary>
            添加一条Category记录
            </summary>
            <param name="ettCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.UpdateCategory(uni2uni.com.Model.CMS.Entity.Entity_Category)">
            <summary>
            更新一条Category记录
            </summary>
            <param name="ettCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.DeleteCategoryByCategoryID(System.Guid)">
            <summary>
            根据类别ID删除一条记录
            </summary>
            <param name="CategoryID">类别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.GetAllCategory">
            <summary>
            获得所有分类
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.GetSubCategoryByParentID(System.Guid)">
            <summary>
            查询某分类下的所有子分类
            </summary>
            <param name="parentCategoryID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.GetFullPathName(System.String)">
            <summary>
            获得路径的名称
            </summary>
            <param name="fullPath"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.GetAllCategoryTree">
            <summary>
            获得分类树用于绑定下拉框，显示分类的层级关系
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ICategory.GetCategoryByKeyword(System.String)">
            <summary>
            根据关键字查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.GetNewsByNewsID(System.Guid)">
            <summary>
            根据新闻ID获取新闻信息
            </summary>
            <param name="NewsID">新闻ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.InsertNews(uni2uni.com.Model.CMS.Entity.Entity_News)">
            <summary>
            添加一条News记录
            </summary>
            <param name="ettNews"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.UpdateNews(uni2uni.com.Model.CMS.Entity.Entity_News)">
            <summary>
            更新一条News记录
            </summary>
            <param name="ettNews"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.DeleteNewsByNewsID(System.Guid)">
            <summary>
            根据新闻ID删除一条新闻记录
            </summary>
            <param name="NewsID">新闻ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.TransferNews(System.Guid,System.Guid)">
            <summary>
            批量转移文章
            </summary>
            <param name="oldCategoryID"></param>
            <param name="newCategoryID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.GetNewsByCondition(uni2uni.com.Model.CMS.Entity.BEntity_SearchNews,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            按查询条件搜索新闻
            </summary>
            <param name="ettSearchNews">搜索实体(Guid 类型的属性如果忽略其搜索条件则传入new Guid(),String 类型数据忽略查询条件传入null或者"",审批状态忽略查询条件传入null)</param>
            <param name="pagesize">页大小</param>
            <param name="pageid">页码</param>
            <param name="isFirstTime">是否分页触发(true：不是分页触发 返回null得到总量； false：分页触发 返回数据集 不用得到数量)</param>
            <param name="totalcount">返回总数</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.GetTop1NewsByCategoryID(System.Guid)">
            <summary>
            获得某分类的一条文章信息
            </summary>
            <param name="categoryID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INews.GetMessageTempletNews(System.String)">
            <summary>
            获得短信模板新闻
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INewsFileRelation.GetNewsFileRelationByNewsID(System.Guid)">
            <summary>
            根据新闻ID获取新闻文件关系信息
            </summary>
            <param name="NewsID">新闻ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INewsFileRelation.GetNewsFileInfo(System.Guid)">
            <summary>
            根据新闻ID获取新闻文件关系信息
            </summary>
            <param name="NewsID">新闻ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INewsFileRelation.InsertNewsFileRelation(uni2uni.com.Model.CMS.Entity.Entity_NewsFileRelation)">
            <summary>
            添加一条NewsFileRelation记录
            </summary>
            <param name="ettNewsFileRelation"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.INewsFileRelation.DeleteNewsFileRelationByNewsID(System.Guid)">
            <summary>
            根据新闻ID删除附件信息
            </summary>
            <param name="NewsID">新闻ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.IReview.GetReviewByReviewID(System.Guid)">
            <summary>
            根据评论ID获取评论信息
            </summary>
            <param name="ReviewID">评论ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.IReview.InsertReview(uni2uni.com.Model.CMS.Entity.Entity_Review)">
            <summary>
            添加一条Review记录
            </summary>
            <param name="ettReview"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.IReview.DeleteReviewByReviewID(System.Guid)">
            <summary>
            根据评论ID删除一条评论记录
            </summary>
            <param name="ReviewID">评论ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.IReview.GetReviewByNewsID(System.Guid)">
            <summary>
            根据新闻ID获得评论(按评论时间倒叙排列)
            </summary>
            <param name="newsID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IAirCompany.SelectAirCompanyAll">
            <summary>
            返回航空公司代码列表
            </summary>
            <returns>航空公司实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IAirCompany.GetAirCompanyByCode(System.String)">
            <summary>
            根据CompanyCode获得Entity_AirCompany
            </summary>
            <param name="companyCode">CompanyCode</param>
            <returns>Entity_AirCompany</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IAirlinePrice.SelectAirlinePriceAll">
            <summary>
            返回航空线路价格列表
            </summary>
            <returns>航空线路实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IAirport.SelectAirportAll">
            <summary>
            返回航空机场列表
            </summary>
            <returns>航空机场实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IAirport.BSelectAirportAll">
            <summary>
            返回航空机场列表
            </summary>
            <returns>航空机场实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IAirport.GetAirportByAirCode(System.String)">
            <summary>
            根据AirCode获得Entity_Airport实体
            </summary>
            <param name="airCode">AirCode</param>
            <returns>Entity_Airport实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICabinPrice.SelectCabinPriceAll">
            <summary>
            返回航空公司飞机基本信息列表
            </summary>
            <returns>航空公司飞机基本信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICabinPrice.GetCabinPriceByAirCompanyCodeAndCabin(System.String,System.String)">
            <summary>
            根据airCompanyCode和cabin获得Entity_CabinPrice
            </summary>
            <param name="airCompanyCode">airCompanyCode</param>
            <param name="cabin">cabin</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICabinPrice.GetCabinPriceByAirCompanyCodeAndCabin(System.String)">
            <summary>
            根据airCompanyCode和cabin获得Entity_CabinPrice
            </summary>
            <param name="cabin">cabin</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.SelectCheapTk_GoodTripAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.GetCheapTk_GoodTripByCondition(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据条件查询Entity_CheapTk_GoodTrip
            </summary>
            <param name="companyName"></param>
            <param name="leave"></param>
            <param name="arrive"></param>
            <param name="beginDate"></param>
            <param name="endDate"></param>
            <param name="tickclass"></param>
            <param name="flightNo"></param>
            <param name="tickBeginDate"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.InsertCheapTk(uni2uni.com.Model.Common.Entity.Entity_CheapTk_GoodTrip)">
            <summary>
            添加一条信息
            </summary>
            <param name="info">信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.UpdateCheapTk(uni2uni.com.Model.Common.Entity.Entity_CheapTk_GoodTrip)">
            <summary>
            修改一条信息
            </summary>
            <param name="info">信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.DeleteCheapTk(System.String)">
            <summary>
            删除一条信息
            </summary>
            <param name="FTID">信息ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.SelectAllCheapTkWithCondition(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得信息列表
            </summary>
            <returns>信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ICheapTk_GoodTrip.SelectCheapTk_GoodTripById(System.String)">
            <summary>
            获得特价信息
            </summary>
            <param name="strTid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetCityByID(System.Int32)">
            <summary>
            通过ID获得City信息
            </summary>
            <param name="CityID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectAllCity">
            <summary>
            获得所有城市信息
            </summary>
            <returns>城市实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectAllCityOrderByProvinceAndEnName">
            <summary>
            获得所有城市信息按省排序
            </summary>
            <returns>城市实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectAllCityOrderByEnName">
            <summary>
            获得所有城市信息
            </summary>
            <returns>城市实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectAllCityInternational">
            <summary>
            获取所有国际机场的城市信息
            </summary>
            <returns>城市实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectAllCityDomestic">
            <summary>
            获取所有国内机场的城市信息
            </summary>
            <returns>城市实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectAllGetTicketCityDomestic">
            <summary>
            获取所有国内机场的送票城市信息
            </summary>
            <returns>城市实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetCityByProvince(System.String)">
            <summary>
            通过省名获得城市列表
            </summary>
            <param name="CnProvinceName">中文省名称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectCityByCityName(System.String)">
            <summary>
            根据城市名称查询城市信息
            </summary>
            <param name="cityName">城市名称</param>
            <returns>城市实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.SelectCityByEnCityName(System.String)">
            <summary>
            根据英文城市名称查询城市信息
            </summary>
            <param name="enName">城市英文名称</param>
            <returns>城市实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetDitrictByDistrictID(System.Int32)">
            <summary>
            根据地区ID获得地区实体
            </summary>
            <param name="districtID">地区ID</param>
            <returns>地区实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetDistrictByCityID(System.Int32)">
            <summary>
            根据城市ID获得区信息
            </summary>
            <param name="cityID">城市ID</param>
            <returns>地区实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetAllDistrict">
            <summary>
            获取全部地区列表
            </summary>
            <returns>全部地区列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetAllProvince">
            <summary>
            获得所有的省份信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetProvinceByCnName(System.String)">
            <summary>
            根据省名称获得省信息
            </summary>
            <param name="cnName">省名称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetProvinceByID(System.Int32)">
            <summary>
            根据省ID获得省信息
            </summary>
            <param name="ID">ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetCityByProvinceID(System.Int32)">
            <summary>
            根据省ID获得城市
            </summary>
            <param name="ProvinceID">省ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetCityByAirCode(System.String)">
            <summary>
            根据airCode获得Entity_City实体
            </summary>
            <param name="airCode">airCode</param>
            <returns>Entity_City实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetAllCNCity">
            <summary>
            获取所有中国城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetAllEnCity">
            <summary>
            获取所有外国城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetCityList(System.Collections.Generic.IList{uni2uni.com.Model.Common.Entity.Entity_WebSiteCityRelation},System.Int32)">
            <summary>
            创建城市选择列表
            </summary>
            <param name="ettWebSiteCityRelationList">网站所在城市关联</param>
            <param name="orderby">0 按省排 1 按拼音排</param>
            <returns>html</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IArea.GetCityByName(System.String)">
            <summary>
            根据城市名获取省份
            </summary>
            <param name="cityName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFieldKey.GetStateName(System.Object,System.String)">
            <summary>
            获取状态名称
            </summary>
            <param name="strModelName">查询的实体（给需要查询的属性必须赋值）</param>
            <param name="strFiledValue">属性的名称</param>
            <returns>返回值对应的名称</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFieldKey.SelectStateName(System.String,System.String,System.String,System.String)">
            <summary>
            查询某个状态相对应的名称
            </summary>
            <param name="strDataBaseName">数据库名称</param>
            <param name="strTableName">表名</param>
            <param name="strFiledName">字段名</param>
            <param name="strFiledValue">字段值</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFieldKey.GetStateList(System.Object,System.String)">
            <summary>
            获取某个属性的所有状态
            </summary>
            <param name="obEntity">查询的实体</param>
            <param name="strAttributeName">属性的名称</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFriendLink.InsertFriendLink(uni2uni.com.Model.Common.Entity.Entity_FriendLink)">
            <summary>
            插入一个友情连接
            </summary>
            <param name="ettFriendLink"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFriendLink.UpdateFriendLink(uni2uni.com.Model.Common.Entity.Entity_FriendLink)">
            <summary>
            修改一个友情连接
            </summary>
            <param name="ettFriendLink"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFriendLink.DeleteFriendLink(System.Guid)">
            <summary>
            删除一个友情连接
            </summary>
            <param name="friendLinkID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFriendLink.GetFriendLinkByCondition(System.Byte,System.Byte,System.Int32,System.String)">
            <summary>
            根据类型和删除标识获得友情链接信息（按序列排序，相同序列按添加时间排序）
            </summary>
            <param name="type">类型（0：全部1：图片列表2：图文连接中的图片3:文字连接）</param>
            <param name="isDel">删除标识(1:前台显示,0:前台不显示,2:全部)</param>
            <param name="count">结果数量</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IFriendLink.GetFriendLinkByFriendLinkID(System.Guid)">
            <summary>
            根据友情连接ID获得友情连接信息
            </summary>
            <param name="friendLinkID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IOpeLog.GetModeOpe(System.Collections.Generic.List{uni2uni.com.Model.Log.ModelRoot},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得操作日志类的实体
            </summary>
            <param name="models">改变的实体列表</param>
            <param name="opid">操作员ID</param>
            <param name="opeType">操作类型</param>
            <param name="modelName">模块名称</param>
            <param name="functionName">功能名称</param>
            <param name="action">行动类别 增加 修改 删除</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IOpeLog.AddLogWithWebService(System.Collections.Generic.List{uni2uni.com.Model.Log.ModelRoot},System.String,System.String,System.String,System.String)">
            <summary>
            添加日志
            </summary>
            <param name="models">实体集合</param>
            <param name="opeType">操作描述</param>
            <param name="modelName">模块名称</param>
            <param name="functionName">功能名称</param>
            <param name="action">动作名称(新增、修改、删除)</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IPhase.InsertPhase(uni2uni.com.Model.Common.Entity.Entity_Phase)">
            <summary>
            添加一个销售漏斗记录
            </summary>
            <param name="Phase">销售漏斗实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IPhase.DeletePhase(System.Guid)">
            <summary>
            删除一个销售漏斗记录
            </summary>
            <param name="PhaseID">销售漏斗ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IPhase.UpdatePhase(uni2uni.com.Model.Common.Entity.Entity_Phase)">
            <summary>
            更新一个销售漏斗信息
            </summary>
            <param name="Phase">销售漏斗实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IPhase.SelectAllPhase">
            <summary>
            获得所有销售漏斗信息
            </summary>
            <returns>销售漏斗实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IPhase.SelectAllPhaseByPhaseID(System.Guid)">
            <summary>
            根据ID查询
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ITrain.GetReslutList(System.String,System.String)">
            <summary>
            车次 列车查询
            </summary>
            <param name="strSartStation">起始站名</param>
            <param name="strArrvieStation">到达站名 或车次</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ITrain.GetTrainPassStationDetailList(System.Int32)">
            <summary>
            根据车次编号获取该车次的详细信息
            </summary>
            <param name="nTrainID">车次编号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.ITrain.GetTrainInfo(System.String)">
            <summary>
            根据车次获得该车的基本信息
            </summary>
            <param name="strTrainNumber">车次</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadLog.InsertUploadLog(uni2uni.com.Model.Common.Entity.Entity_UploadLog)">
            <summary>
            添加一个上传文件日志
            </summary>
            <param name="ettUploadLog"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadLog.GetAllUploadLog">
            <summary>
            获得所有上传文件日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadLog.GetUploadLogByServiceID(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据ServiceID获得上传日志
            </summary>
            <param name="serviceID"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <param name="totalcount"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadLog.GetUploadLogByID(System.Guid)">
            <summary>
            根据ID获得上传文件信息
            </summary>
            <param name="logGuid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadServer.InsertUploadServer(uni2uni.com.Model.Common.Entity.Entity_UploadServer)">
            <summary>
            添加上传文件服务器
            </summary>
            <param name="ettUploadServer"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadServer.UpdateUploadServer(uni2uni.com.Model.Common.Entity.Entity_UploadServer)">
            <summary>
            修改上传文件服务器
            </summary>
            <param name="ettUploadServer"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadServer.GetAllUploadServer">
            <summary>
            获得所有上传文件服务器配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadServer.GetOldUploadServer(System.Byte)">
            <summary>
            获得某服务器组中最先添加的可用记录
            </summary>
            <param name="serverGroup"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IUploadServer.GetUploadServerByID(System.Int32)">
            <summary>
            根据ID获得某服务器信息
            </summary>
            <param name="serverGroup"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.GoodsInfo.IAutoCompleteIndex">
            <summary>
            搜索自动填充逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IAutoCompleteIndex.Search(System.String)">
            <summary>
            判断记录是否存在
            </summary>
            <param name="keyWord">搜索关键字</param>
            <returns>Entity_AutoCompleteIndex</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IAutoCompleteIndex.InsertAutoCompleteIndex(uni2uni.com.Model.GoodsInfo.Entity.Entity_AutoCompleteIndex)">
            <summary>
            插入一条
            </summary>
            <param name="ettAutoCompleteIndex">搜索自动填充数据实体</param>
            <returns>bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IAutoCompleteIndex.UpdateAutoCompleteIndex(uni2uni.com.Model.GoodsInfo.Entity.Entity_AutoCompleteIndex)">
            <summary>
            修改一条(自动判断是否有记录，有则自动+1并修改，没有自动添加)
            </summary>
            <param name="ettAutoCompleteIndex">搜索自动填充数据实体</param>
            <returns>bool</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Common.IWebSiteCityRelation">
            <summary>
            网站所在城市关系逻辑接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteCityRelation.InsertWebSiteCityRelation(uni2uni.com.Model.Common.Entity.Entity_WebSiteCityRelation)">
            <summary>
            添加记录
            </summary>
            <param name="ettWebSiteCityRelation">网站所在城市关系实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteCityRelation.InsertMWebSiteCityRelation(System.Collections.Generic.IList{uni2uni.com.Model.Common.Entity.Entity_WebSiteCityRelation})">
            <summary>
            添加记录
            </summary>
            <param name="ettWebSiteCityRelationList">网站所在城市关系实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteCityRelation.DeleteWebSiteCityRelationByWebSiteID(System.Guid)">
            <summary>
            删除记录
            </summary>
            <param name="webSiteID">网站ID</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteCityRelation.SelectWebSiteCityRelationByWebSiteID(System.Guid)">
            <summary>
            根据网站ID，获得网站所在城市关系实体集合
            </summary>
            <param name="webSiteID">网站ID</param>
            <returns>网站所在城市关系实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IBrandInfo.SelectBrandInfoByCategoryID(System.Guid)">
            <summary>
            根据分类ID获得其品牌列表
            </summary>
            <param name="categoryID">分类ID</param>
            <returns>Entity_BrandInfo List</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IBrandInfo.SelectBrandInfoByChannelIDAndCategoryID(System.Guid,System.Guid)">
            <summary>
            根据分类ID和频道ID获得其品牌列表
            </summary>
            <param name="channelID">频道ID</param>
            <param name="categoryID">分类ID</param>
            <returns>Entity_BrandInfo List</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IBrandInfo.SelectBrandInfoByIndex(System.Int32)">
            <summary>
            根据brandIndex获得其品牌信息
            </summary>
            <param name="brandIndex">brandIndex</param>
            <returns>Entity_BrandInfo</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IBrandInfo.GetBrandInfoByChannelIDList(System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据频道ID列表获得其品牌信息
            </summary>
            <param name="channelIDList">channelIDList(ID之间"|"分隔)</param>
            <param name="pagesize">页大小</param>
            <param name="pageid">页码</param>
            <param name="isFirstTime">是否第一次查询</param>
            <param name="totalcount">数据数量</param>
            <returns>Entity_BrandInfo List</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.GetGoodsInfoByInfoCode(System.Int32)">
            <summary>
            根据索引值获得产品信息
            </summary>
            <param name="infoIndex"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.GetGoodRelationsTotal(System.String)">
            <summary>
            统计Info的供货商数，临时
            </summary>
            <param name="InfoIDList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.GetGoodsInfoByInfoCode(System.Int32,System.String)">
            <summary>
            根据索引值获得产品信息
            </summary>
            <param name="infoIndex"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.SearchGoodsInfo(System.Collections.Generic.IDictionary{System.String,System.String},uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@)">
            <summary>
            搜索
            </summary>
            <param name="searchDictionary">筛选条件字典</param>
            <param name="ettTotalCount">总数实体</param>
            <returns>产品列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.GetChannelField(System.Guid)">
            <summary>
            获得某频道的字段列表信息
            </summary>
            <param name="channelid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.GetHotSales(System.String,System.String,System.String,uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@,System.Int32)">
            <summary>
            搜索引擎获取热卖商品
            </summary>
            <param name="strFullPath">商品类别全路径</param>
            <param name="strChannelID">频道ID</param>
            <param name="ettTotalCount">搜索结果</param>
            <param name="nCount">需要返回的结果条数</param>
            <returns>产品信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.SearchGoodsInfoNCR(System.Collections.Generic.IDictionary{System.String,System.String},uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@,System.String,System.String,System.String)">
            <summary>
            搜索
            </summary>
            <param name="searchDictionary">筛选条件字典</param>
            <param name="ettTotalCount">总数实体</param>
            <returns>产品列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGoodsInfo.GetPriceCount(System.Guid)">
            <summary>
            查询商品报价商家
            </summary>
            <param name="infoID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Common.IWebSiteInfo">
            <summary>
            逻辑层网站信息接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.InsertWebSiteInfo(uni2uni.com.Model.Common.Entity.Entity_WebSiteInfo)">
            <summary>
            添加一条网站信息
            </summary>
            <param name="entity">网站信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.UpdateWebSiteInfo(uni2uni.com.Model.Common.Entity.Entity_WebSiteInfo)">
            <summary>
            修改一条网站信息
            </summary>
            <param name="entity">网站信息</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.DeleteWebSiteInfo(System.Guid)">
            <summary>
            删除一条网站信息
            </summary>
            <param name="WebSiteID">ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.DeleteWebSiteInfoByWebSiteTypeID(System.Guid)">
            <summary>
            删除一条网站信息
            </summary>
            <param name="WebSiteID">ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.GetWebSiteInfoByWebSiteID(System.Guid)">
            <summary>
            根据ID号查询一条网站信息
            </summary>
            <param name="WebSiteID">ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.GetWebSiteInfoByWebSiteTypeID(System.Guid)">
            <summary>
            根据网站类别ID号查询网站信息
            </summary>
            <param name="WebSiteTypeID">网站类别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.GetWebSiteInfoByWebSiteInfo(uni2uni.com.Model.Common.Entity.Entity_WebSiteInfo)">
            <summary>
            根据网站信息查询网站信息
            </summary>
            <param name="WebSiteTypeID">网站类别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.GetWebSiteInfoByWebSiteInfoAndCityID(uni2uni.com.Model.Common.Entity.Entity_WebSiteInfo)">
            <summary>
            根据网站信息查询网站信息
            </summary>
            <param name="ettWebSiteInfo">网站信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteInfo.GetWebSiteInfoBySuperiorWebSiteTypeID(System.Guid,System.String)">
            <summary>
            根据城市ID以及网站顶级类别ID查询该类别下级类别的所有网站
            </summary>
            <param name="WebSiteTypeID">网站顶级类别ID</param>
            <param name="strCityList">城市ID集合，以及”,“分隔</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.InsertWebSiteType(uni2uni.com.Model.Common.Entity.Entity_WebSiteType)">
            <summary>
            插入记录
            </summary>
            <param name="ettWebSiteType">网站类型实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.UpdateWebSiteType(uni2uni.com.Model.Common.Entity.Entity_WebSiteType)">
            <summary>
            修改记录
            </summary>
            <param name="ettWebSiteType">网站类型实体</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.DeleteWebSiteType(System.Guid)">
            <summary>
            删除记录
            </summary>
            <param name="webSiteTypeID">网站类型ID</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.GetWebSiteTypeByWebSiteTypeID(System.Guid)">
            <summary>
            根据网站类型ID查询
            </summary>
            <param name="webSiteTypeID">网站类型ID</param>
            <returns>网站类型实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.GetWebSiteTypeListByWebSiteTypeName(System.String)">
            <summary>
            按网站类型名称查询，名称为空返回所有
            </summary>
            <param name="webSiteTypeName">网站类型名称</param>
            <returns>网站类型实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.GetWebSiteTypeList">
            <summary>
            按网站类型名称查询
            </summary>
            <returns>网站类型实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.GetWebSiteTypeListByLevel(System.Int32)">
            <summary>
            根据级别查询网站类别信息
            </summary>
            <param name="nLevel">网站级别</param>
            <returns>网站类型实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Common.IWebSiteType.GetJuniorWebSiteTypeListBywebSiteTypeID(System.Guid)">
            <summary>
            根据网站类别ID号获取所有下级网站类别信息
            </summary>
            <param name="webSiteTypeID">网站类别ID</param>
            <returns>网站类型实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGroupBuy.GetAllGroupBuyCity">
            <summary>
            获得团购城市列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGroupBuy.GetGroupBuyProviderInfo(System.Byte)">
            <summary>
            通过团购网站id获得网站实体
            </summary>
            <param name="provderId">团购网站ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGroupBuy.GetGroupBuyInfoList(System.Byte,System.Int32,System.Int32)">
            <summary>
            通过城市ID分得到团购商品信息分页数据
            </summary>
            <param name="cityid">城市ID</param>
            <param name="pageid">页id</param>
            <param name="pagesize">页大小</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IGroupBuy.GetGroupBuyInfoCount(System.Byte)">
            <summary>
            获得一个城市的团购商品总数
            </summary>
            <param name="cityid">城市id</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetPricesByInfoID(System.Guid)">
            <summary>
            通过ID获得Prices信息
            </summary>
            <param name="PricesID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetPricesByIDBEP(System.Guid,System.DateTime,System.DateTime,System.String,System.Int32)">
            <summary>
            根据价格表InfoID、ExpDateTime(有效截至时间)、PriceTitle房型取价格信息实体
            </summary>
            <param name="InfoID"></param>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <param name="PriceTitle">房型</param>
            <param name="State">0取列表，1取第一条</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetPricesByMaxDate(System.Guid,System.Guid)">
            <summary>
            根据价格表InfoID,PriceTitle,ProviderID及其ExpDateTime(有效截至时间)取价格信息实体
            </summary>
            <param name="InfoID"></param>
            <param name="PriceTitle"></param>
            <param name="ProviderID"></param>
            <param name="userInDate">开始时间</param>
            <param name="userOutDate">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetPricesByIPBEP(System.Guid,System.DateTime,System.Guid)">
            <summary>
            根据价格表InfoID及其ProviderID(供货商编号)取最大记录天数的价格信息实体
            </summary>
            <param name="InfoID">InfoID</param>
            <param name="ProviderID">ProviderID(供货商编号)</param>
            <returns>IList-Entity_HotelPrices实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetPricesByIP(System.Guid,System.Guid)">
            <summary>
            根据价格表InfoID、ProviderID得到某酒店的一个房型某一供应商的全部记录
            </summary>
            <param name="InfoID">InfoID</param>
            <param name="ProviderID">ProviderID(供货商编号)</param>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetALLPricesByInfoID(System.Guid)">
            <summary>
            根据价格表InfoID得到某酒店的全部记录
            </summary>
            <param name="InfoID">InfoID</param>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IHotelPrices.GetPricesByInfoIDAndInTime(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            根据价格表InfoID和用户输入的时间得到记录
            </summary>
            <param name="InfoID">InfoID</param>
        </member>
        <member name="T:uni2uni.com.IBLL.GoodsInfo.IMorePrices">
            <summary>
            逻辑层IMorePrices接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IMorePrices.GetMorePricesByInfoIDAndMaxProvider(System.Guid)">
            <summary>
            根据价格表InfoID取价格最多的供应商的信息实体
            </summary>
            <param name="InfoID">InfoID</param>
            <returns>IList-Entity_HotelPrices实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IMorePrices.GetMorePricesByInfoID(System.Guid)">
            <summary>
            根据价格表InfoID取价格的信息实体
            </summary>
            <param name="InfoID">InfoID</param>
            <returns>IList-Entity_HotelPrices实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IMorePrices.GetMorePricesHtml(uni2uni.com.Model.GoodsInfo.Entity.BEntity_GoodsInfo)">
            <summary>
            得到多价格商品价格
            </summary>
            <param name="bettGoodsInfo">商品实体</param>
            <returns>html</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IMorePrices.GetGetMorePricesByPriceID(System.Guid)">
            <summary>
            根据价格ID获取，某条价格信息
            </summary>
            <param name="priceID">价格ID号</param>
            <returns>多价格信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.IMorePrices.GetProviderCompareList(uni2uni.com.Model.GoodsInfo.Entity.BEntity_GoodsInfo)">
            <summary>
            获得多价格比价列表
            </summary>
            <param name="bettGoodsInfo">商品实体</param>
            <returns>比价列表HTML</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProcessInfo">
            <summary>
            过程管控逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.InsertProcessInfo(uni2uni.com.Model.Info.Entity.Entity_ProcessInfo)">
            <summary>
            插入一条ProcessInfo记录
            </summary>
            <param name="ettProcessInfo"></param>
            <returns>ture or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.UpdateProcessInfo(uni2uni.com.Model.Info.Entity.Entity_ProcessInfo)">
            <summary>
            修改一条ProcessInfo记录
            </summary>
            <param name="ettProcessInfo"></param>
            <returns>ture or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.InsertProcessInfoList(System.Collections.Generic.IList{uni2uni.com.Model.Info.Entity.Entity_ProcessInfo})">
            <summary>
            插入多条ProcessInfo记录
            </summary>
            <param name="ettProcessInfoList">过程管控实体集合</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.ExecProcessInfo(uni2uni.com.Model.Info.Entity.Entity_ProcessInfo,uni2uni.com.Model.Info.Entity.Entity_ProcessLogInfo)">
            <summary>
            执行一条ProcessInfo记录（并且添加执行日志）
            </summary>
            <param name="ettProcessInfo">过程管控实体</param>
            <param name="ettProcessLogInfo">过程管控执行日志实体</param>
            <returns>ture or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.GetProcessInfoByGUID(System.Guid)">
            <summary>
            通过Guid获得一条ProcessInfo记录
            </summary>
            <param name="guidProcessInfo"></param>
            <returns>过程管控实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.GetProcessInfoByPreTaskID(System.Guid)">
            <summary>
            通过Guid获得一条ProcessInfo记录
            </summary>
            <param name="guidProcessInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.GetProcessInfoByServiceID(System.Guid)">
            <summary>
            通过ServiceID获得ProcessInfo列表
            </summary>
            <param name="serviceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.GetProcessInfoByCondition(uni2uni.com.Model.Info.Entity.BEntity_ProcessInfoSearch)">
            <summary>
            通过查询条件获得ProcessInfo列表
            </summary>
            <param name="ettProcessInfoSearch">查询条件实体</param>
            <returns>实体结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.GetProcessInfoCountByCondition(uni2uni.com.Model.Info.Entity.BEntity_ProcessInfoSearch)">
            <summary>
            根据条件查询过程管控信息
            </summary>
            <param name="entity">查询条件</param>
            <returns>查询信息的总条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessInfo.LockOrUnLockProcess(System.Guid,System.Guid)">
            <summary>
            解锁或者锁定过程管控节点
            </summary>
            <param name="gProcess">过程管控</param>
            <param name="gLockOpID">锁定人 如果是解锁就是new Guid()</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProcessLogInfo">
            <summary>
            过程管控日志逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessLogInfo.InsertProcessLogInfo(uni2uni.com.Model.Info.Entity.Entity_ProcessLogInfo)">
            <summary>
            插入一条ProcessLogInfo记录
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessLogInfo.GetProcessLogInfoByProcessID(System.Guid)">
            <summary>
            通过大类获得ProcessLogInfo列表
            </summary>
            <param name="strParentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplate.InsertProcessTemplate(uni2uni.com.Model.Info.Entity.Entity_ProcessTemplate,System.Collections.Generic.IList{uni2uni.com.Model.Info.Entity.Entity_ProcessTemplateNode})">
            <summary>
            添加模板信息（添加模板的同时添加节点信息）
            </summary>
            <param name="ettProcessTemplate">模板实体</param>
            <param name="ettProcessTemplateNodeList">模板节点</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplate.UpdateProcessTemplate(uni2uni.com.Model.Info.Entity.Entity_ProcessTemplate,System.Collections.Generic.IList{uni2uni.com.Model.Info.Entity.Entity_ProcessTemplateNode})">
            <summary>
            修改模板信息（修噶模板的同时添加节点信息）
            </summary>
            <param name="ettProcessTemplate">模板实体</param>
            <param name="ettProcessTemplateNodeList">模板节点</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplate.GetProcessTemplateByKeyWord(System.String)">
            <summary>
            根据关键字查询过程管控模板信息
            </summary>
            <param name="strKeyWord">关键字</param>
            <returns>结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplate.GetProcessTemplateByTemplateID(System.Guid)">
            <summary>
            根据模板ID号，查询模板基本信息
            </summary>
            <param name="gTemplateID">模板ID</param>
            <returns>模板信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplate.DeleteTemplateByTemplateID(System.Guid)">
            <summary>
            删除一个模板，并且删除该模板的所有节点
            </summary>
            <param name="gTemplateID">模板ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplateNode.GetProcessInfoByTemplateID(System.Guid)">
            <summary>
            根据模板ID查询该模板所有的过程管控信息
            </summary>
            <param name="gTemplateID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplateNode.GetProcessTemplateNodeByTemplateID(System.Guid)">
            <summary>
            根据模板ID查询该模板所有的节点
            </summary>
            <param name="gTemplateID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplateNode.InsertProcessTemplateNode(uni2uni.com.Model.Info.Entity.Entity_ProcessTemplateNode)">
            <summary>
            添加过程管控模板节点信息
            </summary>
            <param name="ettProcessTemplateNode">节点实体</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplateNode.UpdateProcessTemplateNode(uni2uni.com.Model.Info.Entity.Entity_ProcessTemplateNode)">
            <summary>
            修改过程管控模板节点信息
            </summary>
            <param name="ettProcessTemplateNode">节点实体</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplateNode.DeleteProcessTemplateNode(System.Guid)">
            <summary>
            删除过程管控模板节点信息
            </summary>
            <param name="gNodeID">节点ID</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProcessTemplateNode.GetProcessTemplateNodeByNodeID(System.Guid)">
            <summary>
            根据节点ID号获取节点信息
            </summary>
            <param name="gNodeID">节点ID号</param>
            <returns>节点信息实体</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderOrderFlux">
            <summary>
            供货商流量统计逻辑层频道接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderFlux.GetProviderUrl(System.Guid,System.Guid,System.String,System.String,System.String,System.Int32)">
            <summary>
            获取供货商的跳转地址
            </summary>
            <param name="gProviderID">供货商ID</param>
            <param name="gMemberID">会员ID</param>
            <param name="strInfoCode">产品编号</param>
            <param name="strUrlTo">跳转的路径</param>
            <param name="nType">0不添加流量统计，1添加流量统计</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderFlux.GetProviderOrderFluxList(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderFlux)">
            <summary>
            按条件查询供货商数据流量统计信息
            </summary>
            <param name="entity">查询条件</param>
            <returns>查询结果</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderOrderReturn">
            <summary>
            供货商返佣明细逻辑层频道接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderReturn.OrderAddProviderOrderReturn(System.Guid,System.Guid,System.Decimal,System.String,System.Guid)">
            <summary>
            添加一条内部订单供货商返佣数据
            </summary>
            <param name="gProviderID">供货商ID</param>
            <param name="gMemberID">会员ID</param>
            <param name="dcReturnMoney">返佣金额</param>
            <param name="strOrderID">订单ID</param>
            <param name="gOpID">操作员ID</param>
            <returns>true or FALSE</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderReturn.GetProviderOrderReturnList(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderReturn)">
            <summary>
            按条件查询供货商返佣明细
            </summary>
            <param name="entity">查询条件</param>
            <returns>查询结果</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderOrderStat">
            <summary>
            供货商订单数据统计逻辑层频道接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderStat.AddProviderOrderStat(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderStat)">
            <summary>
            添加一条供货商返佣信息
            </summary>
            <param name="entity">供货商返佣信息实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderStat.GetProviderOrderStatList(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderStat)">
            <summary>
            添加一条供货商返佣信息
            </summary>
            <param name="entity">供货商返佣信息实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderStat.GetProvderOrderStatByMemberID(System.Guid)">
            <summary>
            查询用户积分信息
            </summary>
            <param name="memberID">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderStat.GetUniMoneyRecordByMemberID(System.Guid)">
            <summary>
            查询用户积分兑换信息
            </summary>
            <param name="memberID"></param>
            <param name="topNum"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderStat.GetTopUniMoneyRecordByMemberID(System.Guid,System.Int32)">
            <summary>
            查询用户积分兑换信息
            </summary>
            <param name="memberID"></param>
            <param name="topNum"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderStat.GetUniMoneyRecordByEntity(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderStat)">
            <summary>
            按条件查询
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderOrderUrl">
            <summary>
            供货商返佣地址逻辑层频道接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderUrl.AddProviderOrderUrl(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderUrl)">
            <summary>
            添加一条供货商地址
            </summary>
            <param name="entity">供货商地址信息实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderUrl.UpdateProviderOrderUrl(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderUrl)">
            <summary>
            修改一条供货商地址
            </summary>
            <param name="entity">供货商地址信息实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderUrl.GetProviderOrderUrl(System.Guid)">
            <summary>
            按ID查询供货商地址
            </summary>
            <param name="providerOrderUrlID">ID</param>
            <returns>Entity_ProviderOrderUrl</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderUrl.GetProviderOrderUrlList(uni2uni.com.Model.Info.Entity.Entity_ProviderOrderUrl)">
            <summary>
            按ID查询供货商地址
            </summary>
            <param name="entity">供货商地址信息实体</param>
            <returns>Entity_ProviderOrderUrl</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderOrderUrl.GetProviderOrderUrlByProviderID(System.Guid)">
            <summary>
            按供货商ID查询供货商返佣地址
            </summary>
            <param name="providerOrderUrlID">供货商ID</param>
            <returns>Entity_ProviderOrderUrl</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup">
            <summary>
            分类搜索组逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.InsertSpecialGroup(uni2uni.com.Model.GoodsInfo.Entity.Entity_SpecialGroup)">
            <summary>
            添加SpecialGroup
            </summary>
            <param name="ettSpecialGroup"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.UpdateSpecialGroup(uni2uni.com.Model.GoodsInfo.Entity.Entity_SpecialGroup)">
            <summary>
            修改SpecialGroup
            </summary>
            <param name="ettSpecialGroup"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.DeleteSpecialGroup(System.Guid)">
            <summary>
            删除SpecialGroup
            </summary>
            <param name="groupID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.SelectSpecialGroupByID(System.Guid)">
            <summary>
            根据ID获得SpecialGroup实体
            </summary>
            <param name="groupID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.SelectSpecialGroupByCategoryID(System.Guid)">
            <summary>
            获得某分类的所有SpecialGroup
            </summary>
            <param name="categoryID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.SelectAllSpecialGroup">
            <summary>
            获得所有SpecialGroup
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.GetSpecialGroupAndItemByCategoryIDFromCache(System.Guid)">
            <summary>
            根据分类获得列表页筛选条件组和组中项的数据集
            </summary>
            <param name="catogoryID">分类ID</param>
            <returns>列表页筛选条件组和组中项的数据集</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroup.SelectSpecialGroupByCategoryIDAndExtendField(System.Guid,System.String)">
            <summary>
            根据分类ID和某对应搜索字段获得SpecialGroup实体
            </summary>
            <param name="categoryID">categoryID</param>
            <param name="extendField">extendField</param>
            <returns>Entity_SpecialGroup</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.GoodsInfo.ISpecialGroupItem">
            <summary>
            分类搜索组中的项逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroupItem.InsertSpecialGroupItem(uni2uni.com.Model.GoodsInfo.Entity.Entity_SpecialGroupItem)">
            <summary>
            添加SpecialGroupItem
            </summary>
            <param name="ettSpecialGroupItem"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroupItem.UpdateSpecialGroupItem(uni2uni.com.Model.GoodsInfo.Entity.Entity_SpecialGroupItem)">
            <summary>
            修改SpecialGroupItem
            </summary>
            <param name="ettSpecialGroupItem"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroupItem.DeleteSpecialGroupItem(System.Guid)">
            <summary>
            删除SpecialGroupItem
            </summary>
            <param name="itemID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroupItem.SelectSpecialGroupItemByID(System.Guid)">
            <summary>
            根据ID获得SpecialGroupItem实体
            </summary>
            <param name="itemID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ISpecialGroupItem.SelectSpecialGroupItemByGroupID(System.Guid)">
            <summary>
            获得某组的所有SpecialGroupItem
            </summary>
            <param name="groupID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.InsertAdvertisement(uni2uni.com.Model.Info.Entity.BEntity_Advertisement)">
            <summary>
            插入一条Advertisement记录
            </summary>
            <param name="E_Advertisement"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.UpdateAdvertisement(uni2uni.com.Model.Info.Entity.BEntity_Advertisement)">
            <summary>
            更新一条Advertisement记录
            </summary>
            <param name="E_Advertisement"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.DeleteAdvertisementByID(System.Int64)">
            <summary>
            删除一条Advertisement记录
            </summary>
            <param name="AdvertisementID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.DeleteAdvertisementPictureByAdID(System.Int64)">
            <summary>
            删除一条AdvertisementPicture记录
            </summary>
            <param name="AdvertisementID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.DeleteAdvertisementTextByAdID(System.Int64)">
            <summary>
            删除一条AdvertisementText记录
            </summary>
            <param name="AdvertisementID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.GetAdvertisementByID(System.Int64)">
            <summary>
            通过ID获得一条Advertisement记录
            </summary>
            <param name="E_AdvertisementID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.GetAdvertisementByPId(uni2uni.com.Model.Info.Entity.Entity_Advertisement)">
            <summary>
            通过PId获得多条Advertisement记录
            </summary>
            <param name="E_AdvertisementID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.GetAdvertisementByAdID(System.Int64)">
            <summary>
            通过ID获得一条Advertisement记录
            </summary>
            <param name="E_AdvertisementID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.GetMaxAdvertisementId">
            <summary>
            获得最大的AdvertisementId记录
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisement.GetAllAdvertisement(System.Boolean)">
            <summary>
            获取所有的广告
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlace.InsertAdvertisementPlace(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPlace)">
            <summary>
            插入一条AdvertisementPlace记录
            </summary>
            <param name="E_AdvertisementPlace"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlace.UpdateAdvertisementPlace(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPlace)">
            <summary>
            更新一条AdvertisementPlace记录
            </summary>
            <param name="E_AdvertisementPlace"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlace.GetAdvertisementPlaceByID(System.Int64)">
            <summary>
            通过ID获得一条AdvertisementPlace记录
            </summary>
            <param name="E_AdvertisementPlaceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlace.GetAllAdvertisementPlace(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPlace)">
            <summary>
            获取所有AdvertisementPlace列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlaceClass.InsertAdvertisementPlaceClass(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPlaceClass)">
            <summary>
            插入一条AdvertisementPlaceClass记录
            </summary>
            <param name="E_AdvertisementPlaceClass"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlaceClass.UpdateAdvertisementPlaceClass(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPlaceClass)">
            <summary>
            更新一条AdvertisementPlaceClass记录
            </summary>
            <param name="E_AdvertisementPlaceClass"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlaceClass.DeleteAdvertisementPlaceClassByID(System.Int32)">
            <summary>
            删除一条AdvertisementPlaceClass记录
            </summary>
            <param name="AdvertisementPlaceClassID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlaceClass.GetAdvertisementPlaceClassByID(System.Int32)">
            <summary>
            通过ID获得一条AdvertisementPlaceClass记录
            </summary>
            <param name="E_AdvertisementPlaceClassID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlaceClass.GetAllAdvertisementPlaceClass">
            <summary>
            获取所有AdvertisementPlaceClass列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPlaceClass.GetAdvertisementPlaceClassByName(System.String,System.Int32)">
            <summary>
            通过Name获得AdvertisementPlaceClass记录
            </summary>
            <param name="AdvertisementPlaceClassFullName">银行全称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.InsertAdvertisementPublish(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPublish)">
            <summary>
            插入一条AdvertisementPublish记录
            </summary>
            <param name="E_AdvertisementPublish"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.UpdateAdvertisementPublish(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPublish)">
            <summary>
            更新一条AdvertisementPublish记录
            </summary>
            <param name="E_AdvertisementPublish"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.DeleteAdvertisementPublishByID(System.Guid)">
            <summary>
            删除一条AdvertisementPublish记录
            </summary>
            <param name="AdvertisementPublishID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.GetAdvertisementPublishByID(System.Guid)">
            <summary>
            通过ID获得一条AdvertisementPublish记录
            </summary>
            <param name="E_AdvertisementPublishID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.GetAllAdvertisementPublish(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPublish)">
            <summary>
            获取所有AdvertisementPublish列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.GetAdvertisementPublishByTime(uni2uni.com.Model.Info.Entity.Entity_AdvertisementPublish)">
            <summary>
            通过BankID获得AdvertisementPublish记录
            </summary>
            <param name="BankID">银行ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IAdvertisementPublish.GetAdvertisementPublishByAdID(System.Int64)">
            <summary>
            通过AdID获得n条AdvertisementPublish记录
            </summary>
            <param name="E_AdvertisementPublishID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IBank.InsertBank(uni2uni.com.Model.Info.Entity.Entity_Bank)">
            <summary>
            插入一条Bank记录
            </summary>
            <param name="E_Bank"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IBank.UpdateBank(uni2uni.com.Model.Info.Entity.Entity_Bank)">
            <summary>
            更新一条Bank记录
            </summary>
            <param name="E_Bank"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IBank.DeleteBankByID(System.Guid)">
            <summary>
            删除一条Bank记录
            </summary>
            <param name="BankID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IBank.GetBankByID(System.Guid)">
            <summary>
            通过ID获得一条Bank记录
            </summary>
            <param name="E_BankID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IBank.GetAllBank">
            <summary>
            获取所有Bank列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IBank.GetBankByName(System.String,System.Guid)">
            <summary>
            通过Name获得Bank记录
            </summary>
            <param name="BankFullName">银行全称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.InsertInstallmentRule(uni2uni.com.Model.Info.Entity.Entity_InstallmentRule)">
            <summary>
            插入一条InstallmentRule记录
            </summary>
            <param name="E_InstallmentRule"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.UpdateInstallmentRule(uni2uni.com.Model.Info.Entity.Entity_InstallmentRule)">
            <summary>
            更新一条InstallmentRule记录
            </summary>
            <param name="E_InstallmentRule"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.DeleteInstallmentRuleByID(System.Guid)">
            <summary>
            删除一条InstallmentRule记录
            </summary>
            <param name="InstallmentRuleID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetInstallmentRuleByID(System.Guid)">
            <summary>
            通过ID获得一条InstallmentRule记录
            </summary>
            <param name="E_InstallmentRuleID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetAllInstallmentRule(uni2uni.com.Model.Info.Entity.Entity_InstallmentRule)">
            <summary>
            获取所有InstallmentRule列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetInstallmentRuleByName(System.Guid,System.Int32,System.Guid)">
            <summary>
            判断是否有重复的规则存在
            </summary>
            <param name="BankID">银行ID</param>
            <param name="Stage">期数</param>
            <param name="PlanID">规则ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetInstallmentRuleByBankIDAndMinBudgetMoney(System.Guid,System.Decimal)">
            <summary>
            通过银行ID和金额获得分期列表
            </summary>
            <param name="BankID">银行ID</param>
            <param name="MinBudgetMoney">金额</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetAllInstallmentRule(System.Guid,System.Decimal)">
            <summary>
            获得当前银行的分期及每期还款额
            </summary>
            <param name="BankID">银行ID</param>
            <param name="MinBudgetMoney">金额</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetMemberUniMoney(System.Guid,System.Int32,System.Decimal,System.Decimal@)">
            <summary>
            根据银行的分期期数，以及支付总金额获取联嘉获取的分期利润
            </summary>
            <param name="gBankID">银行ID</param>
            <param name="Stage">期数</param>
            <param name="dcPayMoney">支付总金额</param>
            <param name="CustRate">返回值：代金比例</param>
            <returns>返回分期利润</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInstallmentRule.GetGetInstallmentRuleByBankIDAndStage(System.Guid,System.Int32)">
            <summary>
            根据银行ID，以及分期期数获取该详细规则信息
            </summary>
            <param name="gBankID">银行ID</param>
            <param name="Stage">期数</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelList">
            <summary>
            获得频道列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelByID(System.Guid)">
            <summary>
            通过ID获得频道信息
            </summary>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.AddNewChannel(uni2uni.com.Model.Info.Entity.Entity_Channels)">
            <summary>
            添加一条频道信息
            </summary>
            <param name="ett_Channel"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelsFromCache(System.String)">
            <summary>
            返回需要检索的一些频道字典
            </summary>
            <param name="channelIDList">频道ID列表(ID之间"|"分隔)</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.UpdateChannel(uni2uni.com.Model.Info.Entity.Entity_Channels)">
            <summary>
            修改一条频道信息
            </summary>
            <param name="ett_Channel"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelInfoByParentID(System.Guid)">
            <summary>
            根据父级频道ID获得频道信息
            </summary>
            <param name="parentID">parentID(大频道ID)</param>
            <returns>Channels实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelInfoBySystemParentID(System.Guid)">
            <summary>
            根据系统父级频道ID获得频道信息
            </summary>
            <param name="systemParentID">parentID(大频道ID)</param>
            <returns>Channels实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelInfoBySystemParent">
            <summary>
            获取系统主频道分类
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetSubChannelInfo">
            <summary>
            获得所有子频道
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelsByChannelName(System.String)">
            <summary>
            根据ChannelName获得频道信息
            </summary>
            <param name="channelName">频道名称</param>
            <returns>频道实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelByDirName(System.String)">
            <summary>
            根据Chanenel的DirName获得频道信息
            </summary>
            <param name="DirName">频道DirName</param>
            <returns>频道实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetAllSubChannelInfo">
            <summary>
            获得所有子频道(后台 不判断IsOpen)
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelByProviderID(System.Guid)">
            <summary>
            根据供货商ID获得某供货商的关联频道ID(非禁用状态)
            </summary>
            <param name="providerID">供货商ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IChannel.GetChannelListForDropdownList">
            <summary>
            获得频道列表(名称包含拼音，用于下拉框快捷选择)
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.UpdareCollectionCategoryRelationInfo(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionCategoryRelation)">
            <summary>
            修改采集产品关联信息
            </summary>
            <param name="entity">采集关联实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.DeleteCollectionCategoryRelationInfo(System.Guid)">
            <summary>
            删除采集产品关联信息
            </summary>
            <param name="RelationID">关系ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.InsertCollectionCategoryRelationInfo(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionCategoryRelation)">
            <summary>
            添加采集产品关联信息
            </summary>
            <param name="entity">采集关联实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.SelectCollectionCategoryRelationListByCondition(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionCategoryRelation)">
            <summary>
            根据条件查询采集产品关联信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.SelectCollectionCategoryRelationCountByCondition(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionCategoryRelation)">
            <summary>
            根据条件查询采集产品关联条数
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.SelectCollectionCategoryRelationByRelationID(System.Guid)">
            <summary>
            根据关联ID号查询采集产品关联信息
            </summary>
            <param name="RelationID">关联ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionCategoryRelation.SelectCollectionCategoryRelationListByChannelIDCategoryID(System.Guid,System.Guid)">
            <summary>
            查询频道类别下面的产品 最多只能有2个
            </summary>
            <param name="ChannelID">频道ID号</param>
            <param name="CategoryID">类别ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.InsertCollectionInfo(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfo)">
            <summary>
            添加一条集采产品信息
            </summary>
            <param name="ettCollectionInfo">集采产品实体</param>
            <returns>返回是否执行成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.InsertCollectionInfoAndCollectionInfoImg(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfo,uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfoImg)">
            <summary>
            添加一条集采产品和集采产品图片相关信息
            </summary>
            <param name="ettCollectionInfo">集采产品实体</param>
            <param name="ettCollectionInfoImg">集采图片信息实体</param>
            <returns>是否执行成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.SelectCollectionInfoListByCondition(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfo)">
            <summary>
            根据条件查询采集产品信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.UpdateCollectionInfo(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfo)">
            <summary>
            修改一条集采产品信息
            </summary>
            <param name="ettCollectionInfo">集采产品实体</param>
            <returns>返回是否执行成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.UpdateCollectionInfoAndCollectionInfoImg(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfo,uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfoImg)">
            <summary>
            修改一条集采产品信息和图片相关信息
            </summary>
            <param name="ettCollectionInfo">集采产品实体</param>
            <param name="ettCollectionInfoImg">集采产品图片相关实体</param>
            <returns>返回是否执行成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetCollectionInfoByID(System.Guid)">
            <summary>
            根据集采产品ID获得集采产品信息
            </summary>
            <param name="ettCollectionInfoID">集采产品ID</param>
            <returns>返回集采产品实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.SelectCollectionInfoCountByCondition(uni2uni.com.Model.GoodsInfo.Entity.Entity_CollectionInfo)">
            <summary>
            根据条件查询采集产品信息
            </summary>
            <param name="entity">查询条件实体</param>
            <returns>结果条数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.SelectShowCollectionInfo(System.Guid,System.Guid)">
            <summary>
            获得页面显示的集采产品信息
            </summary>
            <param name="channelID">频道ID</param>
            <param name="categoryID">分类ID</param>
            <returns>页面需要显示的集采产品信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetDayCollectionInfo(System.DateTime)">
            <summary>
            获取某天的所有集采产品
            </summary>
            <param name="dDayDate">日期</param>
            <returns>集采产品集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetCollectionInfoByCode(System.Int64)">
            <summary>
            根据集采产品Code获得集采产品信息
            </summary>
            <param name="ettCollectionInfoIDCode">集采产品code</param>
            <returns>返回集采产品实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetDayCollectionInfo(System.DateTime,System.Int32)">
            <summary>
            获取某天的集采产品，nCount条信息，如果某天产品部足nCount条取最新的数据
            </summary>
            <param name="dDate">日期</param>
            <param name="nCount">需要获取的条数</param>
            <returns>集采产品集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetSpecialProductCategoryByCategoryType(System.Int32)">
            <summary>
            根据商品大类别查询商品小类别
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetSpecialProductCategoryType">
            <summary>
            获得产品大类
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.GoodsInfo.ICollectionInfo.GetCollectionInfoCountByADRecordID(System.Guid,System.Guid)">
            <summary>
            根据期数ID获得上架特价条数
            </summary>
            <param name="adRecordID">特价广告期数ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.InsertFragmentInfo(uni2uni.com.Model.Info.Entity.Entity_Fragment)">
            <summary>
            添加一条碎片信息
            </summary>
            <param name="Entity_Fragment">碎片信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.UpdateFragmentInfo(uni2uni.com.Model.Info.Entity.Entity_Fragment)">
            <summary>
            修改一条碎片信息
            </summary>
            <param name="Entity_Fragment">碎片信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.GetFragmentInfoByFragmentID(System.Guid)">
            <summary>
            根据ID号读取碎片信息
            </summary>
            <param name="FragmentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.GetFragmentListByCondition(uni2uni.com.Model.Info.Entity.Entity_Fragment)">
            <summary>
            根据条件读取出所有碎片信息
            </summary>
            <param name="Entity_Fragment">查询实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.GetFragmentCountByCondition(uni2uni.com.Model.Info.Entity.Entity_Fragment)">
            <summary>
            根据条件读取出所有碎片信息条数
            </summary>
            <param name="Entity_Fragment">查询实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.InsertFragmentTypeInfo(uni2uni.com.Model.Info.Entity.Entity_FragmentType)">
            <summary>
            添加一条碎片类别信息
            </summary>
            <param name="Entity_FragmentType">碎片类别信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.UpdateFragmentTypeInfo(uni2uni.com.Model.Info.Entity.Entity_FragmentType)">
            <summary>
            修改一条碎片类别信息
            </summary>
            <param name="Entity_FragmentType">类别</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.GetFragmentTypeInfoByFragmentTypeID(System.Guid)">
            <summary>
            根据ID号读取碎片类型信息
            </summary>
            <param name="FragmentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragment.GetFragmentTypeAll">
            <summary>
            查询所有碎片类别信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragmentPage.AddFragmentPageInfo(uni2uni.com.Model.Info.Entity.Entity_FragmentPage)">
            <summary>
            添加一条页面信息
            </summary>
            <param name="entity">页面信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragmentPage.UpdateFragmentPageInfo(uni2uni.com.Model.Info.Entity.Entity_FragmentPage)">
            <summary>
            修改一条页面信息
            </summary>
            <param name="entity">页面信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragmentPage.GetFragmentPageByFragmentPageID(System.Guid)">
            <summary>
            根据ID号查询一条信息
            </summary>
            <param name="FragmentPageID">ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragmentPage.GetFragmentPageListByCondition(uni2uni.com.Model.Info.Entity.Entity_FragmentPage)">
            <summary>
            根据条件读取出所有页面信息
            </summary>
            <param name="Entity_Fragment">查询实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IFragmentPage.GetFragmentPageCountByCondition(uni2uni.com.Model.Info.Entity.Entity_FragmentPage)">
            <summary>
            根据条件读取出所有页面信息条数
            </summary>
            <param name="Entity_Fragment">查询实体</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IInfo">
            <summary>
            Info接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SearchInfo(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@)">
            <summary>
            搜索
            </summary>
            <param name="urlParam">URL参数</param>
            <param name="scoreField">匹配度字段(多个字段用,隔开)</param>
            <param name="dc">搜索参数字典(不要包含城市CityID和频道ChannelID)</param>
            <param name="ett_TotalCount">搜索数据总量实体</param>
            <param name="results">子分类实体集</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SearchInfo(System.String,System.String,uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@)">
            <summary>
            搜索
            </summary>
            <param name="KeyWord">关键字</param>
            <param name="urlParam">URL参数</param>
            <param name="ett_TotalCount">搜索数据总量实体</param>
            <param name="results">子分类实体集</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SearchInfo(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@)">
            <summary>
            搜索
            </summary>
            <param name="KeyWord">关键字</param>
            <param name="urlParam">URL参数</param>
            <param name="dc">搜索参数字典(不要包含城市CityID和频道ChannelID)</param>
            <param name="ett_TotalCount">搜索数据总量实体</param>
            <param name="results">子分类实体集</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SearchInfo(System.String,System.Guid)">
            <summary>
            搜索
            </summary>
            <param name="channelDir">频道dir</param>
            <param name="ProviderID">供货商ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SearchInfo(System.String,System.Guid,System.Guid)">
            <summary>
            搜索
            </summary>
            <param name="KeyWord">关键字</param>
            <param name="channelID">频道id</param>
            <param name="categoryID">类别id</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SearchTicket(System.String,System.String,System.String)">
            <summary>
            搜索火车票
            </summary>
            <param name="StartStation"></param>
            <param name="ArriveStation"></param>
            <param name="TrainNumber"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.StatSearchInfo(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            统计
            </summary>
            <param name="KeyWord">关键字</param>
            <param name="urlParam">URL参数</param>
            <param name="ett_TotalCount">搜索数据总量实体</param>
            <param name="results">子分类实体集</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetInfoByInfoID(System.Guid)">
            <summary>
            根据信息ID获得信息实体
            </summary>
            <param name="infoID">信息ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetInfoByInfoID(System.Guid,System.String)">
            <summary>
            搜某条数据的信息
            </summary>
            <param name="channelID">频道ID</param>
            <param name="infoID">InfoID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetInfoByInfoID(System.String,System.String)">
            <summary>
            搜索某条数据的信息
            </summary>
            <param name="channelDir"></param>
            <param name="infoID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetRecommendHotel(System.String,System.Int32)">
            <summary>
            取得推荐酒店信息
            </summary>
            <param name="airCode">航空代码</param>
            <param name="count">数量</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetRecommendDinner(System.String,System.Int32)">
            <summary>
            取得推荐饭店信息
            </summary>
            <param name="airCode">航空代码</param>
            <param name="count">数量</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetRecommendTravel(System.String,System.Int32)">
            <summary>
            取得推荐旅游信息
            </summary>
            <param name="airCode">航空代码</param>
            <param name="count">数量</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetRecommendInfo(System.String,System.String,System.Guid,System.Int32)">
            <summary>
            推荐信息
            </summary>
            <param name="cityID">城市ID</param>
            <param name="channelDirName">频道dirname</param>
            <param name="categoryid">类型id</param>
            <param name="count">数据条数</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetInfoLinkUrl(System.Guid,System.Guid)">
            <summary>
            获得信息的连接URL
            </summary>
            <param name="ChannelID"></param>
            <param name="InfoID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetInfoNewLinkUrl(System.Guid,System.String)">
            <summary>
            获得新的信息的连接URL
            </summary>
            <param name="ChannelID"></param>
            <param name="InfoID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetSearchResultParam(System.Guid,System.Guid,System.String)">
            <summary>
            获得需要统计的搜索项目
            </summary>
            <param name="channelID">频道ID</param>
            <param name="categoryID">类别ID</param>
            <param name="linkUrl">连接URL(格式：域名/info/cityid/{0}/link?pageid=1pagesize=20)</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.GetSearchPlaneLink(System.String,System.String)">
            <summary>
            根据出发城市和结束城市返回查询航线的链接
            </summary>
            <param name="startCity"></param>
            <param name="endCity"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.InsertInfo(uni2uni.com.Model.Info.Entity.Entity_Info)">
            <summary>
            添加一条信息
            </summary>
            <param name="info">信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.DeleteInfo(System.Guid)">
            <summary>
            删除一条信息
            </summary>
            <param name="FTID">信息ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.UpdateInfo(uni2uni.com.Model.Info.Entity.Entity_Info)">
            <summary>
            修改一条信息
            </summary>
            <param name="info">信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SelectAllInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获得信息列表
            </summary>
            <returns>信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.ExecSqlString(System.String)">
            <summary>
            执行Sql语句
            </summary>
            <param name="sqlString"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.ExecSqlStringReturnBool(System.String)">
            <summary>
            执行Sql语句返回bool类型
            </summary>
            <param name="sqlString"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfo.SelectInfoByProviderID(System.Guid,System.Guid)">
            <summary>
            查询某供货商的信息集合
            </summary>
            <param name="providerID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategorys(System.Guid,System.Guid)">
            <summary>
            根据父级ParentID和ChannelID获得其子类信息
            </summary>
            <param name="ParentID"></param>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategorysD(System.Guid,System.Guid)">
            <summary>
            根据父级ParentID和ChannelID获得其子类信息
            </summary>
            <param name="ParentID"></param>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetTopInfoCategorys(System.Guid)">
            <summary>
            根据ChannelID获得其父类信息
            </summary>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategorys(System.Guid)">
            <summary>
            根据父级ParentID获得其子类信息
            </summary>
            <param name="ParentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategoryByID(System.Guid)">
            <summary>
            根据ID获得分类信息
            </summary>
            <param name="categoryID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategoryByChannelIDFromCache(System.Guid)">
            <summary>
            根据信息类别表ChannelID(频道ID)取信息类别实体集合
            </summary>
            <param name="ChannelID">ChannelID(频道ID)</param>
            <returns>IList-Entity_InfoCategory实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategoryFromCache(System.String)">
            <summary>
            从缓存获得一些分类的字典
            </summary>
            <param name="categoryList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.UpdateInfoCategory(uni2uni.com.Model.Info.Entity.Entity_InfoCategory)">
            <summary>
            修改方法
            </summary>
            <param name="entity">Entity_InfoCategory实体</param>
            <returns>执行结果状态</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.InsertInfoCategory(uni2uni.com.Model.Info.Entity.Entity_InfoCategory)">
            <summary>
            插入方法
            </summary>
            <param name="entity">Entity_InfoCategory实体</param>
            <returns>执行结果状态</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.CheckExistCategory(System.String,System.Guid,System.Guid)">
            <summary>
            通过类别名称和父ID和频道ID确定是否存在
            </summary>
            <param name="CategoryName">类别名称</param>
            <param name="ParentID">父ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategoryByCategoryIndex(System.Int32)">
            <summary>
            根据信息类别表CategoryIndex取信息类别实体
            </summary>
            <param name="CategoryIndex">CategoryIndex</param>
            <returns>Entity_InfoCategory实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategory.GetInfoCategoryTreeByChannelID(System.Guid)">
            <summary>
            获得分类树用于绑定下拉框，显示分类的层级关系
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategoryRelation.InsertInfoCategoryRelation(uni2uni.com.Model.Info.Entity.Entity_InfoCategoryRelations)">
            <summary>
            添加一条信息类别管理信息
            </summary>
            <param name="infoCategoryRelation">信息类别关系实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategoryRelation.UpdateInfoCategoryRelation(uni2uni.com.Model.Info.Entity.Entity_InfoCategoryRelations)">
            <summary>
            修改一条信息类别管理信息
            </summary>
            <param name="infoCategoryRelation"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategoryRelation.DeleteInfoCategoryRelation(System.Guid)">
            <summary>
            删除一条类别关联信息
            </summary>
            <param name="categoryID">ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategoryRelation.GetInfoCategoryRelationsByCategoryID(System.Guid)">
            <summary>
            通过类别ID查询和供货商类别对应关系列表
            </summary>
            <param name="categoryID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IInfoCategoryRelation.GetInfoCategoryRelationsByProviderIDAndSourceFullPath(System.Guid,System.String)">
            <summary>
            通过供应商ID和来源全路径获得网站类别关系列表
            </summary>
            <param name="providerID">供应商ID</param>
            <param name="SourceFullPath">来源全路径</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.InsertIntent(uni2uni.com.Model.Info.Entity.Entity_Intent)">
            <summary>
            插入目的记录
            </summary>
            <param name="Intent">目的实体</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.UpdateIntent(uni2uni.com.Model.Info.Entity.Entity_Intent)">
            <summary>
            更新目的记录
            </summary>
            <param name="Intent">目的实体</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.DeleteIntent(System.Guid)">
            <summary>
            删除目的记录
            </summary>
            <param name="IntentID">目的ID</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.GetIntentByID(System.Guid)">
            <summary>
            通过ID获得一条目的记录
            </summary>
            <param name="IntentID">目的ID</param>
            <returns>目的记录实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.GetAllIntentList">
            <summary>
            获得所有的目的记录
            </summary>
            <returns>目的实体记录集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.GetIntentByDirName(System.String)">
            <summary>
            通过目录名称获得目的记录
            </summary>
            <param name="DirName">目录名称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.GetIntentByChannelID(System.Guid,System.String)">
            <summary>
            根据前缀获得某频道所在Intent信息
            </summary>
            <param name="channelID">频道ID</param>
            <param name="prefix">dir前缀</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IIntent.GetIntentByPrefixDir(System.String)">
            <summary>
            根据前缀获得Intent信息
            </summary>
            <param name="prefix">dir前缀</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IMeta.GetMetaList">
            <summary>
            获得Meta列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IMeta.GetMetaByID(System.Guid)">
            <summary>
            通过ID获得Meta信息
            </summary>
            <param name="MetaID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IMeta.AddNewMeta(uni2uni.com.Model.Info.Entity.Entity_Metas)">
            <summary>
            添加一条Meta信息
            </summary>
            <param name="ett_Meta"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IMeta.UpdateMeta(uni2uni.com.Model.Info.Entity.Entity_Metas)">
            <summary>
            修改一条Meta信息
            </summary>
            <param name="ett_Meta"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IMeta.GetBMetaByChannelID(System.Guid)">
            <summary>
            根据频道ID查询Meta信息
            </summary>
            <param name="ChannelID">频道ID</param>
            <returns>BMeta实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrice.GetPrices(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            根据价格表InfoID及其ExpDateTime(有效截至时间)取价格信息实体
            </summary>
            <param name="InfoID">InfoID</param>
            <param name="ExpDateTime">ExpDateTime(有效截至时间)</param>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <returns>IList-Entity_Prices实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetPricesByInfoID(System.Guid)">
            <summary>
            通过ID获得Prices信息
            </summary>
            <param name="PricesID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetPricesByIDBEP(System.Guid,System.DateTime,System.DateTime,System.String,System.Int32)">
            <summary>
            根据价格表InfoID、ExpDateTime(有效截至时间)、PriceTitle房型取价格信息实体
            </summary>
            <param name="InfoID"></param>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <param name="PriceTitle">房型</param>
            <param name="State">0取列表，1取第一条</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetPricesByMaxDate(System.Guid,System.Guid)">
            <summary>
            根据价格表InfoID,PriceTitle,ProviderID及其ExpDateTime(有效截至时间)取价格信息实体
            </summary>
            <param name="InfoID"></param>
            <param name="PriceTitle"></param>
            <param name="ProviderID"></param>
            <param name="userInDate">开始时间</param>
            <param name="userOutDate">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetPricesByIPBEP(System.Guid,System.DateTime,System.Guid)">
            <summary>
            根据价格表InfoID及其ProviderID(供货商编号)取最大记录天数的价格信息实体
            </summary>
            <param name="InfoID">InfoID</param>
            <param name="ProviderID">ProviderID(供货商编号)</param>
            <returns>IList-Entity_Prices实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetPricesByIP(System.Guid,System.Guid)">
            <summary>
            根据价格表InfoID、ProviderID得到某酒店的一个房型某一供应商的全部记录
            </summary>
            <param name="InfoID">InfoID</param>
            <param name="ProviderID">ProviderID(供货商编号)</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetALLPricesByInfoID(System.Guid)">
            <summary>
            根据价格表InfoID得到某酒店的全部记录
            </summary>
            <param name="InfoID">InfoID</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IPrices.GetPricesByInfoIDAndInTime(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            根据价格表InfoID和用户输入的时间得到记录
            </summary>
            <param name="InfoID">InfoID</param>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProvider">
            <summary>
            逻辑层供货商接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.InsertProvider(uni2uni.com.Model.Info.Entity.Entity_Provider)">
            <summary>
            添加一个供货商信息
            </summary>
            <param name="provider">供货商实体</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.UpdateProvider(uni2uni.com.Model.Info.Entity.Entity_Provider)">
            <summary>
            修改一条供货商信息
            </summary>
            <param name="provider">供货商实体</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByProviderID(System.Guid)">
            <summary>
            根据供货商ID获得供货商信息
            </summary>
            <param name="providerID">供货商ID</param>
            <returns>供货商实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetAllProviders">
            <summary>
            获得所有供货商信息
            </summary>
            <returns>供货商实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByProviderName(System.String)">
            <summary>
            根据供货商名称获得供货商信息
            </summary>
            <param name="providerName">供货商名称</param>
            <returns>供货商实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByProviderNameL(System.String)">
            <summary>
            根据供货商名称获得供货商信息
            </summary>
            <param name="providerName">供货商名称</param>
            <returns>供货商实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByCondition(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            根据查询条件获得供货商信息
            </summary>
            <param name="categoryID">类别ID</param>
            <param name="gradeID">级别ID</param>
            <param name="channelID">频道ID</param>
            <param name="status">状态(null:忽略此搜索条件)</param>
            <param name="keyword">关键字</param>
            <param name="cityid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByCondition(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            根据查询条件获得供货商信息
            </summary>
            <param name="categoryID">类别ID</param>
            <param name="gradeID">级别ID</param>
            <param name="channelID">频道ID</param>
            <param name="status">状态(null:忽略此搜索条件)</param>
            <param name="keyword">关键字</param>
            <param name="cityid"></param>
            <param name="islistPage"></param>
            <param name="sort"></param>
            <param name="hasContract"></param>
            <param name="hasRakeback"></param>
            <returns>供货商实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByCondition(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            根据查询条件获得供货商信息
            </summary>
            <param name="categoryID">类别ID</param>
            <param name="gradeID">级别ID</param>
            <param name="channelID">频道ID</param>
            <param name="status">状态(null:忽略此搜索条件)</param>
            <param name="keyword">关键字</param>
            <param name="cityid"></param>
            <param name="islistPage"></param>
            <param name="sort"></param>
            <param name="hasContract"></param>
            <param name="hasRakeback"></param>
            <param name="cityServiceID"></param>
            <param name="ExtendCategory"></param>
            <returns>供货商实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByChannelID(System.Guid)">
            <summary>
            根据频道ID获得供货商信息(非禁用状态)
            </summary>
            <param name="channelID">频道ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByChannelIDANDCityID(System.Guid,System.Int32)">
            <summary>
            根据频道ID和城市ＩＤ获得供货商信息(非禁用状态)
            </summary>
            <param name="channelID">频道ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByChannelID_Checked(System.Guid)">
            <summary>
            根据频道ID获得供货商信息(已审核状态)
            </summary>
            <param name="channelID">频道ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByChannelIDList_Checked(System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据频道ID列表获得其供货商信息(已审核状态)
            </summary>
            <param name="channelIDList">channelIDList(ID之间"|"分隔)</param>
            <param name="pagesize">页大小</param>
            <param name="pageid">页码</param>
            <param name="isFirstTime">是否第一次查询</param>
            <param name="totalcount">数据数量</param>
            <returns>Entity_BrandInfo List</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByCategoryID(System.String)">
            <summary>
            根据供货商类型ID获得供货商信息
            </summary>
            <param name="categoryID">供货商类型ID(0:表示全部)</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.SelectInfoByProviderID(System.Guid)">
            <summary>
            根据供货商ID号获取该供货商的频道ID号
            </summary>
            <param name="ProviderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByIsOpen(System.Byte)">
            <summary>
            根据供货商开关查询供货商信息
            </summary>
            <param name="status">供货商开关  0正常，1暂停服务，2删除。</param>
            <returns>供货商实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByMProviderID(System.String)">
            <summary>
            查询多个ProviderID
            </summary>
            <param name="ProviderIDList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.SelectProviderByKeyWord(System.String,System.String)">
            <summary>
            按关键字查询供货商信息
            </summary>
            <param name="strKeyWord">关键字</param>
            <param name="strSearchType">查询类别0用户名 1证件号码 2电话号码 3姓名 4会员卡号 5会员唯一标识号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderListByCondition(System.Guid,System.String)">
            <summary>
            条件查询供货商模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderByIsOpenForDropdownList(System.Byte)">
            <summary>
            根据供货商开关查询供货商信息(供货商名称包含拼音，用于下拉框快捷选择)
            </summary>
            <param name="status">供货商开关  0正常，1暂停服务，2删除。</param>
            <returns>供货商实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.GetProviderFromSearchEngine(System.String,System.Int32,System.Int32,uni2uni.com.Model.Info.Entity.BEntity_StatSearchTotalCount@)">
            <summary>
            从搜索引擎获得供货商信息
            </summary>
            <param name="keyword"></param>
            <param name="page"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProvider.UpdateProviderStar(System.Guid,System.Int32)">
            <summary>
            更新供应商星级
            </summary>
            <param name="providerId">供应商ID</param>
            <param name="star">星级</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderCategory">
            <summary>
            供货商种类接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.InsertCategory(uni2uni.com.Model.Info.Entity.Entity_ProviderCategory)">
            <summary>
            插入一条Category记录
            </summary>
            <param name="ettCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.UpdateCategory(uni2uni.com.Model.Info.Entity.Entity_ProviderCategory)">
            <summary>
            修改一条Category记录
            </summary>
            <param name="ettCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.DeleteCategory(System.Guid)">
            <summary>
            删除一条Category记录
            </summary>
            <param name="guidCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.GetCategoryByGUID(System.Guid)">
            <summary>
            通过Guid获得一条Category记录
            </summary>
            <param name="guidCategory"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.GetAllCategory">
            <summary>
            获得全部的Category
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.GetCategoryByParentID(System.Guid)">
            <summary>
            通过大类获取Category记录
            </summary>
            <param name="ParentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderCategory.GetCategoryList">
            <summary>
            获得供货商种类的ID和Name的键值对信息用于绑定到下拉列表框中
            </summary>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderContract">
            <summary>
            ProviderContract逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderContract.InsertContract(uni2uni.com.Model.Info.Entity.Entity_ProviderContract)">
            <summary>
            插入一条Contract记录
            </summary>
            <param name="ettContract"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderContract.UpdateContract(uni2uni.com.Model.Info.Entity.Entity_ProviderContract)">
            <summary>
            修改一条Contract记录
            </summary>
            <param name="ettContract"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderContract.DeleteContract(System.Guid)">
            <summary>
            删除一条Contract记录
            </summary>
            <param name="guidContract"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderContract.GetContractByGUID(System.Guid)">
            <summary>
            通过Guid获得一条Contract记录
            </summary>
            <param name="guidContract"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderContract.GetAllContract">
            <summary>
            获得全部的Contract
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderContract.GetContractByProviderID(System.Guid)">
            <summary>
            通过ProviderID获得Contract记录
            </summary>
            <param name="strProviderID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderDelivery">
            <summary>
            ProviderDelivery逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.InsertDelivery(uni2uni.com.Model.Info.Entity.Entity_ProviderDelivery)">
            <summary>
            插入一条Delivery记录
            </summary>
            <param name="ettDelivery"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.UpdateDelivery(uni2uni.com.Model.Info.Entity.Entity_ProviderDelivery)">
            <summary>
            修改一条Delivery记录
            </summary>
            <param name="ettDelivery"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.DeleteDelivery(System.Guid)">
            <summary>
            删除一条Delivery记录
            </summary>
            <param name="guidDelivery"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.GetDeliveryByGUID(System.Guid)">
            <summary>
            通过Guid获得一条Delivery记录
            </summary>
            <param name="guidDelivery"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.GetAllDelivery">
            <summary>
            获得全部的Delivery
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.GetDeliveryByProviderID(System.Guid)">
            <summary>
            通过ProviderID获得Delivery记录集
            </summary>
            <param name="strProviderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.SelectLessCost(System.String,System.Int32)">
            <summary>
            获得订单供应商配送费
            </summary>
            <param name="strProviderId">供货商ID</param>
            <param name="proviceId">省份ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.GetDeliveryCost(System.String,System.Int32,System.Decimal)">
            <summary>
            获得订单供应商配送费
            </summary>
            <param name="providerId">供货商ID</param>
            <param name="proviceId">配送地址</param>
            <param name="sumMoney">总金额</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.GetDeliveryCost(System.String,System.Int32,System.Decimal,System.String)">
            <summary>
            获得订单供应商配送费
            </summary>
            <param name="strProviderId">供货商ID</param>
            <param name="proviceId">配送地址</param>
            <param name="sumMoney">总金额</param>
            <param name="strProviderName">供货商Name</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderDelivery.GetDeliveryCost(System.Guid,System.String,System.Decimal)">
            <summary>
            获得配送费
            </summary>
            <param name="strProviderID"></param>
            <param name="strAddress"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderExecuteEnchiridion">
            <summary>
            供货商执行手册业务接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderExecuteEnchiridion.InsertProviderExecuteEnchiridion(uni2uni.com.Model.Info.Entity.Entity_ProviderExecuteEnchiridion)">
            <summary>
            插入一条ProviderExecuteEnchiridion记录
            </summary>
            <param name="ettProviderExecuteEnchiridion">供货商执行手册数据实体</param>
            <returns>执行结果状态</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderExecuteEnchiridion.UpdateProviderExecuteEnchiridion(uni2uni.com.Model.Info.Entity.Entity_ProviderExecuteEnchiridion)">
            <summary>
            修改一条ProviderExecuteEnchiridion记录
            </summary>
            <param name="ettProviderExecuteEnchiridion">供货商执行手册数据实体</param>
            <returns>执行结果状态</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderExecuteEnchiridion.GetProviderExecuteEnchiridionByProviderID(System.Guid)">
            <summary>
            通过Guid获得一条ProviderExecuteEnchiridion记录
            </summary>
            <param name="providerId">供货商执行手册ID</param>
            <returns>供货商执行手册数据实体</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderGrade">
            <summary>
            ProviderGrade接口   
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderGrade.InsertGrade(uni2uni.com.Model.Info.Entity.Entity_ProviderGrade)">
            <summary>
            插入一条Grade记录
            </summary>
            <param name="ettGrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderGrade.UpdateGrade(uni2uni.com.Model.Info.Entity.Entity_ProviderGrade)">
            <summary>
            修改一条Grade记录
            </summary>
            <param name="ettGrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderGrade.DeleteGrade(System.Guid)">
            <summary>
            删除一条Grade记录
            </summary>
            <param name="guidGrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderGrade.GetGradeByGUID(System.Guid)">
            <summary>
            通过Guid获得一条Grade记录
            </summary>
            <param name="guidGrade"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderGrade.GetAllGrade">
            <summary>
            获得全部的Grade
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderGrade.GradeExist(System.String)">
            <summary>
            判断等级名称是否存在
            </summary>
            <param name="GradeName">等级名称</param>
            <returns>是/否</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderLinkman">
            <summary>
            ProviderLinkman逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.InsertLinkman(uni2uni.com.Model.Info.Entity.Entity_ProviderLinkman)">
            <summary>
            插入一条Linkman记录
            </summary>
            <param name="ettLinkman"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.UpdateLinkman(uni2uni.com.Model.Info.Entity.Entity_ProviderLinkman)">
            <summary>
            修改一条Linkman记录
            </summary>
            <param name="ettLinkman"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.DeleteLinkman(System.Guid)">
            <summary>
            删除一条Linkman记录
            </summary>
            <param name="guidLinkman"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetLinkmanByGUID(System.Guid)">
            <summary>
            通过Guid获得一条Linkman记录
            </summary>
            <param name="guidLinkman"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetLinkmanByLinkmanIDList(System.String)">
            <summary>
            通过一组LinkmanID获得联系人信息
            </summary>
            <param name="guidLinkman"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetAllLinkman">
            <summary>
            获得全部的Linkman
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetLinkmanByProviderID(System.Guid)">
            <summary>
            根据供货商ID获得联系人信息
            </summary>
            <param name="providerID">供货商ID</param>
            <returns>联系人实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetLinkmanByKeyword(System.String,System.String)">
            <summary>
            根据关键字查询联系人信息
            </summary>
            <param name="keyword">关键字</param>
            <returns>联系人实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetNewUpdateLinkman(System.Int32)">
            <summary>
            获得最新修改的Count条联系人信息
            </summary>
            <param name="count">获取的联系人数量</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderLinkman.GetProviderLinkManListByCondition(System.Guid,System.String)">
            <summary>
            条件查询供货商联系人模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderPreferential.InsertProviderPreferential(uni2uni.com.Model.Info.Entity.Entity_ProviderPreferential)">
            <summary>
            插入一条ProviderPreferential记录
            </summary>
            <param name="providerPreferential"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderPreferential.UpdateProviderPreferential(uni2uni.com.Model.Info.Entity.Entity_ProviderPreferential)">
            <summary>
            更新一条ProviderPreferential记录
            </summary>
            <param name="providerPreferential"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderPreferential.GetProviderPreferentialByID(System.Guid)">
            <summary>
            通过ID获得一条ProviderPreferential记录
            </summary>
            <param name="E_ProviderPreferentialID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderPreferential.GetProviderPreferentialByProviderIdAndTitle(System.Guid,System.String)">
            <summary>
            通过providerId,title获得n条ProviderPreferential记录
            </summary>
            <param name="E_ProviderPreferentialID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderPreferential.GetProviderPreferentialByCondition(System.Guid,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            根据商品ID查询ProviderPreferential信息
            </summary>
            <param name="InfoID">商品ID</param>
            <param name="pagesize">页大小</param>
            <param name="pageid">当前页</param>
            <param name="totalcount">总行数</param>
            <returns>ProviderPreferential信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRakeback.InsertRakeback(uni2uni.com.Model.Info.Entity.Entity_ProviderRakeback)">
            <summary>
            插入一条Rakeback记录
            </summary>
            <param name="ettRakeback">Rakeback实体</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRakeback.UpdateRakeback(uni2uni.com.Model.Info.Entity.Entity_ProviderRakeback)">
            <summary>
            修改一条Rakeback记录
            </summary>
            <param name="ettRakeback">RakeBack实体</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRakeback.GetRakebackByGUID(System.Guid)">
            <summary>
            通过Guid获得一条Rakeback记录
            </summary>
            <param name="guidRakeback"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRakeback.GetAllRakeback">
            <summary>
            获得全部的Rakeback
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRakeback.GetRakebackByProviderID(System.Guid)">
            <summary>
            通过ProviderID获得Rakeback记录集
            </summary>
            <param name="strProviderID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderRebate">
            <summary>
            ProviderRebate逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.InsertProviderRebate(uni2uni.com.Model.Info.Entity.Entity_ProviderRebate)">
            <summary>
            插入供货商返佣
            </summary>
            <param name="entity_ProviderRebate">供货商返佣实体</param>
            <returns>true/false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.UpdateProviderRebate(uni2uni.com.Model.Info.Entity.Entity_ProviderRebate)">
            <summary>
            修改供货商返佣
            </summary>
            <param name="entity_ProviderRebate">供货商返佣实体</param>
            <returns>true/false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateByCondition(uni2uni.com.Model.Info.Entity.Entity_ProviderRebate,System.Int32,System.Int32)">
            <summary>
            根据条件查询供货商返佣
            </summary>
            <param name="providerRebate">供货商返佣实体</param>
            <param name="pageSize">每页显示条数</param>
            <param name="pageCurrent">当前页数</param>
            <returns>供货商返佣</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateByRebateID(System.Guid)">
            <summary>
            通过记录ID查询供货商返佣
            </summary>
            <param name="rebateID">记录ID</param>
            <returns>供货商返佣</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateByChannelIdAndProviderId(System.Guid,System.Guid)">
            <summary>
            通过频道ID和供应商ID查询供应商返佣记录
            </summary>
            <param name="channeled">频道ID</param>
            <param name="providerId">供应商ID</param>
            <returns>供应商返佣记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateMoney(System.Collections.Generic.IList{uni2uni.com.Model.ShoppingCar.IShoppingDetail},System.Decimal,System.Decimal@)">
            <summary>
            获得所有商品的供货商返佣
            </summary>
            <param name="shoppingDetailList">商品列表</param>
            <param name="uniMoney">代金券</param>
            <param name="custRebateRate">代金返佣比率</param>
            <returns>供货商返佣</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateListByConditions(System.Guid,System.Guid)">
            <summary>
            通过频道ID和供应商ID查询供应商返佣记录
            </summary>
            <param name="channeled">频道ID</param>
            <param name="providerId">供应商ID</param>
            <returns>供应商返佣记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.CheckProviderRebateByChannelIdAndProviderId(System.Guid,System.Guid,System.Guid)">
            <summary>
            通过频道ID和供应商ID查询供应商返佣记录
            </summary>
            <param name="channeled">频道ID</param>
            <param name="providerId">供应商ID</param>
            <param name="rebateId">频道供货商返佣规则ID号</param>
            <returns>供应商返佣记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetMaxProviderRebateByProviderId(System.Guid)">
            <summary>
            通过供应商ID查询供应商最高返佣记录
            </summary>
            <param name="providerId">供应商ID</param>
            <returns>供应商返佣记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateByChannelList(System.String,System.String,System.String)">
            <summary>
            根据频道集合获取所有供货商的返佣信息
            </summary>
            <param name="strChannelList">频道ID集合以及“|”分隔,如果是查询所有的就传入空值</param>
            <param name="strTopCount">查询条数，如果查询全部就传入空值</param>
            <param name="strSortName">排序字段</param>
            <returns>供货商返佣信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateByCondition(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            根据条件查询供货商返佣信息结果集合
            </summary>
            <param name="strChannelList">频道ID集合以及“|”分隔,如果是查询所有的就传入空值</param>
            <param name="nPageSize">一页多少条</param>
            <param name="nPageCurrent">第几页</param>
            <param name="strSortName">排序字段</param>
            <returns>分页的结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRebate.GetProviderRebateCountByCondition(System.String)">
            <summary>
            根据条件查询供货商返佣信息条数
            </summary>
            <param name="strChannelList">频道ID集合以及“|”分隔,如果是查询所有的就传入空值</param>
            <returns>查询信息的总条数</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderRelation">
            <summary>
            供货商频道关系接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.InsertProviderRelation(uni2uni.com.Model.Info.Entity.Entity_ProviderRelations)">
            <summary>
            添加一条供应商与频道关联记录
            </summary>
            <param name="ProviderRelation"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.InsertProviderRelations(System.Collections.Generic.IList{uni2uni.com.Model.Info.Entity.Entity_ProviderRelations})">
            <summary>
            添加一个关系集合
            </summary>
            <param name="ProviderRelationList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.UpdateProviderRelations(uni2uni.com.Model.Info.Entity.Entity_ProviderRelations)">
            <summary>
            更新一条供应商与频道关联记录
            </summary>
            <param name="ProviderRelation"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.DeleteProviderRelation(System.Guid,System.Guid)">
            <summary>
            删除一个关系
            </summary>
            <param name="ProviderID"></param>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.DeleteProviderRelationByChannelID(System.Guid)">
            <summary>
            删除某频道的供应商关联记录
            </summary>
            <param name="ProviderID"></param>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.DeleteProviderRelationByProviderID(System.Guid)">
            <summary>
            删除某供货商的频道关联记录
            </summary>
            <param name="ProviderID"></param>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.SelectEntity_ProviderRelationsByChannelID(System.Guid)">
            <summary>
            按频道ID查询(全部)
            </summary>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.SelectEntity_ProviderRelationsByChannelID_Checked(System.Guid)">
            <summary>
            按频道ID查询(已审核状态)
            </summary>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.SelectEntity_ProviderRelationsByChannelIDAndProviderID(System.Guid,System.Guid)">
            <summary>
            按频道ID与供应商ID查询
            </summary>
            <param name="ChannelID"></param>
            <param name="ProviderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRelation.SelectEntity_ProviderRelationsByProviderID(System.Guid)">
            <summary>
            按频道ID查询
            </summary>
            <param name="ProviderID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IProviderRemark">
            <summary>
            评论逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRemark.InsertProviderRemark(uni2uni.com.Model.Info.Entity.Entity_ProviderRemark)">
            <summary>
            插入供应商评论
            </summary>
            <param name="entity_ProviderRemark">供应商评论</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IProviderRemark.GetProviderRemarkByInfoID(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            根据商品ID查询评论信息
            </summary>
            <param name="InfoID">商品ID</param>
            <param name="pagesize">页大小</param>
            <param name="pageid">当前页</param>
            <param name="totalcount">总行数</param>
            <returns>评论信息</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IRemark">
            <summary>
            评论逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.GetRemarkByChannelProviderID(uni2uni.com.Model.Info.Entity.Entity_Remark)">
            <summary>
            通过Channel得到有评论的InfoID
            </summary>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.GetRemarkCount(System.String)">
            <summary>
            查询商品评分及评论数
            </summary>
            <param name="infoIDList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.ManageUpdateRemark(System.Int32,System.Int32,System.Guid)">
            <summary>
            后台管理
            </summary>
            <param name="Approved"></param>
            <param name="RemarkPriority"></param>
            <param name="RemarkID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.InsertRemark(uni2uni.com.Model.Info.Entity.Entity_Remark)">
            <summary>
            插入评论信息
            </summary>
            <param name="MemberID"></param>
            <param name="NickName"></param>
            <param name="InfoID"></param>
            <param name="ServiceProviderID"></param>
            <param name="ChannelID"></param>
            <param name="Description"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.GetRemarkByInfoID(System.Guid,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            通过InfoID得到评论
            </summary>
            <param name="ChannelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.ShowRemark(System.Guid,System.Int32)">
            <summary>
            显示评论
            </summary>
            <param name="InfoID"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IRemark.GetRemarkByInfoID(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            根据商品ID查询评论信息
            </summary>
            <param name="InfoID">商品ID</param>
            <param name="pagesize">页大小</param>
            <param name="pageid">当前页</param>
            <param name="totalcount">总行数</param>
            <returns>评论信息</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.ISegment">
            <summary>
            碎片逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.InsertSegment(uni2uni.com.Model.Info.Entity.Entity_Segment,System.String)">
            <summary>
            添加一个Segment
            </summary>
            <param name="ettRakeback">Rakeback实体</param>
            <returns>success表示成功，其余失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.UpdateSegment(uni2uni.com.Model.Info.Entity.Entity_Segment,System.String)">
            <summary>
            修改一个Segment
            </summary>
            <param name="ettSegment"></param>
            <returns>success表示成功，其余失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.DeleteSegment(System.Guid)">
            <summary>
            删除一个Segment
            </summary>
            <param name="SegmentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.GetSegmentBySegmentID(System.Guid)">
            <summary>
            根据SegmentID查询
            </summary>
            <param name="SegmentID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.GetAllSegment">
            <summary>
            查询所有Segment
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.GetSegmentBySegmentName(System.String)">
            <summary>
            根据SegmentName查询
            </summary>
            <param name="SegmentName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ISegment.GetFragmentFile(System.String)">
            <summary>
            从webservice获得碎片内容
            </summary>
            <param name="FileName"></param>
            <returns>错误信息(打开文件失败/服务器故障)</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IService">
            <summary>
            预定服务逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.InsertService(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            添加预定服务信息
            </summary>
            <param name="ettService"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.UpdateService(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            修改预定服务信息
            </summary>
            <param name="ettService"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServicesByServiceID(System.Guid)">
            <summary>
            根据ServiceID查询
            </summary>
            <param name="ServiceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServicesAll(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            获得全部信息
            </summary>
            <param name="entity_Services"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServicesAll(uni2uni.com.Model.Info.Entity.Entity_Services,System.Boolean)">
            <summary>
            获得全部信息
            </summary>
            <param name="entity_Services"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServiceByCondition(System.Guid,System.Guid,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            查询用户服务信息
            </summary>
            <param name="MemberID"></param>
            <param name="ChannelID"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServiceByMemberID(System.Guid)">
            <summary>
            获得某用户的所有服务信息
            </summary>
            <param name="memberid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServiceByMemberIDForRelate(System.Guid)">
            <summary>
            获得某用户的可编辑服务信息（验收已通过、验收未通过、需求取消三种状态需求除外）
            </summary>
            <param name="memberid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServicesListByCondition(System.Guid,System.String)">
            <summary>
            条件查询需求模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServiceByMemberIDAndStatus(System.Guid)">
            <summary>
            获得某用户的未完成服务信息
            </summary>
            <param name="memberid">会员ID</param>
            <returns>服务表实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServiceIDList(System.Int32,System.Guid)">
            <summary>
            获得需求ID列表
            </summary>
            <param name="preferenceID">偏好ID</param>
            <param name="memberID">会员ID</param>
            <returns>需求ID列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServiceBayDate(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            根据时间段查询需求信息
            </summary>
            <param name="dStartDate">开始日期时间</param>
            <param name="dEndDate">结束日期时间</param>
            <returns>结果集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServicesByCondition(System.DateTime,System.DateTime,System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            根据查询条件查询需求信息
            </summary>
            <param name="entity_Services">服务表实体</param>
            <param name="channelIDList">频道ID</param>
            <returns>服务表实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetServicesByCondition(System.DateTime,System.DateTime,System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据查询条件查询需求信息
            </summary>
            <param name="entity_Services">服务表实体</param>
            <param name="channelIDList">频道ID</param>
            <returns>服务表实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetSatisfactionCount(uni2uni.com.Model.Info.Entity.Entity_Services,System.String)">
            <summary>
            需求满意度统计
            </summary>
            <param name="entity_Services">服务表实体</param>
            <param name="channelIDList">频道ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetExpendAmount(uni2uni.com.Model.Info.Entity.Entity_Services,System.String)">
            <summary>
            查询服务总时长
            </summary>
            <param name="entity_Services">服务表实体</param>
            <param name="channelIDList">频道ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IService.GetCustomerRequirement(System.Guid,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            得到大客户经理所属客户的需求
            </summary>
            <param name="gManagerMemberID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IServiceSatisfaction">
            <summary>
            需求满意度逻辑接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceSatisfaction.GetServiceSatisfaction(System.Guid)">
            <summary>
            按需求ID查询满意度
            </summary>
            <param name="serviceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceSatisfaction.InsertServiceSatisfaction(uni2uni.com.Model.Info.Entity.Entity_ServiceSatisfaction)">
            <summary>
            添加需求满意度信息
            </summary>
            <param name="ettService">需求满意度实体</param>
            <returns>执行结果状态</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceSatisfaction.UpdateServiceSatisfaction(uni2uni.com.Model.Info.Entity.Entity_ServiceSatisfaction)">
            <summary>
            修改需求满意度信息
            </summary>
            <param name="ettService">需求满意度实体</param>
            <returns>执行结果状态</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Info.IServiceTimer">
            <summary>
            需求时限设置逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.InsertServiceTimer(uni2uni.com.Model.Info.Entity.Entity_ServiceTimer)">
            <summary>
            添加一条需求时限设置记录
            </summary>
            <param name="ettRakeback">ServiceTimer实体</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.InsertServiceTimerRemind(uni2uni.com.Model.Info.Entity.Entity_ServiceTimerRemind)">
            <summary>
            添加需求时限提醒设置记录
            </summary>
            <param name="ettServiceTimerRemind"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.UpdateServiceTimer(uni2uni.com.Model.Info.Entity.Entity_ServiceTimer)">
            <summary>
            修改需求时限设置信息
            </summary>
            <param name="ettService"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.UpdateServiceTimerRemind(uni2uni.com.Model.Info.Entity.Entity_ServiceTimerRemind)">
            <summary>
            修改需求时限提醒设置记录
            </summary>
            <param name="ettServiceTimerRemind"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.DeleteServiceTimer(System.Guid)">
            <summary>
            删除需求时限设置信息
            </summary>
            <param name="ServiceTimerID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.DeleteServiceTimerRemind(System.Guid)">
            <summary>
            删除需求时限提醒设置信息
            </summary>
            <param name="ServiceTimerRemindID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.GetServiceTimerList">
            <summary>
            获取需求时限设置列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.GetServiceTimerRemindList(System.Guid)">
            <summary>
            根据ServiceTimerID获取需求时限提醒列表
            </summary>
            <param name="ServiceTimerID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.GetServiceTimerRemindByID(System.Guid)">
            <summary>
            根据ServiceTimerID获取需求时限设置记录
            </summary>
            <param name="ServiceTimerRemindID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.GetServiceTimerByID(System.Guid)">
            <summary>
            根据ServiceTimerID获取需求时限设置记录
            </summary>
            <param name="ServiceTimerID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.GetServiceTimerByCP(System.Guid,System.Guid)">
            <summary>
            根据频道ID、供应商ID获取需求时限设置记录
            </summary>
            <param name="ChannelID"></param>
            <param name="ProviderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IServiceTimer.SetServiceTimer(System.Int32,System.Guid,System.Byte,System.String)">
            <summary>
            设置需求提醒(调用任务提醒)
            </summary>
            <param name="TimeLimit">时限(小时)</param>
            <param name="ServiceID">需求ID</param>
            <param name="SetType">设置方式(1:添加方式 2:修改方式)</param>
            <param name="Content">文本</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ITemplate.GetHtml``1(System.String,System.String,System.Collections.Generic.IList{``0})">
            <summary>
            获得模板生成的Html
            </summary>
            <param name="Type">模板类型</param>
            <param name="TemplateCode">模板编码</param>
            <param name="beetInfo">数据集</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.ITemplate.GetTemplateCode(System.String)">
            <summary>
            获得模板编码
            </summary>
            <param name="ChannelDir">频道DirName</param>
            <returns>频道模板编码</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ITag.GetTagByTagID(System.Guid)">
            <summary>
            根据标签ID获取标签信息
            </summary>
            <param name="TagID">标签ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ITag.GetTagByTagID(System.String)">
            <summary>
            根据多个标签ID获取标签信息
            </summary>
            <param name="TagID">标签ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ITag.InsertTag(uni2uni.com.Model.CMS.Entity.Entity_Tag)">
            <summary>
            添加一条Tag记录
            </summary>
            <param name="ettTag"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ITag.UpdateTag(uni2uni.com.Model.CMS.Entity.Entity_Tag)">
            <summary>
            更新一条Tag记录
            </summary>
            <param name="ettTag"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ITag.DeleteTagByTagID(System.Guid)">
            <summary>
            根据标签ID删除一条记录
            </summary>
            <param name="TagID">标签ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.CMS.ITag.SelectTagByTagName(System.String)">
            <summary>
            根据标签名称查询标签
            </summary>
            <param name="TagName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.GetUniMoney(System.Guid)">
            <summary>
            获得客户代金券额度信息
            </summary>
            <param name="memberid">客户ID</param>
            <returns>UniMoney实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.GetUniMoneyRecordList(uni2uni.com.Model.User.Entity.BEntity_UniMoneyRecordQueryCondition)">
            <summary>
            根据条件查询代金券记录
            </summary>
            <param name="uniMoneyRecordQueryCondition">查询条件</param>
            <returns>代金券记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.CalUniMoney(System.Decimal,System.Decimal,System.Collections.Generic.IList{uni2uni.com.Model.ShoppingCar.IShoppingDetail},System.Int32)">
            <summary>
            计算订单获得代金券金额
            </summary>
            <param name="usedUniMoney">花费的代金券</param>
            <param name="otherMoney">其它不记代金的金额(现阶段为0)</param>
            <param name="shoppinglist">商品集合(商品里的价格是包括运费的)</param>
            <param name="stage">分期期数</param>
            <returns>获得的代金券金额</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.PaymentOrder(System.Guid,System.Decimal,System.String)">
            <summary>
            订单支付代金券处理逻辑(订单支付扣除)
            </summary>
            <param name="memberid">客户ID</param>
            <param name="usedMoney">花费的代金券</param>
            <param name="orderid">订单ID</param>
            <returns>支付代金券处理是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.CancelOrder(System.Guid,System.String)">
            <summary>
            取消订单代金券处理逻辑
            </summary>
            <param name="memberid">客户ID</param>
            <param name="orderid">订单ID</param>
            <returns>是否处理成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.RejectOrder(System.Guid,System.String)">
            <summary>
            退货相关代金券处理逻辑(暂无退货业务)
            </summary>
            <param name="memberid">客户ID</param>
            <param name="orderid">订单ID</param>
            <returns>是否处理成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.Charge(System.Guid,System.Decimal,System.String)">
            <summary>
            代金券充值处理逻辑
            </summary>
            <param name="memberid">客户ID</param>
            <param name="uniMoney">代金券金额</param>
            <returns>是否充值成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.ChargeOrder(System.Guid,System.Decimal,System.String)">
            <summary>
            代金券订单返还处理逻辑
            </summary>
            <param name="memberid">客户ID</param>
            <param name="uniMoney">代金券金额</param>
            <param name="orderid">订单ID</param>
            <returns>是否返还成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.OrderReimbursement(System.Guid,System.Decimal,System.String)">
            <summary>
            代金券退还处理逻辑
            </summary>
            <param name="memberid">客户ID</param>
            <param name="uniMoney">代金券金额</param>
            <param name="orderid">订单ID</param>
            <returns>是否返还成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Info.IUniMoney.UniMoneyExpend(System.Guid,System.Decimal,System.String)">
            <summary>
            代金券消费
            </summary>
            <param name="memberid">客户ID</param>
            <param name="uniMoney">代金券金额</param>
            <param name="orderid">订单ID</param>
            <returns>是否消费成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.InsertMaintainPlan(uni2uni.com.Model.Log.Entity.MaintainPlan)">
            <summary>
            添加计划步骤
            </summary>
            <param name="MaintainPlan"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.UpdateMaintainPlan(uni2uni.com.Model.Log.Entity.MaintainPlan)">
            <summary>
            修改计划步骤
            </summary>
            <param name="MaintainPlan"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.DeleteMaintainPlan(System.Guid)">
            <summary>
            删除计划步骤
            </summary>
            <param name="StepID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.GetMaintainPlanStepByPlanID(System.Guid)">
            <summary>
            根据StepID查询
            </summary>
            <param name="StepID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.GetMaintainPlanAll">
            <summary>
            获得全部信息
            </summary>
            <param name="entity_Services"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.GetMaintainPlanAll(uni2uni.com.Model.Log.Entity.MaintainPlan)">
            <summary>
            获得全部信息
            </summary>
            <param name="maintainPlan"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlan.GetMaintainPlanStepByStepID(System.Guid)">
            <summary>
            根据StepID查询
            </summary>
            <param name="StepID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.InsertMaintainPlanStep(uni2uni.com.Model.Log.Entity.MaintainPlanStep)">
            <summary>
            添加计划步骤
            </summary>
            <param name="maintainPlanStep"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.UpdateMaintainPlanStep(uni2uni.com.Model.Log.Entity.MaintainPlanStep)">
            <summary>
            修改计划步骤
            </summary>
            <param name="maintainPlanStep"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.DeleteMaintainPlanStep(System.Guid)">
            <summary>
            删除计划步骤
            </summary>
            <param name="StepID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.DeleteMaintainPlanStepByPlanID(System.Guid)">
            <summary>
            删除计划步骤，按PlanID
            </summary>
            <param name="PlanID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.GetMaintainPlanStepByStepID(System.Guid)">
            <summary>
            根据StepID查询
            </summary>
            <param name="StepID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.GetMaintainPlanStepAll(System.Guid)">
            <summary>
            获得全部信息
            </summary>
            <param name="PlanID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.GetPlanSendInfoLogList(uni2uni.com.Model.Log.Entity.CustomerRecord)">
            <summary>
            查询客户维护计划发送记录列表
            </summary>
            <param name="entity">查询条件实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.GetPlanSendInfoLogCount(uni2uni.com.Model.Log.Entity.CustomerRecord)">
            <summary>
            查询客户维护计划发送记录条数
            </summary>
            <param name="entity">查询条件实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMaintainPlanStep.GetPlanSendInfoLogByID(System.Guid)">
            <summary>
            查询客户维护计划发送记录
            </summary>
            <param name="gID">ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMemberCondition.GetMemberConditonByID(System.Guid)">
            <summary>
            根据ID号获取会员查询条件
            </summary>
            <param name="gMemberConditionID">会员条件ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMemberCondition.InsertMemberCondition(uni2uni.com.Model.Log.Entity.MemberCondition)">
            <summary>
            添加会员筛选条件
            </summary>
            <param name="MemberCondition"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMemberCondition.UpdateMemberCondition(uni2uni.com.Model.Log.Entity.MemberCondition)">
            <summary>
            修改会员筛选条件
            </summary>
            <param name="MemberCondition"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMemberCondition.GetMemberConditionAll">
            <summary>
            获得全部信息
            </summary>
            <param name="entity_Services"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Log.IMemberCondition.GetMemberConditonByConditionName(System.String)">
            <summary>
            根据查询条件名称获取会员查询条件
            </summary>
            <param name="ConditionName">会员条件名称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICalendarInfo.InsertCalendarInfo(uni2uni.com.Model.Manage.Entity.Entity_CalendarInfo)">
            <summary>
            添加一条日历记录信息
            </summary>
            <param name="entity_CalendarInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICalendarInfo.UpdateCalendarInfo(uni2uni.com.Model.Manage.Entity.Entity_CalendarInfo)">
            <summary>
            更新一条日历记录信息
            </summary>
            <param name="entity_CalendarInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICalendarInfo.DeleteCalendarInfo(System.Guid,System.Guid,System.DateTime,System.DateTime,System.String)">
            <summary>
            删除一条日历记录信息
            </summary>
            <param name="entity_CalendarInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICalendarInfo.SelectCalendarInfo(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            取得日历信息列表
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICalendarInfo.SelectCalendarInfoByCalendarInfoID(System.Guid)">
            <summary>
            根据日历信息ID取得单条日历信息
            </summary>
            <param name="gCalendarInfoID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICalendarInfo.GetCalendarInfoByServiceID(System.Guid)">
            <summary>
            根据ServiceID获取日历项
            </summary>
            <param name="serviceid">ServiceID</param>
            <returns>日历项列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICallRecord.GetCallRescordByDate(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            根据时间段获取通话记录信息
            </summary>
            <param name="dStartDate">开始时间</param>
            <param name="dEndDate">结束时间</param>
            <returns>通话记录实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICallRecord.Get400CallinRescordByDate(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            400转接数量
            </summary>
            <param name="dStartDate">开始时间</param>
            <param name="dEndDate">结束时间</param>
            <returns>通话记录实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICallRecord.GetCallOutRescordByDate(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            呼出电话数量
            </summary>
            <param name="dStartDate">开始时间</param>
            <param name="dEndDate">结束时间</param>
            <returns>通话记录实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICallRecord.GetCallNoAnswerByDate(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            根据时间段获取电话呼损记录信息
            </summary>
            <param name="dStartDate">开始时间</param>
            <param name="dEndDate">结束时间</param>
            <returns>通话记录实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICallRecord.GetCallDatStat(uni2uni.com.Model.Manage.Entity.Entity_CallRecordCondition)">
            <summary>
            获取数据统计的信息
            </summary>
            <param name="condition">查询条件</param>
            <returns>返回结果实体中calltype类型，Grade条数，TimeLength总时长（秒）</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactLabel.InsertContactLabel(uni2uni.com.Model.Manage.Entity.Entity_ContactLabel)">
            <summary>
            添加跟单标签
            </summary>
            <param name="ettContactLabel"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactLabel.UpdateContactLabel(uni2uni.com.Model.Manage.Entity.Entity_ContactLabel)">
            <summary>
            修改跟单标签
            </summary>
            <param name="ettContactLabel"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactLabel.DeleteContactLabel(System.Guid)">
            <summary>
            删除跟单标签
            </summary>
            <param name="labelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactLabel.GetContactLabelByID(System.Guid)">
            <summary>
            根据ID获得标签信息
            </summary>
            <param name="labelID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactLabel.GetAllUsableLabel">
            <summary>
            获得所有标签可用的
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactLabel.GetAllLable">
            <summary>
            获得所有标签
            </summary>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IContactPost">
            <summary>
            联系记录岗位表类的业务接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactPost.InsertContactPost(uni2uni.com.Model.Manage.Entity.Entity_ContactPost)">
            <summary>
            插入一条
            </summary>
            <param name="ettContactPost">联系记录岗位实体</param>
            <returns>bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactPost.UpdateContactPost(uni2uni.com.Model.Manage.Entity.Entity_ContactPost)">
            <summary>
            修改一条
            </summary>
            <param name="ettContactPost">联系记录岗位实体</param>
            <returns>bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactPost.DeleteContactPost(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="postID">联系记录岗位ID</param>
            <returns>bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactPost.SelectContactPostByPostID(System.Guid)">
            <summary>
            按ID查询
            </summary>
            <param name="postID">联系记录岗位ID</param>
            <returns>Entity_ContactPost</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactPost.SelectContactPostByPostName(System.String)">
            <summary>
            按名称查询
            </summary>
            <param name="postName">联系记录岗位名称</param>
            <returns>Entity_ContactPost</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactPost.SelectContactPostAll">
            <summary>
            查询所有
            </summary>
            <returns>IList</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.InserContactRecordInfo(uni2uni.com.Model.Manage.Entity.Entity_ContactRecord)">
            <summary>
            增加一条会员通讯记录信息
            </summary>
            <param name="ContactRecord">会员通讯记录实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.UpdateContactRecordInfo(uni2uni.com.Model.Manage.Entity.Entity_ContactRecord)">
            <summary>
            修改一条会员通讯记录信息
            </summary>
            <param name="ContactRecord">会员通讯记录实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoByMemberID(System.Guid)">
            <summary>
            查询一个会员的通讯记录
            </summary>
            <param name="MemberID">会员ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoByServiceID(System.Guid,System.String)">
            <summary>
            查询某需求的通讯记录
            </summary>
            <param name="ServiceID">会员ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoByRelatedID(System.String)">
            <summary>
            查询某订单的联系记录
            </summary>
            <param name="RelatedID">会员ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoByUID(System.Guid)">
            <summary>
            查询一条会员的通讯记录
            </summary>
            <param name="UID">记录ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoAll(System.Int32)">
            <summary>
            查询全部的通讯记录
            </summary>
            <param name="nTopNum">前多少条数据</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoCondition(uni2uni.com.Model.Manage.Permission.Entity_ContactRecordCondition)">
            <summary>
            根据条件查询联系记录
            </summary>
            <param name="nTopNum">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.SelectContactRecordInfoByFID(System.String)">
            <summary>
            查询某上传文件所在的联系信息记录
            </summary>
            <param name="FileGuid">上传文件ID</param>
            <returns>实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.GetTwoPostContactRecord(System.String,System.String,System.String)">
            <summary>
            获得两个职位之间的对话信息
            </summary>
            <param name="firstPost"></param>
            <param name="secondPost"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IContactRecord.GetNewContactRecordByPost(System.String,System.String)">
            <summary>
            获得某职位的最新联系记录
            </summary>
            <param name="Post"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICtiService.AgentStateNotify(System.String,System.Int32,System.DateTime)">
            <summary>
            坐席状态通知
            </summary>
            <param name="agentCode"></param>
            <param name="agentState"></param>
            <param name="ocurrTime"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICtiService.GetAgentsState">
            <summary>
            获取所有坐席当前状态列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ICtiService.GetAgentState(System.String)">
            <summary>
            获取某个坐席当前状态
            </summary>
            <param name="agentCode"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IDataStatistics">
            <summary>
            数据统计逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatistics.GetDataStatisticsByGroupSum(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            查询统计列表按组汇总结果
            </summary>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="memberType"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatistics.GetDataStatisticsByCondition(uni2uni.com.Model.Manage.Entity.Entity_DataStatistics)">
            <summary>
            根据条件查统计列表信息
            </summary>
            <param name="entity">查询条件</param>
            <returns>已经分页的信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatistics.GetDataStatisticsCountByCondition(uni2uni.com.Model.Manage.Entity.Entity_DataStatistics)">
             <summary>
            根据条件查统计列表信息条数
             </summary>
             <param name="entity">查询条件</param>
             <returns>查询信息的总条数</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IDataStatisticsNew">
            <summary>
            数据统计New逻辑层接口。
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetServicesCount(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            获得需求数，需要传参(StartTime,EndTime)必填(BMSortID,BMID)选填
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetServicesExpendAmount(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            获得需求处理时长，需要传参(StartTime,EndTime)必填(BMSortID,BMID)选填
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetServiceCity(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            获得需求区域分布统计，需要传参(StartTime,EndTime)必填(BMSortID,BMID)选填
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetServiceMemberCity(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            获得提交需求的会员区域分布统计，需要传参(StartTime,EndTime)必填(BMSortID,BMID)选填
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetServiceAverage(uni2uni.com.Model.Info.Entity.Entity_Services)">
            <summary>
            获得需求平均服务时长，需要传参(StartTime,EndTime)必填(BMSortID,BMID)选填
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetOwnMoreServicesMemberCount(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            统计时间在时间段内提交一次以上需求客户数
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns>客户数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetTwoMoreServicesMemberPercent(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            统计时间在时间段内提交两次以上需求客户占总客户的百分比
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns>客户数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.Get400CallInCount(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            400呼入数量
            </summary>
            <param name="dStartDate">开始日期</param>
            <param name="dEndDate">结束日期</param>
            <param name="gBMID"></param>
            <param name="gBMSortID"></param>
            <returns>数量</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetAllCallInCount(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            全部呼入数量
            </summary>
            <param name="dStartDate">开始日期</param>
            <param name="dEndDate">结束日期</param>
            <param name="gBMID"></param>
            <param name="gBMSortID"></param>
            <returns>数量</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetCallOutCount(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            全部呼出数量
            </summary>
            <param name="dStartDate">开始日期</param>
            <param name="dEndDate">结束日期</param>
            <param name="gBMID"></param>
            <param name="gBMSortID"></param>
            <returns>数量</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetCallinDayInfo(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            获取查询时间段的来电数量分布 24小时分布
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns>24小时电话数量集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetCallNoAnswerDayInfo(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            获取查询时间段的电话呼损数量分布 24小时分布
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns>24小时电话数量集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetServicesTypeInfo(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            获取某段时间内需求数量分类的总计
            </summary>
            <param name="startDate">查询开始日期</param>
            <param name="endDate">查询结束日期</param>
            <returns>需求类型数量集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDataStatisticsNew.GetNewMemberCountByDate(System.DateTime,System.DateTime,System.Guid,System.Guid)">
            <summary>
            统计新增客户数量
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns>客户数量[数量][日期]</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.AddDepartMent(uni2uni.com.Model.Manage.Entity.Entity_Department)">
            <summary>
            添加一条部门信息
            </summary>
            <param name="entity_Department">部门信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.UpdateDepartMent(uni2uni.com.Model.Manage.Entity.Entity_Department)">
            <summary>
            修改一条部门信息
            </summary>
            <param name="entity_Department">部门信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.DeleteDepartMent(System.Guid)">
            <summary>
            删除部门信息
            </summary>
            <param name="entity_Department">部门ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectDepartmentByDepartmentID(System.Guid)">
            <summary>
            根据部门ID号查询一条部门的信息
            </summary>
            <param name="gDepartmentID">部门ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectJuniorDepartmentByDepartmentIDAndLevel(System.Guid,System.Int32)">
            <summary>
            根据ID号 查询出直属下级部门的信息
            </summary>
            <param name="gDepartmentID">部门ID号</param>
            <param name="nLevel">查询的级别</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectAllEmployeeInfoByDepartmentID(System.Guid)">
            <summary>
            根据ID号 查询出该部门以及所有子部门的所有员工信息
            </summary>
            <param name="gDepartmentID">部门ID号</param>
            <returns>组织结构实体其中包括员工，部门，职位，职称信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectAllSuperiorDepartmentByDepartmentID(System.Guid)">
            <summary>
            根据ID号 查询出该部门以及该部门所有上级部门信息
            </summary>
            <param name="gDepartmentID">部门ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectAllJuniorDepartmentByDepartmentID(System.Guid)">
            <summary>
            根据ID号 查询出该部门以及该部门所有下级部门信息
            </summary>
            <param name="gDepartmentID">部门ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectAllDepartment">
            <summary>
            查询所有部门的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IDepartment.SelectDepartmentByEmployeeId(System.Guid)">
            <summary>
            根据员工ID号查询一条部门的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.AddEmployee(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            添加员工信息
            </summary>
            <param name="employee">员工信息实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.UpdateEmployeeByUid(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            修改员工的基本信息
            </summary>
            <param name="employee">员工基本信息的实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.DeleteEmloyeeInfoByUid(System.String)">
            <summary>
            根据唯一标识号删除员工
            </summary>
            <param name="strUid">员工唯一标识号</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByUid(System.String)">
            <summary>
            根据唯一标示号查询会员的基本信息
            </summary>
            <param name="strUid">员工唯一标识号</param>
            <returns>员工基本信息实体类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByAllFields(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            根据条件查询员工基本信息 如果需要某个字段查询就 在实体类中赋值，否则不需要赋值
            </summary>
            <param name="employee">查询的员工基本信息实体类</param>
            <returns>员工基本信息实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByIDList(System.String,System.Int32)">
            <summary>
            查询员工是否包含在查询的ID列表中
            </summary>
            <param name="strUserIDList">员工编号列表</param>
            <param name="strSearchType">类型 0不包含(not in)1包含(in)</param>
            <returns>员工基本信息实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByUIDList(System.String)">
            <summary>
            根据唯一标示号列表查询员工基本信息
            </summary>
            <param name="strUserIDList">员工唯一标示号列表</param>
            <returns>员工基本信息实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByGroupID(System.Guid)">
            <summary>
            根据组ID号查询该组中所有员工的信息
            </summary>
            <param name="gGroupID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByMUid(System.String)">
            <summary>
            查多个员工
            </summary>
            <param name="strUidList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectProviderByKeyWord(System.String,System.String)">
            <summary>
            按关键字查询员工信息
            </summary>
            <param name="strKeyWord">关键字</param>
            <param name="strSearchType">查询类别0员工姓名 1员工编号 2电话 3手机 4部门 5供货商传真</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeListInGorup(System.Guid)">
            <summary>
            根据员工ID号，查询该员工所在组的所有员工信息
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetACL">
            <summary>
            获得所有数据集
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetTableObjectArray(System.String)">
            <summary>
            获得指定页面对应表对象集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetFunctionByEmployeeAndPageURL(System.Guid,System.String)">
            <summary>
            员工在某页面具有的功能集合
            </summary>
            <param name="employeeID"></param>
            <param name="pageURL"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetFunctionByEmployeeAndPageURL(System.String)">
            <summary>
            登录员工在某页面具有的功能集合
            </summary>
            <param name="employeeID"></param>
            <param name="pageURL"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetCurrentPagePermission(System.String)">
            <summary>
            判断登录用户当前页面指定功能是否可用
            </summary>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetCurrentPagePermission(System.String,System.String)">
            <summary>
            判断某用户当前页面指定功能是否可用
            </summary>
            <param name="functionName"></param>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetCurrentPagePermission(System.String,System.String,System.String)">
            <summary>
            检查用户是否对指定页面内的某一功能拥有权限,[读取后台权限缓存，供权限WCF调用]
            </summary>
            <param name="functionName"></param>
            <param name="EmployeeID"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetModuleForNavigateByEmployeeID(System.Guid)">
            <summary>
            获得某员工的模块页面导航信息
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetModuleForNavigateByEmployeeID">
            <summary>
            登录员工的模块页面导航信息
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetSqlConditionByTableNameAndEmployeeID(System.Guid,System.String,System.String)">
            <summary>
            某员工访问某张表的数据查询限制条件()
            </summary>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.UpdateEmployeePermission(System.Guid)">
            <summary>
            修改某员工的权限缓存
            </summary>
            <param name="EmployeeID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.ReadEmployeePermissionFromCache(System.Guid)">
            <summary>
            获得某员工的权限缓存(读缓存用,如果缓存中不存在某用户的权限信息，则从数据库中生成，添加到缓存中)
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.DeleteEmployeePermissionFromCache(System.Guid)">
            <summary>
            删除某员工的权限缓存
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.DeleteAllEmployeePermissionFromCache">
            <summary>
            删除所有员工的权限缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.RemoveEmployeePosition(System.Guid,System.Guid)">
            <summary>
            移除某员工的职位
            </summary>
            <param name="EmployeeID"></param>
            <param name="PositionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.AddEmployeePosition(System.Guid,System.Guid)">
            <summary>
            添加某员工一职位
            </summary>
            <param name="EmployeeID"></param>
            <param name="PositionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.MoveEmployeePosition(System.Guid,System.Guid,System.Guid)">
            <summary>
            转移某员工的职位
            </summary>
            <param name="EmployeeID"></param>
            <param name="oldPositionID"></param>
            <param name="newPositionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.GetPermissionNavigate">
            <summary>
            获得权限的模块页面导航
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByAllFieldsPages(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            分页查询员工信息
            </summary>
            <param name="gEmployeeID">查询实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeeList.SelectEmployeeByAllFieldsPagesCount(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            查询员工条数
            </summary>
            <param name="gEmployeeID">查询实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.SelectEmployeePostionInfoByCondition(uni2uni.com.Model.Manage.Entity.Entity_EmployeePostion)">
            <summary>
            获得所有员工职位关系
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.SelectEmployeePositionByEmployeeIDAndPositionID(System.Guid,System.Guid)">
            <summary>
            根据员工ID与职位ID查询员工职位关系
            </summary>
            <param name="gEmployeeID">员工ID</param>
            <param name="gPositionID">职位ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.SelectEmployeePositionByEmployeeID(System.Guid)">
            <summary>
            根据员工ID号 查询员工职位关系
            </summary>
            <param name="gEmployeeID">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.InserEmployeeInfo(System.Collections.Generic.IList{uni2uni.com.Model.Manage.Entity.Entity_EmployeePostion})">
            <summary>
            添加员工职位关系
            </summary>
            <param name="employee">员工职位关系的实体类</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.InsertEmployeePosition(uni2uni.com.Model.Manage.Entity.Entity_EmployeePostion)">
            <summary>
            添加一条员工职位关系信息
            </summary>
            <param name="?">员工职位关系信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.SelectEmployeePostionByDepartmentID(System.Guid)">
            <summary>
            根据部门ID号查询出该部门，以及所有下级部门 所有职位与员工的关系
            </summary>
            <param name="gDepartMentID">部门ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEmployeePostion.SelectEmployeePostionByPostionID(System.Guid)">
            <summary>
            根据职位ID号查询出该职位，以及所有下级位置 所有职位与员工的关系
            </summary>
            <param name="gPostionID">职位D号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionObject.InsertEORFunctionObject(uni2uni.com.Model.Manage.Entity.Entity_EORFunctionObject)">
            <summary>
            添加记录
            </summary>
            <param name="ettEORFunctionObject"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionObject.UpdateEORFunctionObject(uni2uni.com.Model.Manage.Entity.Entity_EORFunctionObject)">
            <summary>
            修改记录
            </summary>
            <param name="ettEORFunctionObject"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionObject.SelectEORFunctionObject(System.Guid,System.Guid)">
            <summary>
            查询一条记录
            </summary>
            <param name="ettEORFunctionObject"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionObject.DeleteEORFunctionObject(System.Guid,System.Guid)">
            <summary>
            删除一条记录
            </summary>
            <param name="ettEORFunctionObject"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionObject.SelectEORFunctionObjectByID(System.Guid)">
            <summary>
            查询一条记录
            </summary>
            <param name="ettEORFunctionObject"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IEORFunctionRef">
            <summary>
            员工/角色与功能逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.InsertEORFunctionRef(uni2uni.com.Model.Manage.Entity.Entity_EORFunctionRef)">
            <summary>
            添加员工/角色与功能关系
            </summary>
            <param name="ett_EORFunctionRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.DeleteEORFunctionRefByEORID(System.Guid)">
            <summary>
            删除某员工/角色的所有功能关系
            </summary>
            <param name="EORID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.DeleteEORFunctionRef(uni2uni.com.Model.Manage.Entity.Entity_EORFunctionRef)">
            <summary>
            删除员工/角色与功能关系
            </summary>
            <param name="ett_EORFunctionRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.GetEORFunctionRefByEORID(System.Guid)">
            <summary>
            根据员工ID或者职位ID查询员工/角色与功能关系
            </summary>
            <param name="EORID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.InsertEmployeeFunction(System.Guid,System.Guid)">
            <summary>
            为某员工添加一个功能关联
            </summary>
            <param name="empID"></param>
            <param name="functionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.DeleteEmployeeFunction(System.Guid,System.Guid)">
            <summary>
            为某员工删除一个功能关联
            </summary>
            <param name="empID"></param>
            <param name="functionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.InsertPostFunction(System.Guid,System.Guid)">
            <summary>
            为某职位添加一个关联功能信息
            </summary>
            <param name="postID"></param>
            <param name="functionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.DeletePostFunction(System.Guid,System.Guid)">
            <summary>
            为某职位删除一个关联功能信息
            </summary>
            <param name="postID"></param>
            <param name="functionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IEORFunctionRef.DeletePostFunctionExceptShareEmployee(System.Guid,System.Guid)">
            <summary>
            为某职位删除一个关联功能信息F1,如果其他职位与本职位有此相同功能F1，且有相同人员，则不删除此人员的权限F1
            </summary>
            <param name="postID"></param>
            <param name="functionID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFilter.InsertFilter(uni2uni.com.Model.Manage.Entity.Entity_Filter)">
            <summary>
            添加记录
            </summary>
            <param name="ettFilter"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFilter.UpdateFilter(uni2uni.com.Model.Manage.Entity.Entity_Filter)">
            <summary>
            修改记录
            </summary>
            <param name="ettFilter"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFilter.GetFilterByID(System.Guid)">
            <summary>
            根据EORFunctionObjectID查询
            </summary>
            <param name="EORFunctionObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFilter.DeleteFilterByFilterID(System.Guid)">
            <summary>
            根据filterID删除记录
            </summary>
            <param name="ettFilter"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFilter.DeleteFilterByEORFunctionObjectID(System.Guid)">
            <summary>
            根据EORFunctionObjectID删除记录
            </summary>
            <param name="ettFilter"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFilter.SelectFilterByEmployeeID(System.Guid)">
            <summary>
            获得某员工的所有数据限制
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionCodeOperation.SelectAllFunctionCodeList(System.String)">
            <summary>
            获取所有子分类信息
            </summary>
            <returns>子分类信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionCodeOperation.InsertFunctionCodeData(uni2uni.com.Model.Manage.Entity.Entity_FunctionCode)">
            <summary>
            添加一条子功能信息
            </summary>
            <param name="info">子功能实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionCodeOperation.UpdateFunctionCodeData(uni2uni.com.Model.Manage.Entity.Entity_FunctionCode)">
            <summary>
            修改一条子功能信息
            </summary>
            <param name="info">子功能实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionCodeOperation.DeleteFunctionCodeData(System.Guid)">
            <summary>
            删除一条子功能信息
            </summary>
            <param name="FTID">主功能ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.InsertFunctionTable(uni2uni.com.Model.Manage.Entity.Entity_FunctionTable)">
            <summary>
            添加记录
            </summary>
            <param name="ettFunctionTable"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.UpdateFunctionTable(uni2uni.com.Model.Manage.Entity.Entity_FunctionTable)">
            <summary>
            修改记录
            </summary>
            <param name="ettFunctionTable"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetFunctionTableByEntity(uni2uni.com.Model.Manage.Entity.Entity_FunctionTable)">
            <summary>
            按条件查询
            </summary>
            <param name="ettFunctionTable"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetFunctionTableByID(System.Guid)">
            <summary>
            根据ID查询
            </summary>
            <param name="FunctionTableID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetDataForFilter(System.String)">
            <summary>
            获得需要筛选的目的数据
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetMainFunctionTableByUniqueName(System.String)">
            <summary>
            根据UniqueName获得其操作的表
            </summary>
            <param name="UniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetTables(System.String)">
            <summary>
            根据数据库名称获得表名称
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetColumns(System.String,System.String)">
            <summary>
            获得某数据表中的所有列
            </summary>
            <param name="DataBaseName"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetNotExistTable(System.String,System.String)">
            <summary>
            查询某操作对象下 某数据库中未被绑定的表
            </summary>
            <param name="DataBaseName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTable.GetTableByEmployeeID(System.Guid)">
            <summary>
            获得某员工需要限制的数据表
            </summary>
            <param name="DataBaseName"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTableField.InsertFunctionTableField(uni2uni.com.Model.Manage.Entity.Entity_FunctionTableField)">
            <summary>
            添加记录
            </summary>
            <param name="ettFunctionTableField"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTableField.UpdateFunctionTableField(uni2uni.com.Model.Manage.Entity.Entity_FunctionTableField)">
            <summary>
            修改记录
            </summary>
            <param name="ettFunctionTableField"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTableField.GetFunctionTableFieldByEntity(uni2uni.com.Model.Manage.Entity.Entity_FunctionTableField)">
            <summary>
            按条件查询
            </summary>
            <param name="ettFunctionTableField"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTableField.GetFunctionTableFieldByID(System.Guid)">
            <summary>
            根据ID查询
            </summary>
            <param name="FunctionTableFieldID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTableField.GetFunctionTableFieldByUniqueName(System.String)">
            <summary>
            根据UniqueName获得此唯一值的基础表字段信息
            </summary>
            <param name="UniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTypeOperation.SelectAllFunctionTypeList">
            <summary>
            获取所有主分类信息
            </summary>
            <returns>主分类信息集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTypeOperation.InsertFunctionTypeData(uni2uni.com.Model.Manage.Entity.Entity_FunctionType)">
            <summary>
            添加一条主功能信息
            </summary>
            <param name="info">主功能实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTypeOperation.UpdateFunctionTypeData(uni2uni.com.Model.Manage.Entity.Entity_FunctionType)">
            <summary>
            修改一条主功能信息
            </summary>
            <param name="info">主功能实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionTypeOperation.DeleteFunctionTypeData(System.Guid)">
            <summary>
            删除一条主功能信息
            </summary>
            <param name="FTID">主功能ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupList.AddGroupInfo(uni2uni.com.Model.Manage.Entity.Entity_GroupInfo,System.String)">
            <summary>
            添加用户组基本或秘书组信息
            </summary>
            <param name="employee">组信息实体类</param>
            <param name="employee">该组成员ID号列表以,分割</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupList.UpdateGroupByUid(uni2uni.com.Model.Manage.Entity.Entity_GroupInfo,System.String)">
            <summary>
            修改用户组的基本信息 不需要修改的字段就不传值
            </summary>
            <param name="group">组基本信息的实体类</param>
            <param name="employee">该组成员ID号列表以,分割</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupList.DeleteGroupByUid(System.String)">
            <summary>
            删除一个组的信息
            </summary>
            <param name="strUid"></param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupList.SelectGroupByUid(System.String)">
            <summary>
            根据唯一标示号查询组的基本信息
            </summary>
            <param name="strUid">组信息唯一标识号</param>
            <returns>组基本信息实体类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupList.SelectGroupByAllFields(uni2uni.com.Model.Manage.Entity.Entity_GroupInfo)">
            <summary>
            根据条件查询组基本信息 如果需要某个字段查询就 在实体类中赋值，否则不需要赋值
            </summary>
            <param name="group">查询的组基本信息实体类</param>
            <returns>组基本信息实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupList.SelectAllGroupInfo">
            <summary>
            查询所有组的基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupPurviewOperation.InsertGroupPurviewData(System.Collections.Generic.IList{uni2uni.com.Model.Manage.Entity.Entity_GroupPurview})">
            <summary>
            添加n条组权限信息
            </summary>
            <param name="info">组权限实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupPurviewOperation.DeleteGroupPurviewData(System.String)">
            <summary>
            删除n条组权限信息
            </summary>
            <param name="UID">用户ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupViewList.AddGroupViewInfo(uni2uni.com.Model.Manage.Entity.Entity_GroupView)">
            <summary>
            添加用户组或秘书组与员工绑定信息
            </summary>
            <param name="group">组绑定信息实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupViewList.UpdateGroupViewByUid(uni2uni.com.Model.Manage.Entity.Entity_GroupView)">
            <summary>
            修改用户组与员工的绑定信息
            </summary>
            <param name="group">组基本信息的实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupViewList.DeleteGroupViewByUid(System.String)">
            <summary>
            删除一条用户组与员工的绑定信息
            </summary>
            <param name="strUid">绑定信息的唯一标示号或者组的唯一标识号</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupViewList.SelectGroupViewByUid(System.String)">
            <summary>
            根据唯一标示号查询组的基本信息
            </summary>
            <param name="strUid">组信息唯一标识号</param>
            <returns>组基本信息实体类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IGroupViewList.SelectUserGroupViewInfo(System.String,System.Int32)">
            <summary>
            根据组唯一标示号查询所有用组与员工的绑定信息，及查询出在用户组中的所有员工
            </summary>
            <param name="strGroupUid">组唯一标识号（如果传入空值就是查询所有的）</param>
            <param name="GroupType">组类型1用户组，2秘书组</param>
            <returns>绑定组实体类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.AddIntegralRule(uni2uni.com.Model.Manage.Entity.Entity_IntegralRule)">
            <summary>
            添加新的积分规则
            </summary>
            <param name="rule">积分规则实体</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.DeleteIntegralRule(System.Guid)">
            <summary>
            删除积分规则
            </summary>
            <param name="ruleid">积分规则ID</param>
            <returns>true 删除成功 false 删除失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetIntegralRuleByID(System.Guid)">
            <summary>
            获取积分规则
            </summary>
            <param name="ruleid">积分规则ID</param>
            <returns>积分规则实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetIntegralRule(System.String,System.Guid,System.Guid,System.Guid,System.Guid)">
            <summary>
            获取当前的积分规则
            </summary>
            <param name="rType">积分类型 0 频道 1 频道供应商 2 频道分类 3 频道供应商接口 4 产品</param>
            <param name="channelid">频道ID</param>
            <param name="providerid">供应商ID</param>
            <param name="categroryid">类别ID</param>
            <param name="productid">产品ID</param>
            <returns>积分规则实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetProductIntegral(System.String,System.String,System.Int32,System.Decimal)">
            <summary>
            获得产品的基础积分
            </summary>
            <param name="channelid">产品ID</param>
            <param name="productid">产品ID</param>
            <param name="productNumber">产品数量</param>
            <param name="productPrice">产品单价</param>
            <returns>可获得的基础积分</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberProductIntegral(System.String,System.String,System.String,System.Int32,System.Decimal)">
            <summary>
            获得会员预定商品可得的积分
            </summary>
            <param name="memberID">会员ID</param>
            <param name="channelid">频道ID</param>
            <param name="productid">产品ID</param>
            <param name="productNumber">产品数量</param>
            <param name="productPrice">产品价格</param>
            <returns>积分数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetChannelIntegral(System.Guid,System.Guid,System.Decimal)">
            <summary>
            获得频道的积分数
            </summary>
            <param name="channelid">频道ID</param>
            <param name="providerid">供应商ID</param>
            <param name="amount">定单金额</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberChannelIntegral(System.String,System.Guid,System.Guid,System.Decimal)">
            <summary>
             获得会员预定频道可得的积分
            </summary>
            <param name="memberID">会员ID</param>
            <param name="channelid">频道ID</param>
            <param name="providerid">供应商ID</param>
            <param name="amount">预定金额</param>
            <returns>积分数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetIntegralRuleList(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得规则列表
            </summary>
            <param name="rType">规则类型</param>
            <param name="channelid">频道ID</param>
            <param name="providerid">供应商ID</param>
            <param name="categroryid">分类ID</param>
            <param name="productid">产品ID</param>
            <returns>积分规则列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetIntegralRuleLog(System.String,System.Guid,System.Guid,System.Guid,System.Guid)">
            <summary>
            获得积分规则的历史记录
            </summary>
            <param name="rType">积分类型 0 频道 1 频道供应商 2 频道分类 3 频道供应商接口 4 产品</param>
            <param name="channelid">频道ID</param>
            <param name="providerid">供应商ID</param>
            <param name="categroryid">类别ID</param>
            <param name="productid">产品ID</param>
            <returns>积分规则历史记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.AddIntegralRecord(uni2uni.com.Model.User.Entity.Entity_MemberIntegralDetail)">
            <summary>
            增加积分记录
            </summary>
            <param name="detail">明细记录</param>
            <returns>true 新增成功 false 新增失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.AddIntegralRecordAndMemberIntergral(uni2uni.com.Model.User.Entity.Entity_MemberIntegralDetail)">
            <summary>
            增加积分记录,更新会员积分
            </summary>
            <param name="detail">明细记录</param>
            <returns>true 新增成功 false 新增失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByID(System.Guid)">
            <summary>
            获取积分记录
            </summary>
            <param name="detailID">积分记录ID</param>
            <returns>积分记录实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByRelateID(System.String)">
            <summary>
            获得某次预定的积分记录
            </summary>
            <param name="relateID">预定ID</param>
            <returns>积分记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByOrderID(System.String)">
            <summary>
             获得某个定单的积分记录
            </summary>
            <param name="orderid">订单ID</param>
            <returns>积分记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByMemberID(System.Guid)">
            <summary>
            获取会员的积分记录
            </summary>
            <param name="memberID">会员ID</param>
            <returns>积分记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByCondition(System.String,System.String,System.String,System.String)">
            <summary>
            根据条件获取积分记录
            </summary>
            <param name="memberID">会员ID号</param>
            <param name="strBDate">开始时间</param>
            <param name="strEDate">结束时间</param>
            <param name="strItype">积分方向 0 增加 1减少</param>
            <returns>积分记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByMemberIDANDTime(System.Guid,System.DateTime,System.DateTime)">
            <summary>
            获取会员一段时间内的积分记录
            </summary>
            <param name="memberID">会员ID</param>
            <param name="bdate">开始时间</param>
            <param name="edate">结束时间</param>
            <returns>积分记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberIntegralDetailByCondition(System.String,System.Guid,System.String,System.String,System.String)">
            <summary>
            获取积分记录列表
            </summary>
            <param name="stype">明细类别</param>
            <param name="memberID">会员ID</param>
            <param name="orderid">订单ID</param>
            <param name="bdate">起始日期</param>
            <param name="edate">结束日期</param>
            <returns>积分记录列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.AddMemberIntegralByOrderCompleted(System.String)">
            <summary>
            定单完成时增加会员积分记录
            </summary>
            <param name="orderid">订单号</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.PayOrderByMemberIntegral(System.String[])">
            <summary>
            积分支付定单
            </summary>
            <param name="orderid">支付定单列表</param>
            <returns>成功标记 0 成功 其他失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.PayPriceChangeByMemberIntegral(System.Guid[])">
            <summary>
            积分支付差价单
            </summary>
            <param name="priceChangeID">差价单ID</param>
            <returns>成功标记 0 成功 其他失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.GetMemberGradeIntegral(System.Guid,System.String)">
            <summary>
            获得会员目前积分比例
            </summary>
            <param name="memberID">会员ID</param>
            <param name="stype">计算方式 0 即时计算 1 按月计算</param>
            <returns>积分比例</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IIntegral.ClearDisableIntegral(System.Guid,System.Int32)">
            <summary>
            清除过期积分
            </summary>
            <param name="memberID">会员ID</param>
            <param name="year">积分有效期（年）</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IMessage.InsertMessage(uni2uni.com.Model.Manage.Entity.Entity_Message)">
            <summary>
            添加消息记录
            </summary>
            <param name="ettMessage"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IMessage.UpdateMessage(uni2uni.com.Model.Manage.Entity.Entity_Message)">
            <summary>
            修改消息记录
            </summary>
            <param name="ettMessage"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IMessage.DeleteMessage(System.Guid)">
            <summary>
            删除消息记录
            </summary>
            <param name="MessageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IMessage.GetMessageBySender(System.Guid,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            获得某用户发送的所有消息
            </summary>
            <param name="sender"></param>
            <param name="keyword"></param>
            <param name="type">1内部通知 2接收短信通知 3跟单记录通知 4网络订单通知 5订单状态改变通知 6内部通告 7短信事务报告 8短信状态报告 9任务提醒10需求提醒11客户关系维护提醒12购买礼品卡提醒13礼品卡换卡提醒14礼品卡提货提醒</param>
            <param name="status">0不需要处理 1已处理 2未处理</param>
            <param name="begindate"></param>
            <param name="enddate"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <param name="totalcount"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IMessage.GetMessageByID(System.Guid)">
            <summary>
            根据ID获得消息信息
            </summary>
            <param name="messageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IModule.InsertModule(uni2uni.com.Model.Manage.Entity.Entity_Module)">
            <summary>
            添加记录
            </summary>
            <param name="ettModule"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IModule.UpdateModule(uni2uni.com.Model.Manage.Entity.Entity_Module)">
            <summary>
            修改记录
            </summary>
            <param name="ettModule"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IModule.GetModuleAll">
            <summary>
            按条件查询
            </summary>
            <param name="ettModule"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IModule.GetModuleByID(System.Guid)">
            <summary>
            根据ID查询
            </summary>
            <param name="ModuleID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IModule.GetAllModuleForNavigate(System.Guid)">
            <summary>
            根据员工ID查询所能显示的导航模块
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageModuleRef.InsertPageModuleRef(uni2uni.com.Model.Manage.Entity.Entity_PageModuleRef)">
            <summary>
            添加记录
            </summary>
            <param name="ettPageModuleRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageModuleRef.UpdatePageModuleRef(System.Guid,System.Guid,System.Guid)">
            <summary>
            修改记录
            </summary>
            <param name="ettPageModuleRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageModuleRef.DeletePageModuleRefByPageID(System.Guid)">
            <summary>
            删除某页面的所有关联
            </summary>
            <param name="PageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageModuleRef.GetPageModuleRefByPageID(System.Guid)">
            <summary>
            获得某页面的所有关联模块信息
            </summary>
            <param name="PageID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IPermission">
            <summary>
            权限的逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.InitEmployeePermission(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            初始化用户权限
            </summary>
            <param name="employee">操作员实体</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.login(System.String,System.String)">
            <summary>
            后台员工登录
            </summary>
            <param name="loginName">员工工号</param>
            <param name="password">MD5加密密码</param>
            <returns>员工基本信息实体 如果不为null则是验证通过</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.GetEmployeePermission(uni2uni.com.Model.Manage.Entity.Entity_Employee)">
            <summary>
            获得登录用户的操作权限
            </summary>
            <param name="employee">操作员实体</param>
            <returns>操作员权限类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.GetEmployeePermissionByID(System.String)">
            <summary>
            根据操作员ID获取操作员权限
            </summary>
            <param name="UserID">操作员ID</param>
            <returns>操作员权限类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.GetGroupPermission(uni2uni.com.Model.Manage.Entity.Entity_GroupInfo)">
            <summary>
            获得组的操作权限
            </summary>
            <param name="group">组实体</param>
            <returns>组权限类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.CheckEmployeePermission(uni2uni.com.Model.Manage.Entity.Entity_Employee,System.String,System.String)">
            <summary>
            检查用户是否有操作权限
            </summary>
            <param name="employee">操作员实体</param>
            <param name="functionid">功能ID</param>
            <param name="actionID">操作ID</param>
            <returns>true 拥有权限 false 没有权限</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.CheckFunctionAction(System.String)">
            <summary>
            检查用户是否有操作权限
            </summary> 
            <param name="actionID">操作ID 1-增加,2-修改,3-删除,4-查询,5-导出,6-锁定</param>
            <returns>true 拥有权限 false 没有权限</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.CheckPagePurview">
            <summary>
            检查子页面是否有操作权限
            </summary>
            <returns>true 有权限 false 无权限</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.CheckFunctionAction(System.String,System.String)">
            <summary>
            检查用户是否有操作权限
            </summary> 
            <param name="actionID">操作ID 1-增加,2-修改,3-删除,4-查询,5-导出,6-锁定</param>
            <returns>true 拥有权限 false 没有权限</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPermission.GetEmloyeeInfoByUid(System.String)">
            <summary>
            根据用户UID获取用户信息
            </summary>
            <param name="strUid"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IPosition">
            <summary>
            业务逻辑层实现接口（职位基本信息）
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.InsertPosition(uni2uni.com.Model.Manage.Entity.Entity_Position)">
            <summary>
            写入一条职位信息
            </summary>
            <param name="entity_Position">职位信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.UpdatePosition(uni2uni.com.Model.Manage.Entity.Entity_Position)">
            <summary>
            更新一条职位信息
            </summary>
            <param name="entity_Position">职位信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.DeletePosition(System.Guid)">
            <summary>
            删除一条职位信息 以及该职位的所有下级职位信息
            </summary>
            <param name="gPositionID">职位ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.SelectPositionByPositionID(System.Guid)">
            <summary>
            根据职位ID号查询一条职位信息
            </summary>
            <param name="gPositionID">职位ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.SelectJuniorPositionByPositionAndLevel(System.Guid,System.Int32)">
            <summary>
            根据职位ID 与级别ID查询直属下级职位信息
            </summary>
            <param name="gPosition">职位 ID</param>
            <param name="nLevel">级别ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.SelectPositionByDepartmentID(System.Guid)">
            <summary>
            根据部门ID 查询职位信息
            </summary>
            <param name="gDepartmentID">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.SelectDepartMentAllPositionByDepartmentID(System.Guid)">
            <summary>
            根据部门ID 查询职位信息 以及所有子部门的所有职位
            </summary>
            <param name="gDepartmentID">部门ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.SelectAllEmployeeInfoByPositionID(System.Guid)">
            <summary>
            根据职位ID 查询该职位 以及该职位下级所有职位的所有员工信息
            </summary>
            <param name="gPosition"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPosition.InheritancePostPermission(System.Guid,System.Guid)">
            <summary>
            下级职位继承上级职位的功能
            </summary>
            <param name="upPostID"></param>
            <param name="downPostID"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProfessionalTitle.SelectAllProfessionalTitleInfo">
            <summary>
            获得所有职称
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.InserContactRecordInfo(uni2uni.com.Model.Manage.Entity.Entity_ContactRecord)">
            <summary>
            增加一条会员通讯记录信息
            </summary>
            <param name="ContactRecord">会员通讯记录实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.UpdateContactRecordInfo(uni2uni.com.Model.Manage.Entity.Entity_ContactRecord)">
            <summary>
            修改一条会员通讯记录信息
            </summary>
            <param name="ContactRecord">会员通讯记录实体类</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoByMemberID(System.Guid)">
            <summary>
            查询一个会员的通讯记录
            </summary>
            <param name="MemberID">会员ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoByServiceID(System.Guid,System.String)">
            <summary>
            查询某需求的通讯记录
            </summary>
            <param name="ServiceID">会员ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoByRelatedID(System.String)">
            <summary>
            查询某订单的联系记录
            </summary>
            <param name="RelatedID">会员ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoByUID(System.Guid)">
            <summary>
            查询一条会员的通讯记录
            </summary>
            <param name="UID">记录ID号</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoAll(System.Int32)">
            <summary>
            查询全部的通讯记录
            </summary>
            <param name="nTopNum">前多少条数据</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoCondition(uni2uni.com.Model.Manage.Permission.Entity_ContactRecordCondition)">
            <summary>
            根据条件查询联系记录
            </summary>
            <param name="nTopNum">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProgressRecord.SelectContactRecordInfoByFID(System.String)">
            <summary>
            查询某上传文件所在的联系信息记录
            </summary>
            <param name="FileGuid">上传文件ID</param>
            <returns>实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.AddProjectBaseInfo(uni2uni.com.Model.Manage.Entity.Entity_ProjectBaseInfo)">
            <summary>
            添加一条
            </summary>
            <param name="entity_ProjectBaseInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.UpdateProjectBaseInfo(uni2uni.com.Model.Manage.Entity.Entity_ProjectBaseInfo)">
            <summary>
            修改一条
            </summary>
            <param name="entity_ProjectBaseInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.DeleteProjectBaseInfo(System.Guid)">
            <summary>
            添加一条
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.SelectProjectBaseInfoByProjectID(System.Guid)">
            <summary>
            用projectID查询
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.SelectProjectBaseInfoByProviderID(System.Guid)">
            <summary>
            用ProviderID查询
            </summary>
            <param name="ProviderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.SelectProjectBaseInfoByParentProjectID(System.Guid)">
            <summary>
            用ParentProjectID查询
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfo.SelectProjectBaseInfoAll(uni2uni.com.Model.Manage.Entity.Entity_ProjectBaseInfo)">
            <summary>
            查询所有
            </summary>
            <param name="entity_ProjectBaseInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfoLinkman.AddProjectBaseInfoLinkman(System.Collections.Generic.IList{uni2uni.com.Model.Manage.Entity.Entity_ProjectBaseInfoLinkman},System.Guid)">
            <summary>
            添加联系人，多条
            </summary>
            <param name="entity_ProjectBaseInfoLinkmanList"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfoLinkman.DeleteProjectBaseInfoLinkman(System.Guid)">
            <summary>
            删除项目联系人，多条
            </summary>
            <param name="ProjectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfoLinkman.SelectProjectBaseInfoLinkmanAll(uni2uni.com.Model.Manage.Entity.Entity_ProjectBaseInfoLinkman)">
            <summary>
            查询所有
            </summary>
            <param name="entity_ProjectBaseInfoLinkman"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IProjectBaseInfoLinkman.SelectProjectBaseInfoLinkmanByProjectID(System.Guid)">
            <summary>
            按ProjectID查询
            </summary>
            <param name="ProjectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.InsertReceiveMessage(uni2uni.com.Model.Manage.Entity.Entity_ReceiveMessage)">
            <summary>
            添加接收消息记录
            </summary>
            <param name="ettReceiveMessage"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.UpdateReceiveMessage(uni2uni.com.Model.Manage.Entity.Entity_ReceiveMessage)">
            <summary>
            修改接收消息记录
            </summary>
            <param name="ettReceiveMessage"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.DeleteReceiveMessage(System.Guid)">
            <summary>
            删除接收消息记录
            </summary>
            <param name="receiveMessageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetReceiveMessageByID(System.Guid)">
            <summary>
            根据ID获得接收消息记录
            </summary>
            <param name="receiveMessageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetReceiveMessageByMessageID(System.Guid)">
            <summary>
            根据MessageID获得接收消息记录
            </summary>
            <param name="MessageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetReceiveMessageByReceiver(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            获得某员工收到的消息
            </summary>
            <param name="receiver"></param>
            <param name="keyword"></param>
            <param name="type">1内部通知 2接收短信通知 3跟单记录通知 4网络订单通知 5订单状态改变通知 6内部通告 7短信事务报告 8短信状态报告 9任务提醒10需求提醒11客户关系维护提醒12购买礼品卡提醒13礼品卡换卡提醒14礼品卡提货提醒</param>
            <param name="status">0不需要处理 1已处理 2未处理</param>
            <param name="begindate"></param>
            <param name="enddate"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <param name="totalcount"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetUnreadMessageCount(System.Guid)">
            <summary>
            获得某人的未读消息
            </summary>
            <param name="receiver"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetTopUnreadMessage(System.Guid)">
            <summary>
            获得某员工最新一条未读消息
            </summary>
            <param name="receiver"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.SendMessage(uni2uni.com.Model.Manage.Entity.Entity_Message,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="ettMessage"></param>
            <param name="ReceiverList">接收人列表（,分割）</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetPreMessage(uni2uni.com.Model.Manage.Entity.BEntity_ReceiveMessage)">
            <summary>
            获得某接收时间上一条接收的消息信息
            </summary>
            <param name="bettReceiveMessage"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetNextMessage(uni2uni.com.Model.Manage.Entity.BEntity_ReceiveMessage)">
            <summary>
            获得某接收时间下一条接收的消息信息
            </summary>
            <param name="bettReceiveMessage"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IReceiveMessage.GetReceiveMessageByReceiverAndType(System.Guid,System.Byte,System.Boolean)">
            <summary>
            获得某员工收到的(非)通告消息
            </summary>
            <param name="receiver"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServicePostOperator.GetServicePostOperatorListByServiceID(System.Guid)">
            <summary>
            根据需求ID号获取该需求所有职位与人员的关系
            </summary>
            <param name="gServiceID">需求ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServicePostOperator.AddServicePostOperator(uni2uni.com.Model.Manage.Entity.Entity_ServicePostOperator)">
            <summary>
            添加一条需求职位人员关联信息
            </summary>
            <param name="entity">添加的实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServicePostOperator.CheckServicePostOperator(uni2uni.com.Model.Manage.Entity.Entity_ServicePostOperator)">
            <summary>
            检查某个需求中职位与人员的关系是否存在
            </summary>
            <param name="entity">查询的实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServicePostOperator.GetServicePostOperator(System.Guid)">
            <summary>
            根据需求ID号 获取该需求职位人员信息的HTML
            </summary>
            <param name="gServiceID">需求ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServicePostOperator.GetServicePostOperatorList(System.Guid,System.String)">
            <summary>
            根据需求ID号 以及职位ID号列表获取该相关的员工ID号
            </summary>
            <param name="gServiceID">需求ID号</param>
            <param name="gServiceID">职位ID号列表</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServicePostOperator.AddServicePostOperator(System.Guid,System.Guid,System.Guid)">
            <summary>
            添加需求职位人员关联记录
            </summary>
            <param name="gServiceID">需求ID号</param>
            <param name="gPostID">职位ID号</param>
            <param name="gOperatorID">人员ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.InsertServiceStatus(uni2uni.com.Model.Manage.Entity.Entity_ServiceStatus)">
            <summary>
            插入一条需求状态(实际2条)
            </summary>
            <param name="ettServiceStatus"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.UpdateServiceStatus(uni2uni.com.Model.Manage.Entity.Entity_ServiceStatus,uni2uni.com.Model.Manage.Entity.Entity_ServiceStatus)">
            <summary>
            修改一条需求状态(实际2条)
            </summary>
            <param name="ettServiceStatus"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.DeleteServiceStatus(System.Guid,System.String)">
            <summary>
            删除一条需求状态(实际2条)
            </summary>
            <param name="PostID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.SelectServiceStatusByStatusID(System.Guid)">
            <summary>
            按StatusID查询需求状态
            </summary>
            <param name="PostID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.SelectServiceStatusByPostIDWithBeginEnd(System.Guid)">
            <summary>
            按PostID查询需求状态(带开始结束标识)
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.SelectServiceStatusByPostID(System.Guid)">
            <summary>
            按PostID查询需求状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatus.SelectServiceStatusByName(System.String,System.Guid)">
            <summary>
            按StatusName查询需求状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatusRecord.InsertServiceStatusRecord(uni2uni.com.Model.Manage.Entity.Entity_ServiceStatusRecord)">
            <summary>
            插入一条需求状态修改记录
            </summary>
            <param name="ettServiceStatus"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatusRecord.SelectServiceStatusRecordByTwoPostIDAndServicesID(System.Guid,System.Guid,System.Guid)">
            <summary>
            按PostID,ServicesID查询需求状态修改记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatusRecord.SelectServiceStatusRecordByPostIDAndServicesID(System.Guid,System.Guid)">
            <summary>
            按PostID,ServicesID查询需求状态修改记录(返回一条)
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IServiceStatusRecord.UpdateStatusRecordServiceID(System.Guid,System.Guid)">
            <summary>
            将某需求下的状态记录关联到另一个需求上
            </summary>
            <param name="newid">新需求id</param>
            <param name="oldid">旧需求id</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ISystemMessageConfig.UpdateSMessageConfig(uni2uni.com.Model.Manage.Entity.Entity_SystemMessageConfig)">
            <summary>
            修改系统消息配置记录
            </summary>
            <param name="ettSMessageConfig"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ISystemMessageConfig.GetSMessageConfigByTypeID(System.Byte)">
            <summary>
            通过TypeID获得系统消息配置记录
            </summary>
            <param name="TypeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskMain.InsertTaskMain(uni2uni.com.Model.Manage.Entity.Entity_TaskMain)">
            <summary>
            增加主任务信息
            </summary>
            <param name="entity_TaskMain">主任务实体</param>
            <returns>ture or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskMain.UpdateTaskMain(uni2uni.com.Model.Manage.Entity.Entity_TaskMain)">
            <summary>
            修改一条主任务信息
            </summary>
            <param name="entity_TaskMain">主任务实体</param>
            <returns>true or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskMain.SelectTaskMainByTaskMainID(System.Guid)">
            <summary>
            根据主任务ID号查询主任务基本信息
            </summary>
            <param name="gTaskMainID">主任务ID号</param>
            <returns>主任务实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskMain.SelectTaskMainByCondition(uni2uni.com.Model.Manage.Permission.Entity_TaskSearchCondition)">
            <summary>
            根据条件查询主任务信息
            </summary>
            <param name="entity_List">查询条件实体</param>
            <returns>查询结果实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskReferLog.InsertTaskReferLog(uni2uni.com.Model.Manage.Entity.Entity_TaskReferLog)">
            <summary>
            添加任务提交记录
            </summary>
            <param name="entity_TaskMain">任务记录实体</param>
            <returns>ture or flase</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskReferLog.SelectTaskReferLogByTaskSubID(System.Guid)">
            <summary>
            根据子任务ID号查询该任务的所有提交记录
            </summary>
            <param name="gTaskMainID">子任务ID号</param>
            <returns>任务提交日志实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskRemind.AddTaskRemind(uni2uni.com.Model.Manage.Entity.Entity_TaskRemind)">
            <summary>
            添加一条
            </summary>
            <param name="entity_TaskRemind"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskRemind.UpdateTaskRemind(uni2uni.com.Model.Manage.Entity.Entity_TaskRemind)">
            <summary>
            修改一条
            </summary>
            <param name="entity_TaskRemind"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskRemind.DeleteTaskRemind(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="TaskRemindID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskRemind.SelectTaskRemindByTaskRemindID(System.Guid)">
            <summary>
            用TaskRemindID查询
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskRemind.SelectTaskRemindByCondition(uni2uni.com.Model.Manage.Permission.Entity_TaskSearchCondition)">
            <summary>
            根据条件查询任务提醒信息
            </summary>
            <param name="entity_List">查询条件实体</param>
            <returns>查询结果实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskRemind.SelectTaskRemindByTaskSubID(System.Guid)">
            <summary>
            用TaskSubID查询该任务的未提醒 提醒信息
            </summary>
            <param name="gTaskSubID">任务ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.AddTaskSub(uni2uni.com.Model.Manage.Entity.Entity_TaskSub)">
            <summary>
            添加一条
            </summary>
            <param name="entity_TaskSub"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.InsertTaskSubList(System.Collections.Generic.IList{uni2uni.com.Model.Manage.Entity.Entity_TaskSub})">
            <summary>
            添加多条子任务信息
            </summary>
            <param name="entity_List">子任务实体列表实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.UpdateTaskSub(uni2uni.com.Model.Manage.Entity.Entity_TaskSub)">
            <summary>
            修改一条
            </summary>
            <param name="entity_TaskSub"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.DeleteTaskSub(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="taskSubID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.SelectTaskSubByTaskSubID(System.Guid)">
            <summary>
            用projectID查询
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.SelectTaskSubByTaskMainID(System.Guid)">
            <summary>
            用taskMainID查询
            </summary>
            <param name="taskSubID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.SelectTaskSubArrayByTaskMainID(System.Guid)">
            <summary>
            用taskMainID查询
            </summary>
            <param name="taskSubID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.SelectTaskSubByCondition(uni2uni.com.Model.Manage.Permission.Entity_TaskSearchCondition)">
            <summary>
            根据条件查询子任务信息
            </summary>
            <param name="entity_List">查询条件实体</param>
            <returns>查询结果实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.SelectTaskSubByTaskMainIDAndlevel(System.Guid,System.Guid,System.Int32)">
            <summary>
            根据主任务ID号和子任务的级别查询出该级别的所有子任务
            </summary>
            <param name="gTaskMainID">主任务ID号</param>
            <param name="nlevel">级别</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSub.SelectTaskSubAllJuniorTask(System.Guid,System.Int32)">
            <summary>
            查询本级以下的所有子任务
            </summary>
            <param name="gTaskMainID">主任务ID号</param>
            <param name="nlevel">查询任务的本级别</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.AddTaskSystemRemind(uni2uni.com.Model.Manage.Entity.Entity_TaskSystemRemind)">
            <summary>
            添加一条
            </summary>
            <param name="entity_TaskSystemRemind"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.UpdateTaskSystemRemind(uni2uni.com.Model.Manage.Entity.Entity_TaskSystemRemind)">
            <summary>
            修改一条
            </summary>
            <param name="entity_TaskSystemRemind"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.UpdateTaskSystemRemindByTaskID(System.Guid,System.Boolean)">
            <summary>
            按TaskID修改RemindState状态
            </summary>
            <param name="gTaskID">TaskID</param>
            <param name="remindState">RemindState状态</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.DeleteTaskSystemRemind(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="TaskSystemRemindID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.DeleteTaskSystemRemindByTaskID(System.Guid)">
            <summary>
            删除一条，按TaskID
            </summary>
            <param name="TaskID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.SelectTaskSystemRemindByTaskSystemRemindID(System.Guid)">
            <summary>
            用TaskSystemRemindID查询
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.ITaskSystemRemind.SelectTaskSystemRemindByCondition(uni2uni.com.Model.Manage.Permission.Entity_TaskSearchCondition)">
            <summary>
            根据条件查询任务提醒信息
            </summary>
            <param name="entity_List">查询条件实体</param>
            <returns>查询结果实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IUserPurviewOperation.InsertUserPurview(System.Collections.Generic.IList{uni2uni.com.Model.Manage.Entity.Entity_UserPurview})">
            <summary>
            添加n条用户权限信息
            </summary>
            <param name="info">用户权限实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IUserPurviewOperation.DeleteUserPurview(System.String)">
            <summary>
            删除n条用户权限信息
            </summary>
            <param name="UID">用户ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.InsertWorkTable(uni2uni.com.Model.Manage.Entity.Entity_WorkTable)">
            <summary>
            添加个人工作台模块信息
            </summary>
            <param name="entity_WorkTable">个人工作台信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.InsertWorkTableModule(uni2uni.com.Model.Manage.Entity.Entity_WorkTableModule)">
            <summary>
            添加工作台模块信息
            </summary>
            <param name="entity_WorkTableModule">工作台模块信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.UpdateWorkTable(uni2uni.com.Model.Manage.Entity.Entity_WorkTable)">
            <summary>
            修改个人工作台模块信息
            </summary>
            <param name="entity_WorkTable">个人工作台信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.UpdateWorkTableModule(uni2uni.com.Model.Manage.Entity.Entity_WorkTableModule)">
            <summary>
            修改工作台模块信息
            </summary>
            <param name="entity_WorkTableModule">工作台模块信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.DeleteWorkTableModule(System.Guid)">
            <summary>
            修改工作台模块信息
            </summary>
            <param name="entity_WorkTableModule">工作台模块信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SelectAllWorkTableModule">
            <summary>
            查询所有工作台模块信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SelectWorkTableModuleByModuleID(System.Guid)">
            <summary>
            根据ModuleID查询工作台模块信息
            </summary>
            <param name="gModuleID">ModuleID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SeletWorkTableByEmployeeID(System.Guid)">
            <summary>
            根据员工ID号查询个人工作台信息
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SeletWorkTableByUID(System.Guid)">
            <summary>
            根据标示号查询个人工作台信息
            </summary>
            <param name="gUID">唯一标示号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.UpdateModuleCondtionByRelationID(System.Guid,System.String,System.String)">
            <summary>
            修改模块查询条件信息
            </summary>
            <param name="gRelationID">关系ID号</param>
            <param name="strModuleName">模块名称</param>
            <param name="strSearchCodition">查询条件字符串</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SelectWorkTableModuleConditionByEmployeeID(System.Guid)">
            <summary>
            根据会员ID号查询该会员所有模块 条件信息
            </summary>
            <param name="gEmployeeID">会员ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SelectWorkTableModuleConditionByRelationID(System.Guid)">
            <summary>
            根据模块关联ID号查询该会员所有模块 条件信息
            </summary>
            <param name="gRelationID">模块关联ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.AddModuleListInfo(System.Guid,System.String)">
            <summary>
            添加员工模块信息
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strMoudleListID">模块ID号列表</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.DeleteModuleRelationInfoByRelationID(System.Guid,System.Guid)">
            <summary>
            删除员工的某个模块信息
            </summary>
            <param name="gEmployeeID">模块关系ID号</param> 
            <param name="gEmployeeID">员工ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.GetGeneralOrderListByCondition(System.Guid,System.String)">
            <summary>
            条件查询订单模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.GetOrderListByCondition(System.Guid,System.String)">
            <summary>
            条件查询预定订单模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.GetMemberListByCondition(System.Guid,System.String)">
            <summary>
            条件查询会员模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.GetMessageListByCondition(System.Guid,System.String)">
            <summary>
            条件查询消息模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.GetTransactionRecordListByCondition(System.Guid,System.String)">
            <summary>
            条件支付记录模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.GetTaskListByCondition(System.Guid,System.String)">
            <summary>
            条件查询个人任务模块的详细数据
            </summary>
            <param name="gEmployeeID">员工ID号</param>
            <param name="strSearchCondition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SelectProjectInfoByCondition(uni2uni.com.Model.Manage.Entity.Entity_ProjectCondition)">
            <summary>
            条件查询项目信息
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IWorkTable.SelectContactRecordInfoByCondition(uni2uni.com.Model.Manage.Entity.Entity_ContactRecordConditionForTable)">
            <summary>
            条件查询联系记录信息
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IFunction">
            <summary>
            功能逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.InsertFunction(uni2uni.com.Model.Manage.Entity.Entity_Function)">
            <summary>
            添加功能关系
            </summary>
            <param name="ett_Function"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.UpdateFunction(uni2uni.com.Model.Manage.Entity.Entity_Function)">
            <summary>
            修改功能关系
            </summary>
            <param name="ett_Function"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.DeleteFunction(System.Guid)">
            <summary>
            删除功能关系
            </summary>
            <param name="functionID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectFunctionByFunctionID(System.Guid)">
            <summary>
            根据功能ID获得功能信息
            </summary>
            <param name="FunctionID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectFunctionByFunctionName(System.String)">
            <summary>
            根据功能Name获得功能信息
            </summary>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectFunctionByObjID(System.Guid)">
            <summary>
            获得某操作对象的所有功能
            </summary>
            <param name="functionObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectAllFunction">
            <summary>
            获得所有功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectFunctionByIsDel(System.Boolean)">
            <summary>
            根据状态查询功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectFunctionByPageID(System.Guid)">
            <summary>
            获得所有功能
            </summary>
            <param name="pageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunction.SelectFunctionByEORID(System.Guid)">
            <summary>
            根据EORID获得功能信息
            </summary>
            <param name="EORID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IPageFunctionRef">
            <summary>
            页面与功能逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageFunctionRef.InsertPageFunctionRef(uni2uni.com.Model.Manage.Entity.Entity_PageFunctionRef)">
            <summary>
            添加页面与功能关系
            </summary>
            <param name="ett_PageFunctionRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageFunctionRef.DeletePageFunctionRefByPageID(System.Guid)">
            <summary>
            删除某页面的功能关系
            </summary>
            <param name="ett_PageFunctionRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageFunctionRef.DeletePageFunctionRef(uni2uni.com.Model.Manage.Entity.Entity_PageFunctionRef)">
            <summary>
            删除页面与功能关系
            </summary>
            <param name="ett_PageFunctionRef"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageFunctionRef.GetPageFunctionRefByFunctionID(System.Guid)">
            <summary>
            根据功能ID获得所有功能页面关联信息
            </summary>
            <param name="functionID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageFunctionRef.GetPageFunctionRefByPageID(System.Guid)">
            <summary>
            根据页面ID获得所有功能页面关联信息
            </summary>
            <param name="pageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPageFunctionRef.GetMainPageFunctionRefByFunctionID(System.Guid)">
            <summary>
            获得以某个功能作为主功能的页面
            </summary>
            <param name="functionID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IPage">
            <summary>
            页面逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.InsertPage(uni2uni.com.Model.Manage.Entity.Entity_Page)">
            <summary>
            添加页面
            </summary>
            <param name="ett_Page"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.UpdatePage(uni2uni.com.Model.Manage.Entity.Entity_Page)">
            <summary>
            修改页面
            </summary>
            <param name="ett_Page"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.DeletePage(System.Guid)">
            <summary>
            删除页面
            </summary>
            <param name="pageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.GetPageByPageID(System.Guid)">
            <summary>
            根据页面ID获得页面信息
            </summary>
            <param name="pageID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.GetPageByPageURL(System.String)">
            <summary>
            根据页面URL获得页面信息
            </summary>
            <param name="PageURL"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.GetPageByModuleID(System.Guid,System.String)">
            <summary>
            根据模块ID获得页面信息
            </summary>
            <param name="moduleID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.GetPageByEmployeeForNavigate(System.Guid)">
            <summary>
            获得某用户导航需要显示的页面
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.GetAllPageByEmployee(System.Guid)">
            <summary>
            获得某用户功能所在页面
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IPage.GetPageByNoModule(System.String)">
            <summary>
            查询没有模块的页面信息
            </summary>
            <param name="moduleID"></param>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Manage.IFunctionObject">
            <summary>
            功能对象逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionObject.InsertFunctionObject(uni2uni.com.Model.Manage.Entity.Entity_FunctionObject)">
            <summary>
            添加功能对象
            </summary>
            <param name="ett_FunctionObject"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionObject.UpdateFunctionObject(uni2uni.com.Model.Manage.Entity.Entity_FunctionObject)">
            <summary>
            修改功能对象
            </summary>
            <param name="ett_FunctionObject"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionObject.DeleteFunctionObject(System.Guid)">
            <summary>
            删除功能对象
            </summary>
            <param name="functionObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionObject.GetFunctionObjectByID(System.Guid)">
            <summary>
            根据功能对象ID获得功能对象实体
            </summary>
            <param name="functionObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Manage.IFunctionObject.GetAllFunctionObject">
            <summary>
            获得所有功能对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder">
            <summary>
            非销售卡订单
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetAllProvince">
            <summary>
            获得所有的省份信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetCityByProvince(System.String)">
            <summary>
            通过省名获得城市列表
            </summary>
            <param name="cnProvinceName">中文省名称</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetDistrictByCityID(System.Int32)">
            <summary>
            根据城市ID获得区信息
            </summary>
            <param name="cityID">城市ID</param>
            <returns>地区实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetNewRelatedID">
            <summary>
            获取新后台外部订单号
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetNewOrderID">
            <summary>
            获取新后台订单号
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetMemberProductList(System.String,System.String)">
            <summary>
            获取指定的会系列产品信息
            </summary>
            <param name="clubType">会系列类型  0=全部 1=车友卡 2=生活会 3=无线会</param>
            <param name="cardMedia">介质  0=电子卡 1=实体卡</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.AddOrder(uni2uni.com.Model.Order_Order.OrderLinkDetail,System.Collections.Generic.IList{uni2uni.com.Model.Order_Order.GeneralOrder},uni2uni.com.Model.Order_Order.Order,System.Collections.Generic.IList{uni2uni.com.Model.Order_Order.ProductOrderDetail},uni2uni.com.Model.NoSellCardOrder.Entity_NoSellCardOrderApprove,uni2uni.com.Model.NoSellCardOrder.Entity_CompensateRelatedOrderRecord)">
            <summary>
            创建订单
            </summary>
            <param name="orderLinkDetail">联系人</param>
            <param name="generalOrderList">内部订单</param>
            <param name="order">外部订单</param>
            <param name="productOrderDetailList">订单商品</param>
            <param name="noSellCardOrderApprove">订单审批</param>
            <param name="compensateRelatedOrderRecord">赔偿关联订单表</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.GetOrderLinkDetail(System.String)">
            <summary>
            查看收货人信息
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>收货人信息实体s</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.AddRemarks(uni2uni.com.Model.Order_Order.RemarksEn)">
            <summary>
            添加一个新备注信息
            </summary>
            <param name="remarksEn">备注对象</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSellCardOrder.AddOrderEntend(uni2uni.com.Model.Order_Order.OrderExtend)">
            <summary>
            添加订单扩展表
            </summary>
            <param name="orderExtend"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GetListApproveOrderRecord(uni2uni.com.Model.NoSellCardOrder.Entity_Condation,System.Int32@)">
             <summary>
            查询审批订单记录集合
             </summary>
             <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GetAppOrderDetail(System.String)">
            <summary>
            查询审批信息
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>审批信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GetOrderDetail(System.String)">
            <summary>
            查看订单详细信息
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>订单详细信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GetProdcutDetail(System.String)">
            <summary>
            查看商品详细信息
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>商品详细信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.AddOrderLinkDetail(uni2uni.com.Model.NoSellCardOrder.Entity_OrderLinkDetail)">
            <summary>
            添加收货人信息
            </summary>
            <param name="model">收货人信息实体</param>
            <returns>Boolean：true=成功，false=失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GetOrderLinkDetail(System.String)">
            <summary>
            查看收货人信息
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>收货人信息实体s</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GotoApprove(System.String,System.String)">
            <summary>
            审批通过订单
            </summary>
            <param name="relatedId">关联订单号</param>
            <param name="remark">审批意见</param>
            <returns>return=true：审批通过.false：审批失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GotoNotApprove(System.String,System.String)">
            <summary>
            审批不通过订单
            </summary>
            <param name="relatedId"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.IsCompenStateOrder(System.String)">
            <summary>
            是否为关联赔偿订单
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>return:0=赔偿订单,1=源订单,2=没有关联的赔偿订单</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.NoSellCardOrder.INoSlCdOrderApproveRercord.GetCommentStateOrderRecord(System.String,System.Int32@)">
            <summary>
            赔偿订单关联记录
            </summary>
            <param name="relatedId">关联订单号</param>
            <returns>return:赔偿订单记录,订单类别记录类别</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetCreditCardPayListByCondition(uni2uni.com.Model.Order.Entity.Entity_CreditCardPay)">
            <summary>
            根据条件获取分期单列表信息
            </summary>
            <param name="entity">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.AddCreditCardPay(uni2uni.com.Model.Order.Entity.Entity_CreditCardPay)">
            <summary>
            添加一条分期单信息
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetCreditCardPayCounByCondition(uni2uni.com.Model.Order.Entity.Entity_CreditCardPay)">
            <summary>
            根据查询条件获取分期单条数
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.UpdateCreditCardPay(uni2uni.com.Model.Order.Entity.Entity_CreditCardPay)">
            <summary>
            修改分期单信息
            </summary>
            <param name="entity">分期单实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetCreditCardPayListByIDs(System.String)">
            <summary>
            通过多个ID查询分期单信息
            </summary>
            <param name="CardPayIDs">IDs</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetCreditCardPayByID(System.Guid)">
            <summary>
            通过单个ID查询分期单信息
            </summary>
            <param name="CreditCardPayID">ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetCreditCardPayByRelatedID(System.String)">
            <summary>
            通过预订单号查询订单分期信息
            </summary>
            <param name="strRelatedID">预订单号码</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetCreditCardPayState(System.String)">
            <summary>
            获得分期单状态
            </summary>
            <param name="State">状态</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.UpdateCreditCardPayStateByRelatedID(System.String,System.Int32)">
            <summary>
            根据预订单号码或者订单号码修改分期单的状态
            </summary>
            <param name="strRelatedID">预订单号码,或者订单号码</param>
            <param name="nState">分期单状态0.新单，1.已提交申请，2.已核准，3.已支付，4.未核准，5.已完成，6已取消，9重新修改</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ICreditCardPay.GetPayNumMoney(System.Decimal)">
            <summary>
            分期付款的金额与期数(获取最大的分期)
            </summary>
            <param name="SumMoney">分期金额</param>
            <returns>分期信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOFlighting.SelectAllFOFlighting(System.String)">
            <summary>
            获得机票航程列表
            </summary>
            <param name="FTID">航程ID</param>
            <returns>机票航程实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOFlighting.ExecEmptySqlMethod(System.String)">
            <summary>
            执行sql语句
            </summary>
            <param name="strSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOPassenger.SelectAllFOPassenger(System.String)">
            <summary>
            获得机票乘客列表
            </summary>
            <param name="FTID">乘客ID</param>
            <returns>机票乘客实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOPassenger.SelectCommonFOPassenger(System.String,System.String)">
            <summary>
            获得机票常用乘客列表
            </summary>
            <param name="CustomerCode">会员号</param>
            <returns>机票常用乘客实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOTrainOrder.SelectAllFOTrainOrder(System.String)">
            <summary>
            获得火车票乘客信息列表
            </summary>
            <param name="OrderID"></param>
            <returns>火车票乘客信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOTrainOrder.ExecEmptySqlMethod(System.String)">
            <summary>
            执行sql语句
            </summary>
            <param name="strSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IFOTrainOrderDetails.SelectAllFOTrainOrderDetails(System.String)">
            <summary>
            获得火车票乘客信息列表
            </summary>
            <param name="OrderID"></param>
            <returns>火车票乘客信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.InserGeneralOrder(uni2uni.com.Model.Order.Entity.Entity_GeneralOrder)">
            <summary>
            增加一条订单明细记录
            </summary>
            <param name="Order">订单明细实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.UpdateGeneralOrder(uni2uni.com.Model.Order.Entity.Entity_GeneralOrder)">
            <summary>
            修改一条订单头记录
            </summary>
            <param name="Order">订单头实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.UpdateGeneralOrderCancel(uni2uni.com.Model.Order.Entity.Entity_GeneralOrder)">
            <summary>
            修改一条订单信息记录———如果是订单取消操作将修改产品订单表和预订信息
            </summary>
            <param name="Entity_GeneralOrder">订单详细信息实体（如果不需要修改的参数可以不赋值）</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.UpdateCreditCardGeneralOrder(uni2uni.com.Model.Order.Entity.Entity_GeneralOrder)">
            <summary>
            修改分期订单的状态以及配送费信息
            </summary>
            <param name="Entity_GeneralOrder">订单详细信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.SelectGeneralOrderAll">
            <summary>
            返回所有订单明细的信息
            </summary>
            <returns>订单头实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.SelectGeneralOrderByRelatedID(System.String)">
            <summary>
            根据预定号查询订单明细信息
            </summary>
            <param name="strRelatedID">预定号</param>
            <returns>订单明细实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.SelectGeneralOrderByOrderID(System.String)">
            <summary>
            根据订单号查询订单明细信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>订单实明细体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.SelectGeneralOrderByCondition(uni2uni.com.Model.Order.BusinessEntity.Entity_OrderSearchCondition)">
            <summary>
            多条件查询订单详细信息（返回结果集实体 实体中有结果集（分页后的结果） 和本次查询的总数）
            </summary>
            <param name="Condition">查询条件的实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.SelectGeneralOrderByCreditCardPayID(System.Guid)">
            <summary>
            根据分期单号获取订单信息
            </summary>
            <param name="CreditCardPayID">分期单号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.GetGeneralOrderByCondition(uni2uni.com.Model.Order.BusinessEntity.Entity_OrderSearchCondition)">
            <summary>
            前台订单多条件查询订单详细信息（返回结果集实体 实体中有结果集（分页后的结果） 和本次查询的总数）
            </summary>
            <param name="Condition">查询条件的实体</param>
            <returns>数据集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.UpdateGeneralOrderState(System.String,System.Int32)">
            <summary>
            修改订单状态
            </summary>
            <param name="strOrderID">订单号</param>
            <param name="nOrderState">订单状态</param>
            <returns>TREU or FALSE</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.GetAllOrderSumMoney(uni2uni.com.Model.Order.BusinessEntity.Entity_OrderSearchCondition)">
            <summary>
            获取所有订单金额总计
            </summary>
            <param name="Condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IGeneralOrder.UpdateGeneralPayState(System.String,System.Int32)">
            <summary>
            修改订单的支付状态
            </summary>
            <param name="strOrderID">订单号</param>
            <param name="nOrderState">支付状态</param>
            <returns>TREU or FALSE</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderDetail.InserHotelOrderDetail(uni2uni.com.Model.Order.Entity.Entity_HotelOrderDetail)">
            <summary>
            增加一条酒店订单明细记录
            </summary>
            <param name="Order">酒店订单明细实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderDetail.UpdateHotelOrderDetail(uni2uni.com.Model.Order.Entity.Entity_HotelOrderDetail)">
            <summary>
            修改一条酒店订单明细记录
            </summary>
            <param name="Order">酒店订单明细实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderDetail.DeleteHotelOrderDetailByDetailID(System.String)">
            <summary>
            根据DetailID删除一条酒店订单明细信息
            </summary>
            <param name="strDetailID">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderDetail.SelectHotelOrderDetailAll">
            <summary>
            返回所有酒店订单明细的信息
            </summary>
            <returns>酒店订单明细实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderDetail.SelectHotelOrderDetailByOrderID(System.String)">
            <summary>
            根据订单号查询酒店订单明细信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>酒店订单明细实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderDetail.ExecSql(System.String)">
            <summary>
            执行Sql语句
            </summary>
            <param name="strSql"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderPrice.InserHotelOrderPrice(System.Collections.Generic.IList{uni2uni.com.Model.Order.Entity.Entity_HotelOrderPrice})">
            <summary>
            增加一条酒店订单价格记录
            </summary>
            <param name="Order">酒店订单价格实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderPrice.UpdateHotelOrderPrice(System.Collections.Generic.IList{uni2uni.com.Model.Order.Entity.Entity_HotelOrderPrice})">
            <summary>
            修改一条酒店订单价格记录
            </summary>
            <param name="Order">酒店订单价格实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderPrice.DeleteHotelOrderPriceByDetailID(System.String)">
            <summary>
            根据DetailID删除一条酒店订单价格信息
            </summary>
            <param name="strDetailID">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderPrice.SelectAllHotelOrderPrice">
            <summary>
            返回所有酒店订单价格的信息
            </summary>
            <returns>酒店订单价格实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IHotelOrderPrice.SelectHotelOrderPriceByOrderID(System.String)">
            <summary>
            根据订单号查询酒店订单价格信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>酒店订单价格实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IMovieOrderEdit.SelectAllMovieOrderEdit">
            <summary>
            返回所有电影票订单的信息
            </summary>
            <returns>电影票订单供货商</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.InserOrder(uni2uni.com.Model.Order.Entity.Entity_Order)">
            <summary>
            增加一条订单头记录
            </summary>
            <param name="Order">订单头实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.UpdateOrder(uni2uni.com.Model.Order.Entity.Entity_Order)">
            <summary>
            修改一条订单头记录
            </summary>
            <param name="Order">订单头实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.UpdateOrderConectInfo(System.String,System.Guid)">
            <summary>
            修改预订单关联需求信息
            </summary>
            <param name="strRelatedID">预订单ID号</param>
            <param name="gServiceID">需求ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.UpdateOrderService(System.Guid,System.Guid)">
            <summary>
            合并需求时修改订单的关联需求ID
            </summary>
            <param name="oldServiceID"></param>
            <param name="newServiceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SelectOrderAll">
            <summary>
            返回所有订单头的信息
            </summary>
            <returns>订单头实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SelectOrderByRelatedID(System.String)">
            <summary>
            根据预定好查询订单头信息
            </summary>
            <param name="strRelatedID">预定号</param>
            <returns>订单实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SelectOrderByKeyWord(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据关键字查询订单预定详细信息
            </summary>
            <param name="strKeyWord">关键字</param>
            <param name="strSearchType">查询类别0客户姓名 1下单员姓名 2单号 3账号 4手机号 5会员卡号 6商品名称</param>
            <param name="strOrderState">如果不需要该条件查询可以传入空值</param>
            <param name="strDateType">查询时间段0一周 1一月 2三月 3一年 如果不需要该条件查询可以传入空值</param>
            <param name="strIsTest">是否是有效订单 0是 1不是 如果不需要该条件查询可以传入空值</param>
            <returns>订单实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SelectOrderByCondition(uni2uni.com.Model.Order.BusinessEntity.Entity_OrderSearchCondition)">
            <summary>
            多条件查询预定订单详细信息（返回结果集实体 实体中有结果集（分页后的结果） 和本次查询的总数）
            </summary>
            <param name="Condition">查询条件的实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SelectOrderByOrderID(System.String)">
            <summary>
            根据订单号查询预订信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>预订实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SelectOrderByServiceID(System.Guid)">
            <summary>
            根据需求查询预订信息
            </summary>
            <param name="ServiceID">需求ID</param>
            <returns>预订实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.GetOrderListByState(System.Int32,System.Guid)">
            <summary>
            根据订单状态获取订单列表信息
            </summary>
            <param name="nOrderState">订单状态 0 新单 1 执行中 2 已完成 3 已取消</param>
            <param name="gMmemberID">会员ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.GetRecodeList(System.String)">
            <summary>
             查询指定订单的支付记录
            </summary>
            <param name="orderID">订单ID</param>
            <returns>OrderType(1:信用卡直接支付记录 2:礼品卡支付记录 3:代金券支付记录 4:信用卡分期单支付记录)</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.AddToShoppingCart(System.Int32,System.Int32)">
            <summary>
            商品添加到购物车
            </summary>
            <param name="nInfoCode">产品CODE</param>
            <param name="nAmount">数量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.RemoveShoppingCart(System.Int32,System.Int32)">
            <summary>
            从cookie修改或者删除商品
            </summary>
            <param name="ProductID">产品CODE</param>
            <param name="nAmount">数量小于等于0是删除</param>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.LoadCookieShoppingCart">
            <summary>
            从cookie中读取商品信息
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrder.SubmitOrder(uni2uni.com.Model.Order.Entity.Entity_Order,uni2uni.com.Model.Order.Entity.Entity_OrderLinkDetail,System.Collections.Generic.IList{uni2uni.com.Model.Order.Entity.Entity_GeneralOrder},System.Collections.Generic.IList{uni2uni.com.Model.Order.Entity.Entity_ProductOrderDetail},uni2uni.com.Model.User.Entity.Entity_MemberBase)">
            <summary>
            订单添加
            </summary>
            <param name="order">预订单实体</param>
            <param name="OrderLinkDetail">联系人实体</param>
            <param name="generalOrderList">订单实体集合</param>
            <param name="ProductOrderDetailList">商品实体集合</param>
            <param name="ettMemberBase">会员实体</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.InserOrderLinkDetail(uni2uni.com.Model.Order.Entity.Entity_OrderLinkDetail)">
            <summary>
            增加一条订单联系人记录
            </summary>
            <param name="Order">订单联系人实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.UpdateOrderLinkDetail(uni2uni.com.Model.Order.Entity.Entity_OrderLinkDetail)">
            <summary>
            修改一条订单联系人记录
            </summary>
            <param name="Order">订单头实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SelectOrderLinkDetailAll">
            <summary>
            返回所有订单联系人的信息
            </summary>
            <returns>订单联系人实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SelectOrderLinkDetailByMemberID(System.Guid)">
            <summary>
            返回所有订单联系人的信息
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SelectOrderLinkDetailByRelatedID(System.String)">
            <summary>
            根据预定号查询订单联系人信息
            </summary>
            <param name="strRelatedID">预定号</param>
            <returns>订单联系人实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SelectOrderLinkDetailByID(System.String)">
            <summary>
            根据ID号查询订单联系人信息
            </summary>
            <param name="strRelatedID">预定号</param>
            <returns>订单联系人实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SelectOrderLinkDetailByOrderID(System.String)">
            <summary>
            根据订单号查询订单联系人信息
            </summary>
            <param name="strOrderID">订单号</param>
            <returns>订单联系人实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SelectUsualOrderLinkDetailByMemberID(System.Guid)">
            <summary>
            返回指定会员的常用联系人
            </summary>
            <param name="memberID">会员ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderLinkDetail.SendSms(uni2uni.com.Model.Order.Entity.Entity_OrderLinkDetail,uni2uni.com.Model.Order.Entity.Entity_Order,System.String)">
            <summary>
            发短信、邮件
            </summary>
            <param name="entity_OrderLinkDetail"></param>
            <param name="entity_Order"></param>
            <param name="htmlCode"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.InsertOrderPriceChange(uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange)">
            <summary>
            增加一条订单价格改变数据
            </summary>
            <param name="OrderPriceChange">订单价格改变实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectOrderPriceChangeByRelateID(System.String)">
            <summary>
            以预定号 查询一条订单价格改变数据
            </summary>
            <param name="strPriceChangeID">预定号</param>
            <returns>变价单实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectOrderPriceChangeByCondition(uni2uni.com.Model.Order.BusinessEntity.Entity_OrderSearchCondition)">
            <summary>
            多条件查询差价单信息
            </summary>
            <param name="Condition">查询条件实体（RelatedID订单号） （CustID变价单号）（StartDate起始时间 EndDate结束时间） （OrderState变价单状态0新单 1已执行 2已取消）（IsTest金额去向0增加 1减少）</param>
            <returns>变价单实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectOrderPriceChangeByPriceChangeID(System.String)">
            <summary>
            以PriceChangeID 查询一条订单价格改变数据
            </summary>
            <param name="strPriceChangeID">变价单ID</param>
            <returns>变价单实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.UpdateOrderPriceChangeByPriceChangeID(uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange)">
            <summary>
            修改一条订单价格改变数据
            </summary>
            <param name="OrderPriceChange">订单价格改变实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.UpdateOrderPriceChangecomplete(uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange)">
            <summary>
            差价订单财务操作方法 当状态改成完成时候  要给客户加上相应的积分或者礼品卡金额
            </summary>
            <param name="OrderPriceChange">订单价格改变实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SubmitPriceChangeOrder(uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange)">
            <summary>
            客服提交差价订单到财务
            </summary>
            <param name="gPriceChangeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectTransactionBackRecordByPriceChangeID(System.Guid)">
            <summary>
            根据差价订单号获取 该差价订单金额返还明细
            </summary>
            <param name="gPriceChangeID">差价订单号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectOrderPriceChangeByOrderID(System.String)">
            <summary>
            以订单号号 查询一条订单价格改变数据
            </summary>
            <param name="strPriceChangeID">订单号号</param>
            <returns>变价单实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectTransactionRecordByTransactionId(System.Guid)">
            <summary>
            根据交易号 查询交易记录
            </summary>
            <param name="gTransactionId"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.PlanOrderPriceChange(uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange)">
            <summary>
            机票产生差价订单
            </summary>
            <param name="entity_PriceChange">差价订单实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.UpdateProductListBackGoods(uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange,System.String)">
            <summary>
            对某个订单的多个或单个商品退货功能，但不包括对所有商品进行退货功能
            </summary>
            <param name="entity_OrderPriceChange">差价单实体</param>
            <param name="strDetailList">退货商品的详细ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderPriceChange.SelectGiftCardBackMoneyInfo(System.String)">
            <summary>
            查询礼品的卡差价单返回记录
            </summary>
            <param name="strGiftCardCide">礼品卡号</param>
            <returns>返回记录实体集合</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Order.IOrderSequenceCode">
            <summary>
            逻辑层OrderSequenceCode接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderSequenceCode.InsertOrderSequenceCode(uni2uni.com.Model.Order.Entity.Entity_OrderSequenceCode)">
            <summary>
            添加一个新订单编号
            </summary>
            <param name="orderSequenceCode">订单号对象</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IOrderSequenceCode.GetOrderSequenceCodeBySequenceName(uni2uni.com.Model.Order.Entity.Entity_OrderSequenceCode)">
            <summary>
            获得订单最大编号
            </summary>
            <param name="SequenceName">频道名称</param>
            <returns>会员实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.InserProductOrderDetail(uni2uni.com.Model.Order.Entity.Entity_ProductOrderDetail)">
            <summary>
            增加一条订单产品记录
            </summary>
            <param name="Order">订单产品实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.UpdateProductOrderDetail(uni2uni.com.Model.Order.Entity.Entity_ProductOrderDetail)">
            <summary>
            修改一条订单产品记录
            </summary>
            <param name="Order">订单产品实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.UpdateProductOrderDetailANDPriceChange(uni2uni.com.Model.Order.Entity.Entity_ProductOrderDetail,uni2uni.com.Model.Order.Entity.Entity_OrderPriceChange,uni2uni.com.Model.Order.Entity.Entity_StockOutRegister,System.String,System.String,System.Decimal,System.String)">
            <summary>
            修改一条订单产品记录 如果该订单已经支付的话！增加一条变价记录 还有是否增加缺货登记记录
            </summary>
            <param name="ProductOrderDetail">订单产品实体</param>
            <param name="OrderPriceChange">变价表实体（如果不需要增加变价信息可以传入null）</param>
            <param name="StockOutRegister">缺货登记实体（如果不需要增加变价信息可以传入null）</param>
            <param name="strOrderID">订单号</param>
            <param name="strRelatedID">预定号</param>
            <param name="dcChangeMoney">改变的金额可以为负数</param>
            <param name="strOpID">操作员ID号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.UpdateCreditOrderProductInfo(uni2uni.com.Model.Order.Entity.Entity_ProductOrderDetail,System.Guid)">
            <summary>
            分期单产品信息修改
            </summary>
            <param name="ProductOrderDetail"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.DeleteProductOrderDetailByDetailID(System.Int64)">
            <summary>
            根据DetailID删除一条订单产品信息
            </summary>
            <param name="strDetailID">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.SelectProductOrderDetailAll">
            <summary>
            返回所有订单产品的信息
            </summary>
            <returns>订单产品实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.SelectProductOrderDetailByOrderID(System.String)">
            <summary>
            根据订单号查询订单产品信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>订单产品实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.SelectProductOrderDetailBystrDetailID(System.Int64)">
            <summary>
            根据DetailID查询订单产品信息
            </summary>
            <param name="strDetailID">唯一标示号</param>
            <returns>订单产品实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.SelectProductOrderDetailByRelatedID(System.String)">
            <summary>
            根据预订号查询订单产品信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>订单产品实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IProductOrderDetail.SelectProductOrderDetailByCreditCardPayID(System.Guid)">
            <summary>
            根据分期单号查询订单产品信息
            </summary>
            <param name="CreditCardPayID">分期单号</param>
            <returns>订单产品实体集合</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Order.IRefundRecord">
            <summary>
            逻辑层IRefundRecord接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRefundRecord.AddRefundRecord(uni2uni.com.Model.Order.Entity.Entity_RefundRecord,uni2uni.com.Model.Order.Entity.Entity_RefundRecordDetail)">
            <summary>
            添加一条退款记录信息
            </summary>
            <param name="entity">退款记录实体</param>
            <param name="refundRecordDetail">退款记录详细实体</param>
            <returns>true-成功，false-失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRefundRecord.UpdateRefundRecord(uni2uni.com.Model.Order.Entity.Entity_RefundRecord,uni2uni.com.Model.Order.Entity.Entity_RefundRecordDetail)">
            <summary>
            修改退款记录信息
            </summary>
            <param name="entity">退款记录实体</param>
            <param name="refundRecordDetail">退款记录详细实体</param>
            <returns>true-成功，false-失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRefundRecord.GetRefundRecordByOrderId(System.String)">
            <summary>
            通过订单ID获得退款记录实体
            </summary>
            <param name="orderId">订单ID</param>
            <returns>退款记录实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRefundRecord.GetRefundRecordByRecordId(System.String)">
            <summary>
            通过退款记录ID获得退款记录实体
            </summary>
            <param name="recordId">退款记录ID</param>
            <returns>退款记录实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRefundRecord.GetRefundRecordListByCondition(System.Guid,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据条件获取退款记录列表信息
            </summary>
            <param name="memberId">会员ID</param>
            <param name="strartTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="state">状态</param>
            <param name="pageSize">页大小</param>
            <param name="pageCurrent">当前页</param>
            <returns>记录列表信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRefundRecord.GetRefundRecordDetailByRecordId(System.Guid)">
            <summary>
            通过退款ID获得退款记录详情实体
            </summary>
            <param name="recordId">详情ID</param>
            <returns>退款记录详情实体</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Order.IReimbursement">
            <summary>
            逻辑层IReimbursement接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IReimbursement.GetReimbursementList(System.Collections.Generic.IList{uni2uni.com.Model.Order.BusinessEntity.BEntity_TransactionRecord},System.String)">
            <summary>
            解析支付记录
            </summary>
            <param name="bTransactionRecordList">支付记录</param>
            <returns>退还记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IReimbursement.InsertTransaction(uni2uni.com.Model.Order.Entity.Entity_TransactionRecord,uni2uni.com.Model.Order.Entity.Entity_TransactionDetail)">
            <summary>
            插入退款记录
            </summary>
            <param name="transactionRecord">支付记录</param>
            <param name="transactionDetail">支付记录详细</param>
            <returns>true-成功，false-失败</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.Order.IRESTOrder">
            <summary>
            逻辑层RESTOrder接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRESTOrder.InsertRESTOrder(uni2uni.com.Model.Order.Entity.Entity_RESTOrder)">
            <summary>
            添加一条餐饮订单基础信息
            </summary>
            <param name="restOrder">餐饮订单基础信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRESTOrder.UpdateRESTOrder(uni2uni.com.Model.Order.Entity.Entity_RESTOrder)">
            <summary>
            修改餐饮订单基础信息
            </summary>
            <param name="restOrder">餐饮订单基础信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRESTOrder.GetRESTOrderByID(System.String)">
            <summary>
            根据订单编号获得餐饮订单基础信息
            </summary>
            <param name="orderID"></param>
            <returns>餐饮订单基础信息对象</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IRESTOrder.GetProductOrderByID(System.String)">
            <summary>
            把Entity_RESTOrder转为Entity_ProductOrderDetail
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegister.InserStockOutRegister(uni2uni.com.Model.Order.Entity.Entity_StockOutRegister)">
            <summary>
            增加一条缺货登记记录
            </summary>
            <param name="Order">缺货登记实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegister.UpdateStockOutRegister(uni2uni.com.Model.Order.Entity.Entity_StockOutRegister)">
            <summary>
            修改一条缺货登记记录
            </summary>
            <param name="Order">缺货登记实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegister.DeleteStockOutRegisterByRegisterID(System.Guid)">
            <summary>
            根据DetailID删除一条缺货登记信息
            </summary>
            <param name="strDetailID">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegister.SelectStockOutRegisterAll">
            <summary>
            返回所有缺货登记的信息
            </summary>
            <returns>缺货登记实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegister.SelectStockOutRegisterByRegisterID(System.Guid)">
            <summary>
            根据订单号查询缺货登记信息
            </summary>
            <param name="strRelatedID">订单号</param>
            <returns>缺货登记实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegisterAndPC.SelectStockOutRegisterAndPC(System.String)">
            <summary>
            获得酒店订单详情列表
            </summary>
            <param name="orderID">酒店订单详情ID</param>
            <returns>酒店订单详情实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.IStockOutRegisterAndPC.SelectStockOutRegisterAndPC(uni2uni.com.Model.Order.Entity.Entity_StockOutRegister,System.DateTime,System.DateTime)">
            <summary>
            获得酒店订单详情列表
            </summary>
            <param name="entity_StockOutRegisterAndPC"></param>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.Transaction(System.String@,System.Boolean)">
            <summary>
            支付接口
            </summary>
            <param name="retString">支付信息，失败返回错误信息</param>
            <param name="isRealPay">是否立即进行支付，true:立即支付，false：只增加支付纪录</param>
            <returns>true:成功，false:失败</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.UpdateTransactionStatus(System.Guid,uni2uni.com.Model.Order.Enum.TransactionStatus)">
            <summary>
            更新交易状态
            </summary>
            <param name="guid">交易ID</param>
            <param name="status">状态</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.RemoveOrder(System.String)">
            <summary>
            删除一个支付订单
            </summary>
            <param name="orderId">订单ID</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.AddOrder(System.String,System.Decimal,System.Int32)">
            <summary>
            增加一个支付订单
            </summary>
            <param name="orderId">订单ID</param>
            <param name="amount">金额</param>
            <param name="orderType">订单类型</param>
            <returns>TURE OR FALSE</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetOrderNumber">
            <summary>
            得到订单数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.Load(System.Guid)">
            <summary>
            加载交易信息
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTotalAmount">
            <summary>
            返回总金额
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.SetTransactionRecord(uni2uni.com.Model.Order.Entity.Entity_TransactionRecord)">
            <summary>
            设置交易纪录实体
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionRecord">
            <summary>
            返回交易纪录实体
            </summary>
            <returns>交易纪录实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionDetailList">
            <summary>
            返回交易订单明细实体集合
            </summary>
            <returns>交易订单明细实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.SetPayStyle(uni2uni.com.Model.Order.Enum.PayStyle)">
            <summary>
            设置支付方式
            </summary>
            <param name="payStyle"></param>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.SelectByCondition(uni2uni.com.Model.Order.Entity.Entity_TransactionRecordCondition)">
            <summary>
            多条件搜索
            </summary>
            <param name="condition">搜索条件实体类</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.SelectCountByCondition(uni2uni.com.Model.Order.Entity.Entity_TransactionRecordCondition)">
            <summary>
            多条件搜索统计
            </summary>
            <param name="condition">搜索条件实体类</param>
            <returns>总纪录数</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetPayStyleString(System.Int32)">
            <summary>
            返回支付方式显示名称
            </summary>
            <param name="payStyle">支付方式</param>
            <returns>支付方式显示名称</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionStyleString(System.Int32)">
            <summary>
            返回交易类型显示名称
            </summary>
            <param name="transactionStyle">交易类型</param>
            <returns>交易类型显示名称</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionStatusString(System.Int32)">
            <summary>
            返回交易状态显示名称
            </summary>
            <param name="transactionStauts">交易状态</param>
            <returns>交易状态显示名称</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetOrderTypeString(System.Int32)">
            <summary>
            返回订单类型显示名称
            </summary>
            <param name="orderType">订单类型</param>
            <returns>订单类型显示名称</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetCardTypeString(System.Int32)">
            <summary>
            返回卡类型显示名称
            </summary>
            <param name="cardType">卡类型</param>
            <returns>卡类型显示名称</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.UndoPay(System.Guid)">
            <summary>
            取消支付
            </summary>
            <param name="transactionId"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetBTransactionRecordListByOrderId(System.String)">
            <summary>
            接订单号查询礼品卡支付记录
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionRecordListByOrderID(System.String)">
            <summary>
            接订单号查询礼品卡支付记录
            </summary>
            <param name="orderID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.SaveTransactionRecord(uni2uni.com.Model.User.Entity.Entity_GiftCard,uni2uni.com.Model.Order.Entity.Entity_TransactionDetail,uni2uni.com.Model.Order.Entity.Entity_TransactionRecord)">
            <summary>
            保存礼品卡支付记录
            </summary>
            <param name="giftCard">礼品卡实体</param>
            <param name="transactionDetail">礼品卡消费记录详细实体</param>
            <param name="transactionRecord">礼品卡消费记录实体</param>
            <returns>是否操作成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetGiftCardPayListByOrderId(System.String)">
            <summary>
            根据订单号码查询有效的礼品卡支付记录
            </summary>
            <param name="strOrderId">订单号码</param>
            <returns>支付集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionId(System.String,System.Int32)">
            <summary>
            根据交易码获得支付记录ID
            </summary>
            <param name="key">交易码</param>
            <param name="keyType">交易码类型</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionDetailByTransactionId(System.Guid)">
            <summary>
            根据支付Id获得支付详细信息
            </summary>
            <param name="transactionId">支付Id</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetPayTotalAmountByOrderId(System.String)">
            <summary>
            根据外部订单号获得此订单的已支付总额
            </summary>
            <param name="orderId"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.InsertTransationRecordProc(System.String,System.Decimal,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal)">
            <summary>
            添加交易记当存储过程
            </summary>
            <param name="OrderId">预订单id</param>
            <param name="OrderAmount">支付金额</param>
            <param name="TransactionId">guid</param>
            <param name="TransactionTime">支付时间</param>
            <param name="UserId">操作人ID</param>
            <param name="CardCode">银行卡号</param>
            <param name="RealName">汇款人姓名</param>
            <param name="HostNumber">银行支付单流水号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.Order.ITransaction.GetTransactionByOrderID(System.String)">
            <summary>
            根据订单号获取一条支付记录
            </summary>
            <param name="orderId"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IBMInfo.GetBMListInfo">
            <summary>
            得到全部BM列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IBMInfo.GetBMInfoByID(System.Guid)">
            <summary>
            通过BMID得到BM信息
            </summary>
            <param name="nBM"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IBMInfo.AddNewBM(uni2uni.com.Model.User.Entity.Entity_BMInfo)">
            <summary>
            添加一个BM
            </summary>
            <param name="entity_BM"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IBMInfo.UpdateBM(uni2uni.com.Model.User.Entity.Entity_BMInfo)">
            <summary>
            更新一个BM信息
            </summary>
            <param name="entity_BM"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IBMInfo.DeleteBM(System.Guid)">
            <summary>
            删除一个BM记录
            </summary>
            <param name="nBMID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IBMInfo.BMExist(System.String)">
            <summary>
            通过BM名称判断是否存在此BM
            </summary>
            <param name="strBMName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ICardOperationRecord.InsertCardOperationRecord(uni2uni.com.Model.User.Entity.Entity_CardOperationRecord)">
            <summary>
            插入一条卡操作记录
            </summary>
            <param name="entity_CardOperationRecord"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ICardOperationRecord.UpdateCardOperationRecord(uni2uni.com.Model.User.Entity.Entity_CardOperationRecord)">
            <summary>
            更新一条卡操作记录
            </summary>
            <param name="entity_CardOperationRecord"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ICardOperationRecord.DeleteCardOperationRecordByID(System.Int32)">
            <summary>
            删除一条卡操作记录
            </summary>
            <param name="CardOperationRecordID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ICardOperationRecord.GetCardOperationRecordByID(System.Int32)">
            <summary>
            通过ID获得一条卡操作记录
            </summary>
            <param name="CardOperationRecordID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ICardOperationRecord.GetCardOperationRecordByCondition(System.String,System.String,System.String)">
            <summary>
            根据操作员姓名以及操作起始时间和结束时间查询卡操作记录
            </summary>
            <param name="strOpName">操作员姓名</param>
            <param name="strStartDate">起始时间</param>
            <param name="strEndDate">结束时间</param>
            <returns>卡操作记录集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.InsertFavoriteInfo(uni2uni.com.Model.User.Entity.Entity_FavoriteInfo)">
            <summary>
            插入一条收藏夹信息记录
            </summary>
            <param name="favoriteInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.UpdateFavoriteInfo(uni2uni.com.Model.User.Entity.Entity_FavoriteInfo)">
            <summary>
            更新一条收藏夹信息记录
            </summary>
            <param name="favoriteInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.DeleteFavoriteInfo(System.Guid)">
            <summary>
            删除一条收藏夹信息记录
            </summary>
            <param name="favoriteID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.GetAllFavoriteInfo">
            <summary>
            获取所有收藏夹信息记录列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.GetFavoriteInfoByFavoriteID(System.Guid)">
            <summary>
            通过ID获取一条收藏夹信息
            </summary>
            <param name="favoriteID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.GetFavoriteInfoByFavoriteSortID(System.Guid)">
            <summary>
            通过收藏夹类别ID获取收藏夹信息列表
            </summary>
            <param name="favoriteSortID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.GetFavoriteInfoByMemberIDAndFavorieSortID(System.Guid,System.Guid,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            通过会员ID和收藏夹ID获取相关联的收藏夹信息列表
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.DeleteFavoriteInfoByFavoriteSortID(System.Guid)">
            <summary>
            删除某收藏夹类别下的收藏夹信息
            </summary>
            <param name="favoriteSortID">收藏夹类别ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteInfo.GetFavoriteInfoByMemberID(System.Guid)">
            <summary>
            通过会员ID获取相关联的收藏夹信息列表
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.InsertFavoriteSort(uni2uni.com.Model.User.Entity.Entity_FavoriteSort)">
            <summary>
            插入一条收藏夹类别记录
            </summary>
            <param name="favoriteSort"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.UpdateFavoriteSort(uni2uni.com.Model.User.Entity.Entity_FavoriteSort)">
            <summary>
            更新一条收藏夹类别记录
            </summary>
            <param name="favoriteSort"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.DeleteFavoriteSort(System.Guid)">
            <summary>
            删除一条收藏夹类别记录
            </summary>
            <param name="favoriteSortID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.GetAllFavoriteSort">
            <summary>
            获得收藏夹类别列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.GetFavoriteSortByFavoriteSortID(System.Guid)">
            <summary>
            通过ID获得一条收藏夹类别信息
            </summary>
            <param name="favoriteSortID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.GetFavoriteSortByMemberID(System.Guid)">
            <summary>
            通过会员ID获得他所关联的收藏夹类别(包括系统文件夹)
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.FavoriteSortExist(System.String,System.Guid)">
            <summary>
            判断收藏夹名称是否存在
            </summary>
            <param name="sortName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IFavoriteSort.GetCustomerFavoriteSortByMemberID(System.Guid)">
            <summary>
            根据用户ID获得用户收藏夹列表(不包括系统文件夹)
            </summary>
            <param name="memberID">用户编号</param>
            <returns>收藏夹类别列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.GetGiftCardList">
            <summary>
            得到全部礼品卡列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.GetGiftCardInfoByCardID(System.String)">
            <summary>
            通过卡ID得到礼品卡信息
            </summary>
            <param name="GiftCardID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.AddNewGiftCard(uni2uni.com.Model.User.Entity.Entity_GiftCard)">
            <summary>
            添加一个礼品卡
            </summary>
            <param name="GiftCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.UpdateGiftCard(uni2uni.com.Model.User.Entity.Entity_GiftCard)">
            <summary>
            更新一个礼品卡信息
            </summary>
            <param name="GiftCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.DeleteGiftCard(System.String)">
            <summary>
            删除一个礼品卡记录
            </summary>
            <param name="nBMID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.SelectGiftCardByCondition(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            分页获得会员卡
            </summary>
            <param name="moneyType">金额类型(0代表不按金额搜索)</param>
            <param name="moneyValue">金额大小</param>
            <param name="StartBegin">查询开始服务日期的开始时间</param>
            <param name="StartEnd">查询开始服务日期的截止时间</param>
            <param name="ExpiresBegin">查询结束服务日期的开始时间</param>
            <param name="ExpiresEnd">查询结束服务日期的结束时间</param>
            <param name="cardbegin">号段开始</param>
            <param name="cardend">号段结束</param>
            <param name="type">状态 0：开卡 1：启用 2冻结</param>
            <param name="pageid">页码</param>
            <param name="pagesize">页大小</param>
            <param name="isFirstTime">是否第一次调用</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.SelectGiftCardByCardAreaAndType(System.String,System.String,System.String)">
            <summary>
            根据号段和状态（0：开卡 1：启用 2冻结）查询礼品卡信息 
            </summary>
            <param name="begincard"></param>
            <param name="endcard"></param>
            <param name="type">（0：开卡 1：启用 2冻结）</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.SelectGiftCardByBetweenGiftCardID(System.String,System.String)">
            <summary>
            根据GiftCardID号段获得GiftCard信息（没有发卡的卡 既是IsUsed 不等于1）
            </summary>
            <param name="startgiftCardID">查询的起始卡号</param>
            <param name="endgiftCardID">查询的结束卡号</param>
            <returns>GiftCard实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCard.GetGiftCardByCardCodeAndPassword(System.String,System.String)">
            <summary>
            检查礼品卡号密码
            </summary>
            <param name="strCardCode">礼品卡号</param>
            <param name="strPassword">礼品卡密码</param>
            <returns>查询结果实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCardOperationRecord.InsertGiftCardOperationRecord(uni2uni.com.Model.User.Entity.Entity_GiftCardOperationRecord)">
            <summary>
            添加一条GiftCardOperationRecord信息
            </summary>
            <param name="giftCardOperationRecord">GiftCardOperationRecord实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCardOperationRecord.UpdateGiftCardOperationRecord(uni2uni.com.Model.User.Entity.Entity_GiftCardOperationRecord)">
            <summary>
            更新一条GiftCardOperationRecord信息
            </summary>
            <param name="giftCardOperationRecord">GiftCardOperationRecord实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCardOperationRecord.DeleteGiftCardOperationRecord(System.Guid)">
            <summary>
            删除一个GiftCardOperationRecord
            </summary>
            <param name="giftCardOperationRecordID">GiftCardOperationRecordID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCardOperationRecord.SelectGiftCardOperationRecordByCondition(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            分页获得会员卡
            </summary>
            <returns>GiftCardOperationRecord实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftCardOperationRecord.SelectGiftCardOperationRecordByGiftCardOperationRecordID(System.Guid)">
            <summary>
            根据GiftCardOperationRecordID获得GiftCardOperationRecord信息
            </summary>
            <param name="giftCardOperationRecordID">GiftCardOperationRecordID</param>
            <returns>GiftCardOperationRecord实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftPwdEditLog.AddNewGiftPwdEditLog(uni2uni.com.Model.User.Entity.Entity_GiftPwdEditLog)">
            <summary>
            添加一个礼品卡密码修改记录
            </summary>
            <param name="GiftCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftPwdEditLog.SelectGiftPwdEditLogByGiftCardID(System.String)">
            <summary>
            根据礼品卡卡号获得修改密码记录
            </summary>
            <param name="strGiftCardID">礼品卡卡号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftTransferLog.InsertGiftTransferLog(uni2uni.com.Model.User.Entity.Entity_GiftTransferLog)">
            <summary>
            增加一条礼品卡转账记录
            </summary>
            <param name="entity_GiftTransferLog">礼品转账记录实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftTransferLog.GiftCardTransfer(uni2uni.com.Model.User.Entity.Entity_GiftTransferLog,uni2uni.com.Model.User.Entity.Entity_GiftCard)">
            <summary>
            礼品转账 礼品卡转用户
            </summary>
            <param name="entity_GiftTransferLog">礼品转账记录实体</param>
            <param name="entity_GiftCard">礼品卡实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftTransferLog.SelectGiftTransferLogByCardCode(System.String)">
            <summary>
            查询某张礼品卡的转账记录
            </summary>
            <param name="strGiftCardCode">礼品卡号</param>
            <returns>礼品操作记录实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IGiftTransferLog.GetGiftTransferLogByCondition(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据条件数据库分页查询
            </summary>
            <param name="strBeginCardID">开始卡号</param>
            <param name="strEndCardID">结束卡号</param>
            <param name="strTransferType">转账类型</param>
            <param name="strBeginDate">开始时间</param>
            <param name="strEndDate">结束时间</param>
            <param name="pageid">页码</param>
            <param name="pagesize">页大小</param>
            <param name="isFirst">是否第一次调用</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ILogin.UserLogin(uni2uni.com.Model.User.Enum.LoginType,uni2uni.com.Model.User.Entity.Entity_MemberBase@,System.String)">
            <summary>
            登录
            </summary>
            <param name="loginType">登录类型</param>
            <param name="entity_MemberBase">Entity_MemberBase实体</param>
            <returns>Bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.InsertMemberBase(uni2uni.com.Model.User.Entity.Entity_MemberBase)">
            <summary>
            添加会员基本信息
            </summary>
            <param name="memberBase"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.InsertMemberInfo(uni2uni.com.Model.User.Entity.Entity_MemberInfo)">
            <summary>
            添加会员扩展信息
            </summary>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.UpdateMemberBase(uni2uni.com.Model.User.Entity.Entity_MemberBase)">
            <summary>
            修改会员基本信息
            </summary>
            <param name="memberBase">基本信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.UpdateMemberFullInfo(uni2uni.com.Model.User.BusinessEntity.Entity_MemberFullInfo)">
            <summary>
            修改会员信息
            </summary>
            <param name="member">用户信息实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.UpdatePassWord(uni2uni.com.Model.User.Entity.Entity_MemberBase)">
            <summary>
            修改密码
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.UpdateMemberInfo(uni2uni.com.Model.User.Entity.Entity_MemberInfo)">
            <summary>
            修改会员扩展信息
            </summary>
            <param name="memberInfo">扩展信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.UpdateOtherInfoManage(uni2uni.com.Model.User.Entity.Entity_OtherInfoManage)">
            <summary>
            修改用户常用信息
            </summary>
            <param name="otherInfo">常用信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetMemberBaseByID(System.Guid)">
            <summary>
            获得某会员基础信息
            </summary>
            <param name="memberID">会员ID</param>
            <returns>会员实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetMemberInfoByID(System.Guid)">
            <summary>
            获得某会员的扩展信息
            </summary>
            <param name="memberID">会员ID</param>
            <returns>会员实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetAllMemberBase">
            <summary>
            获得所有会员信息列表
            </summary>
            <returns>会员信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.DeleteMemberBase(System.Guid)">
            <summary>
            删除一条客户基础信息
            </summary>
            <param name="memberID">客户ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetAllCredentials">
            <summary>
            获得所有证件类型信息
            </summary>
            <returns>证件类型实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetBusinessMemberOrServiceUseByMemberID(System.Guid)">
            <summary>
            获得用户服务使用情况的业务实体列表
            </summary>
            <param name="memberID">用户ID</param>
            <returns>服务使用情况的业务实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectOtherInfoByUserID(System.Guid)">
            <summary>
            根据会员ID获得其所有常用信息管理数据
            </summary>
            <param name="userID">用户ID</param>
            <returns>常用信息管理实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetUseByMemberIDAndMemberSortOrServiceID(System.Guid,System.Guid)">
            <summary>
            根据会员ID和会员种类+服务ID获得一条会员服务使用情况
            </summary>
            <param name="memberID">会员ＩＤ</param>
            <param name="memberSortOrServiceID">会员种类＋服务ＩＤ</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.InitialMemberOrServiceUse(uni2uni.com.Model.User.Entity.Entity_MemberCard,System.Int32)">
            <summary>
            会员卡被激活时，初始化此卡中服务的使用情况
            </summary>
            <param name="ettMemberCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.AddMemberOrServiceUseCount(uni2uni.com.Model.User.Entity.Entity_MemberOrServiceUse)">
            <summary>
            为某个服务使用情况增加一次使用记录
            </summary>
            <param name="memberOrServiceUse">服务使用情况实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SubtractMemberOrServiceUseCount(uni2uni.com.Model.User.Entity.Entity_MemberOrServiceUse)">
            <summary>
            为某个服务使用情况减少一次使用记录
            </summary>
            <param name="memberOrServiceUse">服务使用情况实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberBaseByMobile(System.String)">
            <summary>
            根据手机号获得基础信息实体
            </summary>
            <param name="mobile">手机号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberBaseByEmail(System.String)">
            <summary>
            根据Email获得基础信息实体
            </summary>
            <param name="email">email</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberByPage(System.Int32,System.Int32)">
            <summary>
            分页查询Member信息
            </summary>
            <param name="page">页码</param>
            <param name="pagesize">页大小</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberFullInfoByCondition(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据条件获得用户的完整信息
            </summary>
            <param name="condition"></param>
            <param name="keyword"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberFullInfoByCondition(uni2uni.com.Model.User.Entity.BEntity_SearchMemebr,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据搜索实体搜索会员信息
            </summary>
            <param name="ettSearchMemebr"></param>
            <param name="pagesize"></param>
            <param name="page"></param>
            <param name="isFirstTime"></param>
            <param name="totalcount"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberFullInfoByCondition(System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据会员筛选条件搜索会员信息
            </summary>
            <param name="condition"></param>
            <param name="pagesize"></param>
            <param name="page"></param>
            <param name="isFirstTime"></param>
            <param name="totalcount"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetCredentialsByID(System.Int32)">
            <summary>
            根据证件值获得证件类型
            </summary>
            <param name="CTypeID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.selectMemberFullInfoByMemberID(System.Guid)">
            <summary>
            查询用户信息
            </summary>
            <param name="memberID">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetMemberInfoByCondition(System.String,System.String,System.DateTime)">
            <summary>
            根据条件获取相关的会员信息
            </summary>
            <param name="strWhereCondition">查询条件</param>
            <param name="strSearchType">查询类型0所有 1生日 2激活日期 3到期日期</param>
            <param name="dDate">查询的时间</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.GetServicesMemberInfo(System.Guid)">
            <summary>
            根据会员ID号获取服务需要的信息
            </summary>
            <param name="MemberID">会员ID号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectMemberBaseByBmidAndSort(System.Guid,System.Guid)">
            <summary>
            根据BM和BM类别得到会员列表
            </summary>
            <param name="bmId">BMID</param>
            <param name="bmSortId">BM类别</param>
            <returns>会员列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMember.SelectBMNameByMobile(System.String)">
            <summary>
            根据手机号码查询该会员的BM信息
            </summary>
            <param name="strMobile">手机号码</param>
            <returns>会员信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.InsertCard(uni2uni.com.Model.User.Entity.Entity_MemberCard)">
            <summary>
            添加一条会员卡信息
            </summary>
            <param name="card">会员卡实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.UpdateCardInfo(uni2uni.com.Model.User.Entity.Entity_MemberCard)">
            <summary>
            修改会员卡信息
            </summary>
            <param name="card">会员卡实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectAllMemberCard">
            <summary>
            获得所有的会员卡信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectCardByCardID(System.Guid)">
            <summary>
            根据会员卡ID获得会员卡信息
            </summary>
            <param name="memberCardID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectCardByCardCode(System.String)">
            <summary>
            根据卡号获得会员卡信息
            </summary>
            <param name="cardCode"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectCardByMemberID(System.Guid)">
            <summary>
            根据会员ID获得会员卡信息
            </summary>
            <param name="cardCode"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.GetCardByCardArea(System.String,System.String,System.Guid)">
            <summary>
            获得某号段内的所有会员卡信息
            </summary>
            <param name="beginCard">开始卡号</param>
            <param name="endCard">结束卡号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectCardRelateInfo(System.Guid)">
            <summary>
            获得某会员的所有卡信息(包括卡号卡所属分类所属bm所拥有的服务)
            </summary>
            <param name="MemberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectMemberCardByCondition(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据条件查询会员卡信息
            </summary>
            <param name="cardbegin"></param>
            <param name="cardend"></param>
            <param name="startTime"></param>
            <param name="sort"></param>
            <param name="type"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <param name="totalcount"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberCard.SelectCardByMemberIDAndStatus(System.Guid,System.Boolean)">
            <summary>
            根据会员ID和状态获得会员卡信息(true:激活状态 false:已关联未激活)
            </summary>
            <param name="cardCode"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.InsertMemberInfo(uni2uni.com.Model.User.Entity.Entity_MemberInfo)">
            <summary>
            添加用户扩展信息
            </summary>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.UpdateMemberInfo(uni2uni.com.Model.User.Entity.Entity_MemberInfo)">
            <summary>
            修改用户扩展信息
            </summary>
            <param name="memberInfo">用户扩展信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <!-- 对于成员“M:uni2uni.com.IBLL.User.IMemberInfo.UpdateMemberInfoGmailNameByMemberId(System.String,System.Guid)”忽略有格式错误的 XML 注释 -->
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.UpdateUniRemind(uni2uni.com.Model.User.Entity.Entity_MemberInfo)">
            <summary>
            保存积分到账提醒信息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.DeleteMemberInfo(System.Guid)">
            <summary>
            删除某用户的扩展信息
            </summary>
            <param name="memberID">用户编号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.SelectAllMemberInfo">
            <summary>
            获得所有的用户信息
            </summary>
            <returns>用户实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.SelectMemberInfoByID(System.Guid)">
            <summary>
            根据用户编号获得用户的扩展信息
            </summary>
            <param name="memberID">用户编号</param>
            <returns>扩展信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.SelectMemberInfoByGmail(System.String)">
            <summary>
            根据用户Gmail帐号获取用户信息
            </summary>
            <param name="gmail">Gmail帐号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.SelectMemberInfoByKeyWord(System.String,System.String)">
            <summary>
            按关键字查询会员信息
            </summary>
            <param name="strKeyWord">关键字</param>
            <param name="strSearchType">查询类别0用户名 1证件号码 2手机号码 3姓名 4会员卡号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberInfo.SelectMemberInfoByKeyWord(System.String)">
            <summary>
            中行服务验证手机号绑定
            </summary>
            <param name="strKeyWord">手机号</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegral.InsertMemberIntegral(uni2uni.com.Model.User.Entity.Entity_MemberIntegral)">
            <summary>
            添加一条会员积分信息
            </summary>
            <param name="memberIntegral">会员积分实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegral.UpdateMemberIntegral(uni2uni.com.Model.User.Entity.Entity_MemberIntegral)">
            <summary>
            更新一条会员积分信息
            </summary>
            <param name="memberIntegral">会员积分实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegral.DeleteMemberIntegral(System.Guid)">
            <summary>
            删除某会员的积分信息
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegral.SelectAllMemberIntegral">
            <summary>
            获得所有的会员积分信息
            </summary>
            <returns>会员积分信息列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegral.SelectMemberIntegralByMemberID(System.Guid)">
            <summary>
            获得某会员的积分信息
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegralLevelRule.InsertMemberIntegralLevelRule(uni2uni.com.Model.User.Entity.Entity_MemberIntegralLevelRule)">
            <summary>
            插入会员积分级别规则
            </summary>
            <param name="entity_MemberIntegralLevelRule">会员积分级别规则实体</param>
            <returns>true/false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegralLevelRule.UpdateMemberIntegralLevelRule(uni2uni.com.Model.User.Entity.Entity_MemberIntegralLevelRule)">
            <summary>
            修改会员积分级别规则
            </summary>
            <param name="entity_MemberIntegralLevelRule">会员积分级别规则实体</param>
            <returns>true/false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegralLevelRule.GetMemberIntegralLevelRuleByCondition(System.Int32,System.Int32)">
            <summary>
            根据条件查询会员积分级别规则
            </summary>
            <param name="uniMoneyRecordQueryCondition">查询条件</param>
            <returns>会员积分级别规则</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegralLevelRule.GetMemberIntegralLevelRuleByRuleID(System.Guid)">
            <summary>
            通过记录ID查询会员积分级别规则
            </summary>
            <param name="ruleID">记录ID</param>
            <returns>会员积分级别规则</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegralLevelRule.GetRakeBack(System.Int32,System.Decimal,System.Guid,System.Guid)">
            <summary>
            得到该级别的返佣
            </summary>
            <param name="levelID">会员级别ID号</param>
            <param name="money">金额</param>
            <param name="channeled">频道ID</param>
            <param name="providerId">供应商ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberIntegralLevelRule.GetDiscount(System.Int32,System.Decimal)">
            <summary>
            得到该级别的折扣
            </summary>
            <param name="levelID">会员级别ID号</param>
            <param name="money">金额</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.InsertMemberManagerRelation(uni2uni.com.Model.User.Entity.Entity_MemberManagerRelation)">
            <summary>
            添加一条秘书卡关系数据
            </summary>
            <param name="ettMemberManagerRelation">秘书卡关系实体</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.ResetMemberManagerRelation(System.String,uni2uni.com.Model.User.Entity.Entity_MemberManagerRelation)">
            <summary>
            重新设置秘书卡的关系，删除以前所有的旧的，添加新的
            </summary>
            <param name="strCardCode">删除的关系的卡号</param>
            <param name="ettMemberManagerRelation">添加秘书卡关系实体</param>
            <returns>true or false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.GetSecretaryCardInfoMemberCardCode(System.String)">
            <summary>
            根据卡号查询该卡号所属的大客户经理（大客户经理会员卡基本信息实体）
            </summary>
            <param name="strCardCode">查询的卡号</param>
            <returns>秘书卡实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.GetMemberFullInfoMemberCardCode(System.String)">
            <summary>
            根据卡号查询该卡号所属的大客户经理（大客户经理会员基本信息实体）
            </summary>
            <param name="strCardCode">查询的卡号</param>
            <returns>会员基本信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.GetMemberManagerRelationManagerCardCode(System.String)">
            <summary>
            根据卡号查询该大客户经理卡号直属会员卡号
            </summary>
            <param name="strCardCode">查询的卡号</param>
            <returns>秘书卡关系实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.GetMemberFullInfoByManagerMemberID(uni2uni.com.Model.User.BusinessEntity.Entity_MemberFullInfo,System.Int32@)">
            <summary>
            根据条件分页查询大客户经理的直属会员信息，此方法也可以用来验证会员是否是大客户经理
            </summary>
            <param name="ettSearchMemberFullInfo">查询条件</param>
            <param name="nSumCount">传出值总共有多少条</param>
            <returns>会员信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.GetServiceAmountByManagerMember(System.Guid,System.String,System.String)">
            <summary>
            根据条件查询出所有的大客户经理的直属会员消费信息
            </summary>
            <param name="gBMID">BMid</param>
            <param name="strStartTime">查询开始时间</param>
            <param name="strEndTime">查询结束时间</param>
            <returns>数据统计实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberManagerRelation.GetMemberManagerRelationManagerMemberID(System.Guid)">
            <summary>
            根据用户ID号查询该用户是否是大客户经理以及大客户经理的卡号
            </summary>
            <param name="gManagerMeberID">会员ID号</param>
            <returns>大客户经理关系信息实体集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.InsertMemberSort(uni2uni.com.Model.User.Entity.Entity_MemberSort)">
            <summary>
            添加一条会员种类信息,如果该会员种类属于联嘉网则需要输入卡号前缀
            </summary>
            <param name="memberSort">memberSort实体</param>
            <param name="uniCardPrefix">卡号前缀</param>
            <param name="areaStr">号段列表</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.UpdateMemberSort(uni2uni.com.Model.User.Entity.Entity_MemberSort)">
            <summary>
            更新一条会员种类信息
            </summary>
            <param name="memberSort">memberSort实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.DeleteMemberSort(System.Guid)">
            <summary>
            删除会员种类信息
            </summary>
            <param name="memberSortID">memberSortID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.GetAllMemberSort">
            <summary>
            获得所有的会员种类信息
            </summary>
            <returns>会员种类列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.GetMemberSortByBMID(System.Guid)">
            <summary>
            根据BMID获得其会员分类信息
            </summary>
            <param name="BMID">BMID</param>
            <returns>会员分类列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.GetServiceByMemberSortID(System.Guid)">
            <summary>
            获得某会员分类的服务信息
            </summary>
            <param name="memberSortID">会员分类ID</param>
            <returns>服务列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.GetUniMemberSort">
            <summary>
            返回联嘉卡的所有类别
            </summary>
            <returns>会员类别列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.SelectMemberSortByUniCardPrefix(System.String)">
            <summary>
            根据号段前缀检索
            </summary>
            <param name="uniCardPrefix">号段前缀</param>
            <returns>会员种类实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSort.GetMemberSortByID(System.Guid)">
            <summary>
            根据会员种类ID获得会员种类信息
            </summary>
            <param name="memberSortID">会员种类ID</param>
            <returns>会员种类实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.InsertMemberSortOrService(uni2uni.com.Model.User.Entity.Entity_MemberSortOrService)">
            <summary>
            添加一条会员种类+服务信息
            </summary>
            <param name="memberSortOrService">会员种类+服务实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.UpdateMemberSortOrService(uni2uni.com.Model.User.Entity.Entity_MemberSortOrService)">
            <summary>
            更新一条会员种类+服务信息
            </summary>
            <param name="memberSortOrService">会员种类+服务实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.DeleteMemberSortOrService(System.Guid)">
            <summary>
            删除一条会员种类+服务信息
            </summary>
            <param name="memberSortOrService">会员种类+服务ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.SelectByMemberSortOrServiceID(System.Guid)">
            <summary>
            根据会员种类+服务ID获得会员种类+服务信息
            </summary>
            <param name="memberSortOrServiceID">会员种类+服务ID</param>
            <returns>会员种类+服务信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.SelectByMemberSortID(System.Guid)">
            <summary>
            查询某会员种类的会员种类+服务信息
            </summary>
            <param name="memberSortID">会员种类ID</param>
            <returns>会员种类+服务实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.SelectByServiceID(System.Guid)">
            <summary>
            查询使用某服务的会员种类+服务信息
            </summary>
            <param name="serviceID">服务ID</param>
            <returns>会员种类+服务实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.GetServiceByBMID(System.Guid)">
            <summary>
             根据BMID查询相关服务列表
            </summary>
            <param name="nBMID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.GetServiceByMemberSortID(System.Guid)">
            <summary>
             根据MemberID查询相关服务列表
            </summary>
            <param name="nBMID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberSortOrService.GetBMServiceByMemberSortOrServiceID(System.Guid)">
            <summary>
            根据ID获得BM服务的详细资料
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.InsertMemberTypeGrade(uni2uni.com.Model.User.Entity.Entity_MemberTypeGrade)">
            <summary>
            增加会员类别级别定义信息（返佣比例）--默认设置
            </summary>
            <param name="membertyegrade">会员类别级别定义实体类</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.InsertMemberTypeGradeCondition(uni2uni.com.Model.User.Entity.Entity_MemberTypeGrade,System.String,System.String,System.String,System.String)">
            <summary>
            增加会员类别级别定义信息（返佣比例）--累计消费消费金额设置和累计消费消费金额设置结合
            </summary>
            <param name="membertyegrade">会员类别级别定义实体类</param>
            <param name="strSumMoney">累计消费金额(以分计算)</param>
            <param name="strMonth">统计的月数量</param>
            <param name="strMoney">月平均消费金额(以分计算)</param>
            <param name="strDescript">该级别的说明</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.InsertMemberTypeGrade(uni2uni.com.Model.User.Entity.Entity_MemberTypeGrade,System.String,System.Int32,System.String)">
            <summary>
            增加会员类别级别定义信息（返佣比例）--月平均消费金额设置
            </summary>
            <param name="membertyegrade">会员类别级别定义实体类</param>
            <param name="strMonth">统计的月数量</param>
            <param name="dMoney">月平均消费金额(以分计算)</param>
            <param name="strDescript">该级别的说明</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.InsertMemberTypeGrade(uni2uni.com.Model.User.Entity.Entity_MemberTypeGrade,System.Int32,System.String)">
            <summary>
            增加会员类别级别定义信息（返佣比例）--累计消费消费金额设置
            </summary>
            <param name="membertyegrade">会员类别级别定义实体类</param>
            <param name="nSumMoney">累计消费金额(以分计算)</param>
            <param name="strDescript">该级别的说明</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.UpdateMemberTypeGrade(uni2uni.com.Model.User.Entity.Entity_MemberTypeGrade)">
            <summary>
            修改会员类别级别定义信息
            </summary>
            <param name="membertyegrade">会员类别级别定义实体类</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.DeleteMemberTypeGradeByUid(System.String)">
            <summary>
            根据唯一标示号删除一条会员类别级别定义信息
            </summary>
            <param name="strUid">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.SelectMemberTypeGrade">
            <summary>
            获取所有会员类别级别定义信息
            </summary>
            <returns>会员类别级别定义实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.SelectMemberTypeGradeByUid(System.String)">
            <summary>
            根据唯一标示号获取会员类别级别定义信息
            </summary>
            <param name="strUid">唯一标示号</param>
            <returns>会员类别级别定义实体类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGrade.SelectMemberTypeGradeByMemberTypeID(System.String)">
            <summary>
            根据会员类别号获取会员类别级别定义信息
            </summary>
            <param name="strUid">会员类别号</param>
            <returns>会员类别级别定义实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGradeRelated.SelectMemberTypeGradeRelatedByMemberTypeID(System.String)">
            <summary>
            根据会员类型级别ID获取会员类别级别关联信息信息
            </summary>
            <param name="strMemberTypeID">会员类型级别ID</param>
            <returns>会员类别级别关联信息实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMemberTypeGradeRelated.DeleteMemberTypeGradeRelatedByID(System.String)">
            <summary>
            根据唯一标示号删除一条会员类别级别积分条件信息
            </summary>
            <param name="strUid">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMonthAveIntergalGrade.SelectMonthAveIntergalGradeByGradeUID(System.String)">
            <summary>
            根据唯一标示号获取月平均积分级别定义信息
            </summary>
            <param name="strUid">唯一标示号</param>
            <returns>月平均积分级别定义实体类</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IMonthAveIntergalGrade.DeleteMonthAveIntergalGradeByGradeUID(System.String)">
            <summary>
            根据唯一标示号删除一条月平均积分级别定义信息
            </summary>
            <param name="strUid">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IOtherInfo.AddNewOtherInfo(uni2uni.com.Model.User.Entity.Entity_OtherInfoManage)">
            <summary>
            添加一条联系人信息
            </summary>
            <param name="ettOtherInfo">联系人实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IOtherInfo.UpdateOtherInfo(uni2uni.com.Model.User.Entity.Entity_OtherInfoManage)">
            <summary>
            更新一条联系人信息
            </summary>
            <param name="ettOtherInfo">联系人实体</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IOtherInfo.DeleteOtherInfo(System.Guid)">
            <summary>
            删除一条联系人信息
            </summary>
            <param name="MemberID">OIID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IOtherInfo.GetOtherInfoListByMemberID(System.Guid)">
            <summary>
            根据会员ID获取他的联系人列表
            </summary>
            <param name="MemberID">会员ID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IOtherInfo.GetOtherInfoByID(System.Guid)">
            <summary>
            根据OIID获得联系人信息
            </summary>
            <param name="OIID">OIID</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.InsertPreference(uni2uni.com.Model.User.Entity.Entity_Preference,uni2uni.com.Model.User.Entity.Entity_CustPreference,uni2uni.com.Model.User.Entity.Entity_RequirementPreference)">
            <summary>
            添加一条偏好信息及对应关系
            </summary>
            <param name="Preference">偏好基础信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.InsertCustPreference(uni2uni.com.Model.User.Entity.Entity_CustPreference)">
            <summary>
            添加一条偏好信息
            </summary>
            <param name="Preference">偏好基础信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.DeletePreference(System.Int64,System.Guid)">
            <summary>
            删除某个偏好
            </summary>
            <param name="PreferenceID">偏好编号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.DeleteRequirementPreference(System.Guid,System.Guid)">
            <summary>
            删除某个需求偏好
            </summary>
            <param name="PreferenceID">偏好编号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectAllPreference">
            <summary>
            获得所有偏好信息
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByMemberID(System.Guid)">
            <summary>
            获得客户的偏好信息
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByIDs(System.Guid,System.Int32)">
            <summary>
            获得客户指定类别的偏好信息
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectPreferenceByName(System.String,System.Int32)">
            <summary>
            获得指定偏好的数量
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectMaxPreferenceID">
            <summary>
            获得最大的偏好ID
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByMemberIDAndPreferenceID(System.Guid,System.Int64)">
            <summary>
            查看客户偏好是否已存在
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByMemberIDAndPreferenceIDAndRequirementId(System.Guid,System.Int64,System.Guid)">
            <summary>
            查看客户需求偏好是否已存在
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByMemberIDAndRequirementId(System.Guid,System.Guid)">
            <summary>
            获得客户需求的偏好信息
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByIDsAndRequirementId(System.Guid,System.Int32,System.Guid)">
            <summary>
            获得客户指定类别的需求偏好信息
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectRequirementPreferenceByMemberIDAndPreferenceID(System.Guid,System.Int64)">
            <summary>
            获得客户需求的指定偏好信息
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreference.SelectCustPreferenceByMemberIDAndPreferenceID1(System.Guid,System.Int64)">
            <summary>
            查看客户偏好是否已存在
            </summary>
            <returns>偏好基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreferenceClass.InsertPreferenceClass(uni2uni.com.Model.User.Entity.Entity_PreferenceClass)">
            <summary>
            添加一条偏好分类信息
            </summary>
            <param name="PreferenceClass">偏好分类基础信息实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreferenceClass.UpdatePreferenceClass(uni2uni.com.Model.User.Entity.Entity_PreferenceClass)">
            <summary>
            修改偏好分类基础信息
            </summary>
            <param name="PreferenceClass"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreferenceClass.DeletePreferenceClass(System.Int32)">
            <summary>
            删除某个偏好分类
            </summary>
            <param name="PreferenceClassID">偏好分类编号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreferenceClass.SelectAllPreferenceClass">
            <summary>
            获得所有偏好分类信息
            </summary>
            <returns>偏好分类基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IPreferenceClass.SelectPreferenceClassByName(System.String)">
            <summary>
            获得指定偏好分类的数量
            </summary>
            <returns>偏好分类基本信息实体列表</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IRegister.RegesterMember(uni2uni.com.Model.User.Entity.Entity_MemberBase)">
            <summary>
            注册用户
            </summary>
            <param name="member">Entity_MemberBase实体</param>
            <returns>Bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IRegister.CheckMemberByEmail(uni2uni.com.Model.User.Entity.Entity_MemberBase)">
            <summary>
            检测Email用户是否存在
            </summary>
            <param name="member">Entity_MemberBase实体</param>
            <returns>Bool</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.UpdateSaleCardReocrd(uni2uni.com.Model.User.Entity.Entity_SaleCardRecord)">
            <summary>
            更新售卡续费记录
            </summary>
            <param name="entity_SaleCardRecord"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.DeleteSaleCardReocrd(System.Guid)">
            <summary>
            删除售卡续费记录
            </summary>
            <param name="gradeUid"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.GetSaleCardRecordByID(System.Guid)">
            <summary>
            根据ID查询售卡续费记录
            </summary>
            <param name="SaleCardReocrdID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.GetSaleCardRecordByCardAndActivedTime(System.String)">
            <summary>
            根据卡号和当前时间查询售卡续费记录
            </summary>
            <param name="cardcode"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.GetActivedSaleCardRecord(System.String)">
            <summary>
            获得激活时某会员卡所有有效售卡续费记录
            </summary>
            <param name="cardcode"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.SaleCard(uni2uni.com.Model.User.Entity.Entity_SaleCardRecord)">
            <summary>
            售卡
            </summary>
            <param name="ettSaleCardRecord"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.RenewCard(uni2uni.com.Model.User.Entity.Entity_SaleCardRecord)">
            <summary>
            续费
            </summary>
            <param name="ettSaleCardRecord"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.SelectSaleCardRecordByCondition(System.Guid,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            根据条件查询售卡续费记录
            </summary>
            <param name="MemberSortID"></param>
            <param name="SaleBeginTime"></param>
            <param name="SaleEndTime"></param>
            <param name="CardID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.CardAreaIsRepeat(System.String,System.String,System.Guid)">
            <summary>
            售卡时判断卡号段是否与已有数据有重叠
            </summary>
            <param name="beginCard"></param>
            <param name="endCard"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISaleCardReocrd.GetRecordByCardArea_Sort_Status(System.String,System.String,System.Guid,System.Byte)">
            <summary>
            获得某会员种类的某号段中某状态（0:售卡 1:个人续费 2:团体续费）的数据
            </summary>
            <param name="begincard">begincard</param>
            <param name="endcard">endcard</param>
            <param name="membersortID">membersortID</param>
            <param name="status">（0:售卡 1:个人续费 2:团体续费）</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISearchPwd.InsertSearchPwd(System.Guid,System.String)">
            <summary>
            插入找回密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISearchPwd.DeleteSearchPwd(System.Guid)">
            <summary>
            删除找回密码实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISearchPwd.SelectSearchPwdByEmail(System.String)">
            <summary>
            根据邮箱查找
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ISearchPwd.SelectSearchPwdByGuid(System.Guid)">
            <summary>
            根据guid查找
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.AddNewService(uni2uni.com.Model.User.Entity.Entity_Service)">
            <summary>
            添加一条服务记录
            </summary>
            <param name="entity_Service"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.UpdateService(uni2uni.com.Model.User.Entity.Entity_Service)">
            <summary>
            修改一条服务记录
            </summary>
            <param name="entity_Service"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.DeleteService(System.Guid)">
            <summary>
            删除一条服务记录
            </summary>
            <param name="entity_Service"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.GetServiceList">
            <summary>
            获得全部服务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.GetServiceByID(System.Guid)">
            <summary>
            通过ID获得一条服务
            </summary>
            <param name="nServiceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.GetBMService(System.Guid)">
            <summary>
            获得一个BM的所有服务列表
            </summary>
            <param name="nBMID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.GetBMServiceBySortID(System.Guid)">
            <summary>
            获得一个BM的其中一个MemberSort所有服务列表
            </summary>
            <param name="nBMID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.GetBMServiceByMemberSortOrServiceID(System.Guid)">
            <summary>
            根据ID获得BM服务的详细资料
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.GetMemberSortServiceByID(System.Guid)">
            <summary>
            通过MemberSortOrServiceID获得一条BM服务记录
            </summary>
            <param name="nServiceID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.AddBMService(uni2uni.com.Model.User.Entity.Entity_MemberSortOrService)">
            <summary>
            添加一条会员种类+服务信息
            </summary>
            <param name="memberSortOrService">会员种类+服务实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.UpdateBMService(uni2uni.com.Model.User.Entity.Entity_MemberSortOrService)">
            <summary>
            修改一条会员种类+服务信息
            </summary>
            <param name="memberSortOrService"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IService.ServiceExist(System.String)">
            <summary>
            通过服务名称判断是否存在此服务
            </summary>
            <param name="strServiceName"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceApply.InsertServiceApply(uni2uni.com.Model.User.Entity.Entity_ServiceApply)">
            <summary>
            插入秘书申请数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceApply.UpdateServiceApply(uni2uni.com.Model.User.Entity.Entity_ServiceApply)">
            <summary>
            修改秘书申请数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceApply.UpdateServiceApplyStatus(uni2uni.com.Model.User.Entity.Entity_ServiceApply)">
            <summary>
            修改秘书申请数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceApply.GetServiceApplyAll(uni2uni.com.Model.User.Entity.Entity_ServiceApply)">
            <summary>
            返回秘书申请数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceApply.GetServiceApplyByApplyID(System.Guid)">
            <summary>
            返回秘书申请数据
            </summary>
            <param name="ApplyID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceLog.InsertServiceLog(uni2uni.com.Model.User.Entity.Entity_ServiceLog)">
            <summary>
            插入服务日志
            </summary>
            <param name="entity_ServiceLog">服务日志实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceLog.UpdateServiceLog(uni2uni.com.Model.User.Entity.Entity_ServiceLog)">
            <summary>
            修改服务日志
            </summary>
            <param name="entity_ServiceLog">服务日志实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceLog.DeleteServiceLog(System.Guid)">
            <summary>
            删除服务日志
            </summary>
            <param name="ServiceLogID">服务日志ID</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceLog.SelectServiceLog(System.Guid)">
            <summary>
            根据服务日志ＩＤ获得服务日志信息
            </summary>
            <param name="ServiceLogID">服务日志ＩＤ</param>
            <returns>服务日志实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceLog.SelectAllServiceLog">
            <summary>
            获得所有服务记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IServiceLog.SelectServiceLogByCondition(System.Guid,System.Guid,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Select ServiceLog By Condition
            </summary>
            <param name="memberID"></param>
            <param name="ServiceID"></param>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="status"></param>
            <param name="pagesize"></param>
            <param name="pageid"></param>
            <param name="isFirstTime"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ITotalGradeIntegral.SelectTotalGradeIntegral(System.Guid)">
            <summary>
            根据标示号获取总金额消费的返还规则
            </summary>
            <param name="gradeUid">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ITotalGradeIntegral.DeleteTotalGradeIntegral(System.Guid)">
            <summary>
            根据标示号删除一条总金额消费的返还规则
            </summary>
            <param name="gradeUid">唯一标示号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ITypeBaseIntegral.InsertTypeBaseIntegral(uni2uni.com.Model.User.Entity.Entity_TypeBaseIntegral)">
            <summary>
            添加频道积分返还规则
            </summary>
            <param name="entity_TypeBaseIntegral">频道积分实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ITypeBaseIntegral.UpdateTypeBaseIntegral(uni2uni.com.Model.User.Entity.Entity_TypeBaseIntegral)">
            <summary>
            修改频道积分返还规则
            </summary>
            <param name="entity_TypeBaseIntegral">频道积分实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ITypeBaseIntegral.SelectTypeBaseIntegral(System.String)">
            <summary>
            根据频道号码查询频道积分返还规则
            </summary>
            <param name="channeltype">频道号码</param>
            <returns>频道积分返还规则实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.ITypeBaseIntegral.GetMemberTypeIntergral(System.String,System.String,System.Decimal)">
            <summary>
            获取某个会员某个频道 金额所获得的积分
            </summary>
            <param name="strMemberID">会员标识号</param>
            <param name="strTypeID">频道类型ID号</param>
            <param name="strMoney">订购金额</param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.InsertUniMemberCard(uni2uni.com.Model.User.Entity.Entity_UniMemberCard)">
            <summary>
            增加联嘉卡信息
            </summary>
            <param name="entity_UniMemberCard">联嘉卡实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.UpdateUniMemberCard(uni2uni.com.Model.User.Entity.Entity_UniMemberCard)">
            <summary>
            修改联嘉卡信息
            </summary>
            <param name="entity_UniMemberCard">联嘉卡实体</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.UpdateUniMemberCardBetweenID(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            根据卡号段进行发卡处理
            </summary>
            <param name="strStartCard">起始卡号</param>
            <param name="strEndCard">结束卡号</param>
            <param name="HasCard">是否有实物卡0没有 1有</param>
            <param name="IsNet">是否是网上注册使用0不是1是</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.UpdateUniMemberCardListID(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            根据卡号集合进行发卡处理，其中卡号以,分隔
            </summary>
            <param name="strCardListID">卡号集合</param>
            <param name="HasCard">是否有实物卡0没有 1有</param>
            <param name="IsNet">是否是网上注册使用0不是1是</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.DeleteUniMemberCard(System.String)">
            <summary>
            删除联嘉卡信息
            </summary>
            <param name="UniMemberCardID">卡号</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.SelectUniMemberCard(System.String)">
            <summary>
            以联嘉卡卡号查询联嘉卡信息
            </summary>
            <param name="UniMemberCardID">卡号</param>
            <returns>联嘉卡实体</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.SelectUniMemberCardBetweenID(System.String,System.String)">
            <summary>
            根据卡号段查询卡信息
            </summary>
            <param name="strStartCard">起始卡号</param>
            <param name="strEndCard">结束卡号</param>
            <returns>Entity_UniMemberCard 联嘉实体类集合</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMemberCard.SelectUniMemberCardInfo(System.String,System.String)">
            <summary>
            检查用户的卡号信息
            </summary>
            <param name="strCard">卡号</param>
            <param name="strPwd">密码</param>
            <returns>Entity_UniMemberCard 联嘉实体类</returns>
        </member>
        <member name="T:uni2uni.com.IBLL.User.IUniMoneyRecord">
            <summary>
            UniMoneyRecord逻辑层接口
            </summary>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.InsertUniMoneyRecord(uni2uni.com.Model.User.Entity.Entity_UniMoneyRecord)">
            <summary>
            插入代金券记录
            </summary>
            <param name="entity_UniMoneyRecord">代金券记录实体</param>
            <returns>true/false</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetUniMoneyRecordByCondition(uni2uni.com.Model.User.Entity.BEntity_UniMoneyRecordQueryCondition)">
            <summary>
            根据条件查询代金券记录
            </summary>
            <param name="uniMoneyRecordQueryCondition">查询条件</param>
            <returns>代金券记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetUniMoneyRecordByRecordId(System.Guid)">
            <summary>
            通过记录ID查询代金券记录
            </summary>
            <param name="recordId">记录ID</param>
            <returns>代金券记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetUniMoneyRecordByRelationID(System.String)">
            <summary>
            通过订单ID查询代金券记录
            </summary>
            <param name="relationID">订单ID</param>
            <returns>代金券记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetBUniMoneyRecordByRelationID(System.String)">
            <summary>
            通过订单ID查询代金券记录
            </summary>
            <param name="relationID">订单ID</param>
            <returns>代金券记录</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetUniMoneyRecordByMemberID(System.Guid)">
            <summary>
            查询用户积分兑换信息
            </summary>
            <param name="memberID"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetTopUniMoneyRecordByMemberID(System.Guid,System.Int32)">
            <summary>
            查询用户积分兑换信息
            </summary>
            <param name="memberID"></param>
            <param name="topNum"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniMoneyRecord.GetUniMoneyRecordByEntity(uni2uni.com.Model.User.Entity.Entity_UniMoneyRecord)">
            <summary>
            按条件查询
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniPay.CreateUniPayForUser(uni2uni.com.Model.User.Entity.Entity_MemberExtend)">
            <summary>
            为用户创建支付+个人信息
            </summary>
            <param name="memberextend">MemberExtend实体</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniPay.ChangeUniPayPwd(System.Guid,System.String)">
            <summary>
            修改用户支付密码
            </summary>
            <param name="memberid">会员ID</param>
            <param name="newPassword">新密码</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniPay.CheckUniPayPwd(System.Guid,System.String)">
            <summary>
            检查支付密码是否正确
            </summary>
            <param name="memberid">客户ID</param>
            <param name="password">客户填写的密码</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniPay.CheckPwdQA(System.Guid,System.String,System.String)">
            <summary>
            检查支付密码保护答案是否正确
            </summary>
            <param name="memberid">客户ID</param>
            <param name="answerOne">答案1</param>
            <param name="answerTwo">答案2</param>
            <returns>是否正确</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniPay.CheckUniPayInfo(System.Guid)">
            <summary>
            检查是否存有客户支付+信息
            </summary>
            <param name="memberid">用户ID</param>
            <returns>是否存在支付+信息</returns>
        </member>
        <member name="M:uni2uni.com.IBLL.User.IUniPay.GetUniPayInfoByMemberID(System.Guid)">
            <summary>
            通过会员ID获得会员支付+信息
            </summary>
            <param name="memberid">会员ID</param>
            <returns>会员支付+信息实体</returns>
        </member>
    </members>
</doc>
